/* actvte.h -- Header File for actvte.c
 * Copyright (C) 1986-2017 Gensym Corporation.  All Rights Reserved.
 */


/* Symbol Definitions */
extern Object Qblock;
extern Object Qeval;

extern Object Pclos;
extern Object Pclos_run;
extern Object Pclosx;
extern Object Pcl;
extern Object Pcl_user;
extern Object Pkeyword;
extern Object Ptrun;
extern Object Ptx;

/* function declarations */

#ifdef USE_PROTOTYPES

extern Object activate_for_entity(Object);
extern Object activate_for_kb_workspace(Object);
extern Object activate_if_possible_and_propagate_for_entity(Object);
extern Object activate_if_possible_and_propagate_for_kb_frame(Object);
extern Object activate_if_possible_and_propagate_for_kb_workspace(Object);
extern Object activate_in_new_activation_unit(Object);
extern Object ancestor_p(Object,Object);
extern Object assq_function(Object,Object);
extern Object begin_collecting_data_for_inference_engine(Object,Object);
extern Object cancel_and_reclaim_scheduled_queue_element_1(Object);
extern Object clean_up_items_needing_initialization(void);
extern Object clear_items_needing_initialization_tree(Object);
extern Object collect_subclasses(Object);
extern Object complete_initial_rules(Object);
extern Object constant_queue_next(Object,Object);
extern Object constant_queue_push_right(Object,Object);
extern Object copy_frame_serial_number(Object);
extern Object copy_managed_float(Object);
extern Object copy_managed_long(Object);
extern Object data_type_of_variable_or_parameter_datum(Object,Object);
extern Object deactivate_and_propagate_for_entity(Object,Object);
extern Object deactivate_and_propagate_for_kb_frame(Object,Object);
extern Object deactivate_and_propagate_for_kb_workspace(Object,Object);
extern Object deactivate_for_entity(Object);
extern Object deactivate_for_kb_workspace(Object);
extern Object deactivate_initial_rules(Object);
extern Object decache_connection_roles(Object);
extern Object def_bombout_clean_up_function(Object);
extern Object eval_cons_1(Object,Object);
extern Object existence_depends_on_p(Object,Object);
extern Object existence_depends_on_p_1(Object,Object);
extern Object frame_class_existence_depends_on_p_1(Object,Object);
extern Object frame_not_bad_p(Object);
extern Object future_task_schedule_2(Object);
extern Object generate_and_schedule_rule_instances(Object,Object,Object,Object,Object,Object,Object,Object);
extern Object gensym_cons_1(Object,Object);
extern Object gensym_list_2(Object,Object);
extern Object get_defining_class_for_parent_attribute_if_any(Object);
extern Object get_instance_with_name_if_any(Object,Object);
extern Object get_lookup_slot_value(Object,Object);
extern Object get_lookup_slot_value_given_default(Object,Object,Object);
extern Object get_pretty_slot_name_for_parent_attribute_if_any(Object);
extern Object get_property_value_function(int,...);
extern Object get_property_value_in_object_configuration(Object,Object,Object);
extern Object get_slot_description_value(Object,Object);
extern Object get_symbol_properties_function(Object);
extern Object getfq_function_no_default(Object,Object);
extern Object give_warning_1(int,...);
extern Object handle_collected_updates_to_sensor_attributes(void);
extern Object handle_completion_of_initial_rule(Object);
extern Object initialize_g2_array(Object);
extern Object initialize_items_needing_initialization(void);
extern Object invoke_rule_universally(Object);
extern Object lookup_kb_specific_property_value(Object,Object);
extern Object make_items_needing_initialization_skip_list_sentinel(Object,Object);
extern Object make_items_needing_initialization_tree_function(void);
extern Object make_permanent_schedule_task_structure_internal(void);
extern Object manually_disable_for_kb_frame(Object);
extern Object manually_enable_for_kb_frame(Object);
extern Object memq_function(Object,Object);
extern Object mutate_global_property(Object,Object,Object);
extern Object note_ancestor_manually_enabled_for_kb_frame(Object);
extern Object note_ancestor_manually_enabled_for_kb_workspace(Object);
extern Object note_change_to_block_1(Object,Object);
extern Object note_change_to_runtime_data_for_block_1(Object);
extern Object put_current_evaluation_value(Object,Object,Object,Object,Object);
extern Object put_current_value(int,...);
extern Object put_initial_float_value(Object,Object);
extern Object put_initial_long_value(Object,Object);
extern Object put_parent_for_its_indexed_attributes(int,...);
extern Object reclaim_gensym_tree_1(Object);
extern Object reclaim_managed_simple_float_array_of_length_1(Object);
extern Object reclaim_managed_simple_long_array_of_length_1(Object);
extern Object reclaim_schedule_task_args(Object);
extern Object reclaim_text_string(Object);
extern Object record_system_variable(Object,Object,Object,Object,Object,Object,Object);
extern Object remove_element_from_all_g2_lists(Object,Object);
extern Object remove_parent_for_its_indexed_attributes(Object);
extern Object remove_parent_if_indexed_attribute(Object,Object,Object,Object);
extern Object replenish_lookup_cons_pool(void);
extern Object resume_activation(Object);
extern Object schedule_all_cyclic_rules(void);
extern Object schedule_all_cyclic_rules_1(Object);
extern Object schedule_initial_rules_from_activated_kb_workspace(Object,Object,Object);
extern Object schedule_scanned_rules(Object);
extern Object schedule_task_to_invoke_existential_rules(Object,Object);
extern Object scope_cons(Object,Object);
extern Object send_ws_representations_item_virtual_attribute_change(Object,Object,Object);
extern Object superior_frame(Object);
extern Object suspend_activation(Object);
extern Object trigger_and_clear_event_detectors(Object);
extern Object update_representations_of_slot_value(int,...);
extern Object update_subscriptions_from_virtual_attribute_change(Object,Object,Object);
extern Object warn_of_undefined_data_server(Object,Object);

#else

extern Object activate_for_entity();
extern Object activate_for_kb_workspace();
extern Object activate_if_possible_and_propagate_for_entity();
extern Object activate_if_possible_and_propagate_for_kb_frame();
extern Object activate_if_possible_and_propagate_for_kb_workspace();
extern Object activate_in_new_activation_unit();
extern Object ancestor_p();
extern Object assq_function();
extern Object begin_collecting_data_for_inference_engine();
extern Object cancel_and_reclaim_scheduled_queue_element_1();
extern Object clean_up_items_needing_initialization();
extern Object clear_items_needing_initialization_tree();
extern Object collect_subclasses();
extern Object complete_initial_rules();
extern Object constant_queue_next();
extern Object constant_queue_push_right();
extern Object copy_frame_serial_number();
extern Object copy_managed_float();
extern Object copy_managed_long();
extern Object data_type_of_variable_or_parameter_datum();
extern Object deactivate_and_propagate_for_entity();
extern Object deactivate_and_propagate_for_kb_frame();
extern Object deactivate_and_propagate_for_kb_workspace();
extern Object deactivate_for_entity();
extern Object deactivate_for_kb_workspace();
extern Object deactivate_initial_rules();
extern Object decache_connection_roles();
extern Object def_bombout_clean_up_function();
extern Object eval_cons_1();
extern Object existence_depends_on_p();
extern Object existence_depends_on_p_1();
extern Object frame_class_existence_depends_on_p_1();
extern Object frame_not_bad_p();
extern Object future_task_schedule_2();
extern Object generate_and_schedule_rule_instances();
extern Object gensym_cons_1();
extern Object gensym_list_2();
extern Object get_defining_class_for_parent_attribute_if_any();
extern Object get_instance_with_name_if_any();
extern Object get_lookup_slot_value();
extern Object get_lookup_slot_value_given_default();
extern Object get_pretty_slot_name_for_parent_attribute_if_any();
extern Object get_property_value_function();
extern Object get_property_value_in_object_configuration();
extern Object get_slot_description_value();
extern Object get_symbol_properties_function();
extern Object getfq_function_no_default();
extern Object give_warning_1();
extern Object handle_collected_updates_to_sensor_attributes();
extern Object handle_completion_of_initial_rule();
extern Object initialize_g2_array();
extern Object initialize_items_needing_initialization();
extern Object invoke_rule_universally();
extern Object lookup_kb_specific_property_value();
extern Object make_items_needing_initialization_skip_list_sentinel();
extern Object make_items_needing_initialization_tree_function();
extern Object make_permanent_schedule_task_structure_internal();
extern Object manually_disable_for_kb_frame();
extern Object manually_enable_for_kb_frame();
extern Object memq_function();
extern Object mutate_global_property();
extern Object note_ancestor_manually_enabled_for_kb_frame();
extern Object note_ancestor_manually_enabled_for_kb_workspace();
extern Object note_change_to_block_1();
extern Object note_change_to_runtime_data_for_block_1();
extern Object put_current_evaluation_value();
extern Object put_current_value();
extern Object put_initial_float_value();
extern Object put_initial_long_value();
extern Object put_parent_for_its_indexed_attributes();
extern Object reclaim_gensym_tree_1();
extern Object reclaim_managed_simple_float_array_of_length_1();
extern Object reclaim_managed_simple_long_array_of_length_1();
extern Object reclaim_schedule_task_args();
extern Object reclaim_text_string();
extern Object record_system_variable();
extern Object remove_element_from_all_g2_lists();
extern Object remove_parent_for_its_indexed_attributes();
extern Object remove_parent_if_indexed_attribute();
extern Object replenish_lookup_cons_pool();
extern Object resume_activation();
extern Object schedule_all_cyclic_rules();
extern Object schedule_all_cyclic_rules_1();
extern Object schedule_initial_rules_from_activated_kb_workspace();
extern Object schedule_scanned_rules();
extern Object schedule_task_to_invoke_existential_rules();
extern Object scope_cons();
extern Object send_ws_representations_item_virtual_attribute_change();
extern Object superior_frame();
extern Object suspend_activation();
extern Object trigger_and_clear_event_detectors();
extern Object update_representations_of_slot_value();
extern Object update_subscriptions_from_virtual_attribute_change();
extern Object warn_of_undefined_data_server();

#endif

/* variables/constants */
extern Object Available_eval_conses_tail_vector;
extern Object Available_eval_conses_vector;
extern Object Available_lookup_conses_tail_vector;
extern Object Available_lookup_conses_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Block_class_description, Qblock_class_description);
extern Object Chain_of_available_schedule_tasks_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Collected_updates_to_sensor_attributes, Qcollected_updates_to_sensor_attributes);
DECLARE_VARIABLE_WITH_SYMBOL(Collecting_updates_to_sensor_attributes_p, Qcollecting_updates_to_sensor_attributes_p);
DECLARE_VARIABLE_WITH_SYMBOL(Connection_class_description, Qconnection_class_description);
DECLARE_VARIABLE_WITH_SYMBOL(Current_computation_frame, Qcurrent_computation_frame);
DECLARE_VARIABLE_WITH_SYMBOL(Current_computation_instance, Qcurrent_computation_instance);
DECLARE_VARIABLE_WITH_SYMBOL(Current_g2_time, Qcurrent_g2_time);
DECLARE_VARIABLE_WITH_SYMBOL(Current_real_time, Qcurrent_real_time);
DECLARE_VARIABLE_WITH_SYMBOL(Current_schedule_task, Qcurrent_schedule_task);
extern Object Current_task_queue_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Current_thread_index, Qcurrent_thread_index);
extern Object Data_server_or_alias_qm_kbprop;
extern Object Deferred_task_queue_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Entity_class_description, Qentity_class_description);
DECLARE_VARIABLE_WITH_SYMBOL(Existence_classes_already_checked, Qexistence_classes_already_checked);
DECLARE_VARIABLE_WITH_SYMBOL(G2_array_class_description, Qg2_array_class_description);
DECLARE_VARIABLE_WITH_SYMBOL(G2_has_v5_mode_windows_p, Qg2_has_v5_mode_windows_p);
DECLARE_VARIABLE_WITH_SYMBOL(In_suspend_resume_p, Qin_suspend_resume_p);
DECLARE_VARIABLE_WITH_SYMBOL(Initializing_items_needing_initialization, Qinitializing_items_needing_initialization);
extern Object Instances_specific_to_this_class_kbprop;
DECLARE_VARIABLE_WITH_SYMBOL(Items_needing_initialization, Qitems_needing_initialization);
DECLARE_VARIABLE_WITH_SYMBOL(Items_needing_initialization_tree, Qitems_needing_initialization_tree);
DECLARE_VARIABLE_WITH_SYMBOL(Kb_workspace_class_description, Qkb_workspace_class_description);
DECLARE_VARIABLE_WITH_SYMBOL(Noting_changes_to_kb_p, Qnoting_changes_to_kb_p);
DECLARE_VARIABLE_WITH_SYMBOL(Priority_of_next_task, Qpriority_of_next_task);
DECLARE_VARIABLE_WITH_SYMBOL(Rule_class_description, Qrule_class_description);
DECLARE_VARIABLE_WITH_SYMBOL(Scope_conses, Qscope_conses);
DECLARE_VARIABLE_WITH_SYMBOL(Simulation_subtable_class_description, Qsimulation_subtable_class_description);
DECLARE_VARIABLE_WITH_SYMBOL(Structure_being_reclaimed, Qstructure_being_reclaimed);
DECLARE_VARIABLE_WITH_SYMBOL(Suppress_warning_message_header_qm, Qsuppress_warning_message_header_qm);
DECLARE_VARIABLE_WITH_SYMBOL(System_has_paused, Qsystem_has_paused);
DECLARE_VARIABLE_WITH_SYMBOL(System_is_running, Qsystem_is_running);
DECLARE_VARIABLE_WITH_SYMBOL(Variable_class_description, Qvariable_class_description);
DECLARE_VARIABLE_WITH_SYMBOL(Warmbooting_qm, Qwarmbooting_qm);
DECLARE_VARIABLE_WITH_SYMBOL(Warning_message_level, Qwarning_message_level);
DECLARE_VARIABLE_WITH_SYMBOL(Window_instigating_this_rule_instance_qm, Qwindow_instigating_this_rule_instance_qm);
DECLARE_VARIABLE_WITH_SYMBOL(Within_activate_for_kb_workspace, Qwithin_activate_for_kb_workspace);
DECLARE_VARIABLE_WITH_SYMBOL(Workspace_class_description, Qworkspace_class_description);
