/* cmpl2.h -- Header File for cmpl2.c
 * Copyright (C) 1986-2017 Gensym Corporation.  All Rights Reserved.
 */


/* Symbol Definitions */
extern Object Qplus;
extern Object Qand;
extern Object Kcount;
extern Object Qeq;
extern Object Qevery;
extern Object Qnot;
extern Object Qquote;
extern Object Qsequence;
extern Object Ktest;
extern Object Qthe;

extern Object Pclos;
extern Object Pclos_run;
extern Object Pclosx;
extern Object Pcl;
extern Object Pcl_user;
extern Object Pkeyword;
extern Object Ptrun;
extern Object Ptx;

/* function declarations */

#ifdef USE_PROTOTYPES

extern Object add_for_structure_to_local_binding_forms(Object);
extern Object add_for_structure_to_non_context_binding_forms(Object);
extern Object add_local_name_and_role_name_to_alist(Object,Object);
extern Object add_new_inverse_references(Object,Object);
extern Object add_or_use_rule_let_section(Object);
extern Object add_role_name_and_local_name_to_alist_of_runtime_instances(Object,Object);
extern Object add_to_for_structure_binding_expression(Object,Object);
extern Object add_to_local_names_not_associated_with_roles(Object);
extern Object assq_function(Object,Object);
extern Object atomic_naming_element_of_role(Object);
extern Object better_reference_provided_by_inverse_reference_qm(Object,Object,Object);
extern Object better_reference_provided_by_inverse_reference_rec_qm(Object,Object,Object);
extern Object build_inverse_reference_path(Object,Object);
extern Object build_inverse_reference_path_for_designation(Object,Object);
extern Object build_inverse_reference_path_rec(Object,Object);
extern Object build_optimized_reference_phrase(int,...);
extern Object build_optimized_reference_phrase_rec(Object,Object,Object);
extern Object change_reference_structures_at_all_higher_levels(Object,Object,Object);
extern Object check_for_ambiguous_reference(Object);
extern Object check_for_illegal_focus(Object,Object);
extern Object check_for_illegal_focus_in_rule_consequent(Object);
extern Object check_for_inverse_references(Object,Object);
extern Object check_for_inverse_references_rec(Object,Object,Object);
extern Object check_if_role_name_is_same_as_previous_local_name(Object);
extern Object combine_and_copy_references_for_expression(Object);
extern Object combine_designation_with_embedded_expression_if_appropriate(Object,Object);
extern Object combine_explicit_iteration_and_antecedent_reference_trees(Object,Object);
extern Object combine_inverse_reference_paths_with_local_reference_paths(Object,Object);
extern Object combine_iteration_forms_with_those_of_sub_expression(Object,Object,Object,Object);
extern Object combine_left_side_tree_with_right_side_tree(Object,Object);
extern Object combine_reference_finding_paths(Object);
extern Object combine_reference_finding_paths_1(Object,Object);
extern Object combine_reference_finding_paths_rec(Object,Object);
extern Object combine_reference_paths_for_explicit_iteration_designations(void);
extern Object combine_references_for_actions(Object);
extern Object combine_references_for_antecedent_and_consequent(Object,Object,Object);
extern Object combine_references_for_designation(Object);
extern Object combine_references_for_expression(Object);
extern Object combine_sub_expression_with_expression(Object,Object);
extern Object combining_needing_roots_p(Object,Object);
extern Object compile1_call_assignment_action(Object);
extern Object compile1_color_changes(Object);
extern Object compile1_create_action(Object);
extern Object compile1_create_connection_spec(Object);
extern Object compile1_designation(Object);
extern Object compile1_designations_for_focus(Object,Object,Object,Object);
extern Object compile1_embedded_expression_if_appropriate(Object,Object,Object);
extern Object compile1_expression_according_to_template(Object);
extern Object compile1_expression_top(Object,Object,Object,Object,Object);
extern Object compile1_forward_explicit_iteration_designations(void);
extern Object compile1_forward_reference_for_designations(Object);
extern Object compile1_quantifier_or_aggregator(Object);
extern Object compile1_show_or_hide_argument(Object);
extern Object compile1_sub_expressions_according_to_template(Object,Object,Object);
extern Object compile2_action(Object);
extern Object compile2_action_according_to_template(Object,Object);
extern Object compile2_and_expression(Object);
extern Object compile2_comparison_operator_expression(Object);
extern Object compile2_decoupled_and(Object);
extern Object compile2_designations_from_explicit_iteration_forms(void);
extern Object compile2_embedded_expression(Object);
extern Object compile2_expression(Object);
extern Object compile2_expression_1(Object);
extern Object compile2_expression_1_top(Object);
extern Object compile2_expression_top(Object);
extern Object compile2_if_expression(Object);
extern Object compile2_inform(Object);
extern Object compile2_inform_message_expression(Object);
extern Object compile2_logical_operator_expression(Object);
extern Object compile2_name(Object);
extern Object compile2_not_expression(Object);
extern Object compile2_or_expression(Object);
extern Object compile2_providing_expression_collecting_iteration_forms(Object,Object,Object);
extern Object compile2_quantifier_or_aggregator(Object);
extern Object compile2_top_level_expression_and_insert(Object,Object);
extern Object compile3_expression(Object);
extern Object compile3_expression_top(Object);
extern Object compile3_for_structure(Object);
extern Object compile3_for_structure_according_to_quantifier(Object,Object,Object,Object);
extern Object compile3_quantifier_or_aggregator(Object);
extern Object compile3_quantifier_or_aggregator_if_ok(Object);
extern Object compile3_rule(Object,Object,Object,Object);
extern Object compile3_sub_expressions_of_listed_expression(Object);
extern Object compile_consequent(Object,Object);
extern Object compile_forward_context_iterator(Object);
extern Object compile_forward_reference_path(Object,Object);
extern Object compile_forward_reference_path_for_symbol(Object);
extern Object compile_non_providing_expression(Object);
extern Object compiler_error(int,...);
extern Object compiling_action_p(void);
extern Object copy_designation_dropping_local_names(Object);
extern Object copy_for_phrase(Object);
extern Object copy_list_using_phrase_conses(Object);
extern Object copy_reference_structure(int,...);
extern Object copy_tree_using_phrase_conses(Object);
extern Object designation_operator_or_giver_of_value_p(Object);
extern Object designation_requires_previous_reference_p(Object);
extern Object end_reference_structure_p(Object);
extern Object expression_for_compilation_designation_p(Object);
extern Object fatal_focus_error_qm(Object,Object);
extern Object find_target_name_of_reference_path(Object);
extern Object focus_reference_provides_binding_for_iteration_qm(Object);
extern Object generate_designation_with_embedded_expression(Object,Object,Object,Object);
extern Object generate_forward_context_iterator(Object,Object,Object);
extern Object generate_inverse_context_from_inverse_reference_path(void);
extern Object generate_let_binding_list_from_nested_for_structures(Object,Object);
extern Object get_copy_of_designations_for_actions(Object);
extern Object get_copy_of_designations_for_expression(Object,Object);
extern Object get_copy_of_designations_for_rule(Object,Object);
extern Object get_copy_of_reference_structure_in_highest_level_reference_tree(Object);
extern Object get_explicitly_specified_local_name_of_role_if_any(Object);
extern Object get_name_provided_by_role(Object);
extern Object get_new_role_given_role_and_local_name(Object,Object);
extern Object get_relevent_reference_structure_for_aggregator_scope(Object);
extern Object if_operator_p(Object);
extern Object illegal_focus_in_action_qm(Object,Object);
extern Object implicit_iterator_in_reference_structure(Object);
extern Object implicit_iterator_p(Object);
extern Object incorporate_iteration_forms_of_expression_and_sub_expression(Object,Object,Object,Object,Object);
extern Object insert_expression_into_for_structure_body(Object,Object);
extern Object insert_expressions_into_combined_iteration_forms(Object,Object,Object);
extern Object insert_wrapper_references_for_left_side_of_formula(Object);
extern Object interned_compilation_local_name_symbol(void);
extern Object inverse_reference_structure_contains_this_rule_nor_this_workspace(Object);
extern Object inverse_reference_structure_for_global_symbol_p(Object);
extern Object inverse_reference_structure_is_global_end_qm(Object);
extern Object logical_operator_p(Object);
extern Object lookup_action_template(Object);
extern Object lookup_function_template(Object);
extern Object make_compilation_reclaimable_expression_for_compilation(void);
extern Object make_compilation_reclaimable_for_structure(void);
extern Object make_compilation_reclaimable_reference_structure(void);
extern Object make_extra_reference_structure(Object,Object);
extern Object make_for_structure_for_optimized_path(Object,Object);
extern Object make_for_structure_given_reference_structure(Object);
extern Object make_global_reference_structure_for_symbol(Object);
extern Object make_needing_reference_structure_for_symbol(Object);
extern Object make_phrase_list(Object);
extern Object memq_function(Object,Object);
extern Object nconc_designations_from_sub_expression(Object,Object);
extern Object nest_listed_iteration_forms(Object,Object,Object);
extern Object operator_does_not_require_references_p(Object);
extern Object operator_to_check_for_illegal_focus_p(Object);
extern Object phrase_cons(Object,Object);
extern Object phrase_cons_with_args_reversed(Object,Object);
extern Object phrase_list_2(Object,Object);
extern Object phrase_list_3(Object,Object,Object);
extern Object phrase_number_p(Object);
extern Object quantifier_or_aggregator_p(Object);
extern Object record_system_variable(Object,Object,Object,Object,Object,Object,Object);
extern Object reference_depends_on_existence_qm(Object);
extern Object reference_structure_for_global_symbol_p(Object);
extern Object reference_structure_itself_provides_local_binding_qm(Object);
extern Object reference_structure_provides_binding_for_iteration_qm(Object);
extern Object reference_structure_provides_external_references_qm(Object);
extern Object reference_structure_provides_local_binding_qm(Object,Object);
extern Object reference_tree_has_iteration_qm(Object);
extern Object replace_compiler_generated_local_name_1(Object,Object);
extern Object replace_compiler_generated_local_name_with_name_from_source(Object,Object);
extern Object return_values_from_compile2_name(Object,Object,Object,Object,Object);
extern Object role_name_refers_to_item_declared_using_local_name_qm(Object);
extern Object rs_for_two_element_designation_with_non_atomic_role_p(Object);
extern Object rule_focus_inside_every_quantifier_qm(Object);
extern Object rule_focus_inside_illegal_expression_qm(Object);
extern Object rule_focus_inside_rule_body_qm(void);
extern Object set_inverse_references_for_actions(Object,Object);
extern Object simple_role_of_role(Object);
extern Object simple_role_p(Object);
extern Object substitute_nil_indicator(Object);
extern Object symbol_used_as_local_name_p(Object);
extern Object text_string_p(Object);
extern Object too_narrow_focus_qm(Object,Object,Object);
extern Object unauthorized_system_slot_p(Object);
extern Object valid_scope_p(Object);
extern Object wrap_non_context_top_level_binding_forms(Object,Object);

#else

extern Object add_for_structure_to_local_binding_forms();
extern Object add_for_structure_to_non_context_binding_forms();
extern Object add_local_name_and_role_name_to_alist();
extern Object add_new_inverse_references();
extern Object add_or_use_rule_let_section();
extern Object add_role_name_and_local_name_to_alist_of_runtime_instances();
extern Object add_to_for_structure_binding_expression();
extern Object add_to_local_names_not_associated_with_roles();
extern Object assq_function();
extern Object atomic_naming_element_of_role();
extern Object better_reference_provided_by_inverse_reference_qm();
extern Object better_reference_provided_by_inverse_reference_rec_qm();
extern Object build_inverse_reference_path();
extern Object build_inverse_reference_path_for_designation();
extern Object build_inverse_reference_path_rec();
extern Object build_optimized_reference_phrase();
extern Object build_optimized_reference_phrase_rec();
extern Object change_reference_structures_at_all_higher_levels();
extern Object check_for_ambiguous_reference();
extern Object check_for_illegal_focus();
extern Object check_for_illegal_focus_in_rule_consequent();
extern Object check_for_inverse_references();
extern Object check_for_inverse_references_rec();
extern Object check_if_role_name_is_same_as_previous_local_name();
extern Object combine_and_copy_references_for_expression();
extern Object combine_designation_with_embedded_expression_if_appropriate();
extern Object combine_explicit_iteration_and_antecedent_reference_trees();
extern Object combine_inverse_reference_paths_with_local_reference_paths();
extern Object combine_iteration_forms_with_those_of_sub_expression();
extern Object combine_left_side_tree_with_right_side_tree();
extern Object combine_reference_finding_paths();
extern Object combine_reference_finding_paths_1();
extern Object combine_reference_finding_paths_rec();
extern Object combine_reference_paths_for_explicit_iteration_designations();
extern Object combine_references_for_actions();
extern Object combine_references_for_antecedent_and_consequent();
extern Object combine_references_for_designation();
extern Object combine_references_for_expression();
extern Object combine_sub_expression_with_expression();
extern Object combining_needing_roots_p();
extern Object compile1_call_assignment_action();
extern Object compile1_color_changes();
extern Object compile1_create_action();
extern Object compile1_create_connection_spec();
extern Object compile1_designation();
extern Object compile1_designations_for_focus();
extern Object compile1_embedded_expression_if_appropriate();
extern Object compile1_expression_according_to_template();
extern Object compile1_expression_top();
extern Object compile1_forward_explicit_iteration_designations();
extern Object compile1_forward_reference_for_designations();
extern Object compile1_quantifier_or_aggregator();
extern Object compile1_show_or_hide_argument();
extern Object compile1_sub_expressions_according_to_template();
extern Object compile2_action();
extern Object compile2_action_according_to_template();
extern Object compile2_and_expression();
extern Object compile2_comparison_operator_expression();
extern Object compile2_decoupled_and();
extern Object compile2_designations_from_explicit_iteration_forms();
extern Object compile2_embedded_expression();
extern Object compile2_expression();
extern Object compile2_expression_1();
extern Object compile2_expression_1_top();
extern Object compile2_expression_top();
extern Object compile2_if_expression();
extern Object compile2_inform();
extern Object compile2_inform_message_expression();
extern Object compile2_logical_operator_expression();
extern Object compile2_name();
extern Object compile2_not_expression();
extern Object compile2_or_expression();
extern Object compile2_providing_expression_collecting_iteration_forms();
extern Object compile2_quantifier_or_aggregator();
extern Object compile2_top_level_expression_and_insert();
extern Object compile3_expression();
extern Object compile3_expression_top();
extern Object compile3_for_structure();
extern Object compile3_for_structure_according_to_quantifier();
extern Object compile3_quantifier_or_aggregator();
extern Object compile3_quantifier_or_aggregator_if_ok();
extern Object compile3_rule();
extern Object compile3_sub_expressions_of_listed_expression();
extern Object compile_consequent();
extern Object compile_forward_context_iterator();
extern Object compile_forward_reference_path();
extern Object compile_forward_reference_path_for_symbol();
extern Object compile_non_providing_expression();
extern Object compiler_error();
extern Object compiling_action_p();
extern Object copy_designation_dropping_local_names();
extern Object copy_for_phrase();
extern Object copy_list_using_phrase_conses();
extern Object copy_reference_structure();
extern Object copy_tree_using_phrase_conses();
extern Object designation_operator_or_giver_of_value_p();
extern Object designation_requires_previous_reference_p();
extern Object end_reference_structure_p();
extern Object expression_for_compilation_designation_p();
extern Object fatal_focus_error_qm();
extern Object find_target_name_of_reference_path();
extern Object focus_reference_provides_binding_for_iteration_qm();
extern Object generate_designation_with_embedded_expression();
extern Object generate_forward_context_iterator();
extern Object generate_inverse_context_from_inverse_reference_path();
extern Object generate_let_binding_list_from_nested_for_structures();
extern Object get_copy_of_designations_for_actions();
extern Object get_copy_of_designations_for_expression();
extern Object get_copy_of_designations_for_rule();
extern Object get_copy_of_reference_structure_in_highest_level_reference_tree();
extern Object get_explicitly_specified_local_name_of_role_if_any();
extern Object get_name_provided_by_role();
extern Object get_new_role_given_role_and_local_name();
extern Object get_relevent_reference_structure_for_aggregator_scope();
extern Object if_operator_p();
extern Object illegal_focus_in_action_qm();
extern Object implicit_iterator_in_reference_structure();
extern Object implicit_iterator_p();
extern Object incorporate_iteration_forms_of_expression_and_sub_expression();
extern Object insert_expression_into_for_structure_body();
extern Object insert_expressions_into_combined_iteration_forms();
extern Object insert_wrapper_references_for_left_side_of_formula();
extern Object interned_compilation_local_name_symbol();
extern Object inverse_reference_structure_contains_this_rule_nor_this_workspace();
extern Object inverse_reference_structure_for_global_symbol_p();
extern Object inverse_reference_structure_is_global_end_qm();
extern Object logical_operator_p();
extern Object lookup_action_template();
extern Object lookup_function_template();
extern Object make_compilation_reclaimable_expression_for_compilation();
extern Object make_compilation_reclaimable_for_structure();
extern Object make_compilation_reclaimable_reference_structure();
extern Object make_extra_reference_structure();
extern Object make_for_structure_for_optimized_path();
extern Object make_for_structure_given_reference_structure();
extern Object make_global_reference_structure_for_symbol();
extern Object make_needing_reference_structure_for_symbol();
extern Object make_phrase_list();
extern Object memq_function();
extern Object nconc_designations_from_sub_expression();
extern Object nest_listed_iteration_forms();
extern Object operator_does_not_require_references_p();
extern Object operator_to_check_for_illegal_focus_p();
extern Object phrase_cons();
extern Object phrase_cons_with_args_reversed();
extern Object phrase_list_2();
extern Object phrase_list_3();
extern Object phrase_number_p();
extern Object quantifier_or_aggregator_p();
extern Object record_system_variable();
extern Object reference_depends_on_existence_qm();
extern Object reference_structure_for_global_symbol_p();
extern Object reference_structure_itself_provides_local_binding_qm();
extern Object reference_structure_provides_binding_for_iteration_qm();
extern Object reference_structure_provides_external_references_qm();
extern Object reference_structure_provides_local_binding_qm();
extern Object reference_tree_has_iteration_qm();
extern Object replace_compiler_generated_local_name_1();
extern Object replace_compiler_generated_local_name_with_name_from_source();
extern Object return_values_from_compile2_name();
extern Object role_name_refers_to_item_declared_using_local_name_qm();
extern Object rs_for_two_element_designation_with_non_atomic_role_p();
extern Object rule_focus_inside_every_quantifier_qm();
extern Object rule_focus_inside_illegal_expression_qm();
extern Object rule_focus_inside_rule_body_qm();
extern Object set_inverse_references_for_actions();
extern Object simple_role_of_role();
extern Object simple_role_p();
extern Object substitute_nil_indicator();
extern Object symbol_used_as_local_name_p();
extern Object text_string_p();
extern Object too_narrow_focus_qm();
extern Object unauthorized_system_slot_p();
extern Object valid_scope_p();
extern Object wrap_non_context_top_level_binding_forms();

#endif

/* variables/constants */
DECLARE_VARIABLE_WITH_SYMBOL(Alist_of_local_names_and_role_names, Qalist_of_local_names_and_role_names);
DECLARE_VARIABLE_WITH_SYMBOL(Allow_in_line_designations_qm, Qallow_in_line_designations_qm);
DECLARE_VARIABLE_WITH_SYMBOL(Assignment_section_forms, Qassignment_section_forms);
DECLARE_VARIABLE_WITH_SYMBOL(Attribute_name_errors, Qattribute_name_errors);
DECLARE_VARIABLE_WITH_SYMBOL(Color_change_indicator, Qcolor_change_indicator);
DECLARE_VARIABLE_WITH_SYMBOL(Color_changes_indicator, Qcolor_changes_indicator);
DECLARE_VARIABLE_WITH_SYMBOL(Compiled_consequent_2, Qcompiled_consequent_2);
DECLARE_VARIABLE_WITH_SYMBOL(Compiling_antecedent_p, Qcompiling_antecedent_p);
DECLARE_VARIABLE_WITH_SYMBOL(Compiling_expression_p, Qcompiling_expression_p);
DECLARE_VARIABLE_WITH_SYMBOL(Compiling_rule_p, Qcompiling_rule_p);
DECLARE_VARIABLE_WITH_SYMBOL(Context_iteration_forms, Qcontext_iteration_forms);
DECLARE_VARIABLE_WITH_SYMBOL(Designations_from_explicit_iteration_forms, Qdesignations_from_explicit_iteration_forms);
DECLARE_VARIABLE_WITH_SYMBOL(Expression_list_indicator, Qexpression_list_indicator);
DECLARE_VARIABLE_WITH_SYMBOL(Fatal_focus_error_info_qm, Qfatal_focus_error_info_qm);
DECLARE_VARIABLE_WITH_SYMBOL(Focus_local_names_for_focus_role_name, Qfocus_local_names_for_focus_role_name);
DECLARE_VARIABLE_WITH_SYMBOL(Focus_name_for_rule_or_formula_compilation, Qfocus_name_for_rule_or_formula_compilation);
DECLARE_VARIABLE_WITH_SYMBOL(Focus_range, Qfocus_range);
DECLARE_VARIABLE_WITH_SYMBOL(Focus_too_narrow_qm, Qfocus_too_narrow_qm);
DECLARE_VARIABLE_WITH_SYMBOL(Forward_compiled_antecedent, Qforward_compiled_antecedent);
DECLARE_VARIABLE_WITH_SYMBOL(Forward_compiled_consequent_qm, Qforward_compiled_consequent_qm);
DECLARE_VARIABLE_WITH_SYMBOL(Global_domain, Qglobal_domain);
DECLARE_VARIABLE_WITH_SYMBOL(In_non_top_level_context_qm, Qin_non_top_level_context_qm);
DECLARE_VARIABLE_WITH_SYMBOL(Insertion_location_for_embedded_expressions_qm, Qinsertion_location_for_embedded_expressions_qm);
DECLARE_VARIABLE_WITH_SYMBOL(Inside_action_iteration_p, Qinside_action_iteration_p);
DECLARE_VARIABLE_WITH_SYMBOL(Iteration_forms_for_embedded_expressions_qm, Qiteration_forms_for_embedded_expressions_qm);
DECLARE_VARIABLE_WITH_SYMBOL(List_of_known_names, Qlist_of_known_names);
DECLARE_VARIABLE_WITH_SYMBOL(Local_insertion_location, Qlocal_insertion_location);
DECLARE_VARIABLE_WITH_SYMBOL(Local_iteration_forms, Qlocal_iteration_forms);
DECLARE_VARIABLE_WITH_SYMBOL(Local_name_errors, Qlocal_name_errors);
DECLARE_VARIABLE_WITH_SYMBOL(Local_names_not_associated_with_roles, Qlocal_names_not_associated_with_roles);
DECLARE_VARIABLE_WITH_SYMBOL(Names_used_for_more_than_one_item, Qnames_used_for_more_than_one_item);
DECLARE_VARIABLE_WITH_SYMBOL(Needed_domain, Qneeded_domain);
DECLARE_VARIABLE_WITH_SYMBOL(Nil_indicator, Qnil_indicator);
DECLARE_VARIABLE_WITH_SYMBOL(Non_context_top_level_binding_forms, Qnon_context_top_level_binding_forms);
DECLARE_VARIABLE_WITH_SYMBOL(Number_of_no_binds, Qnumber_of_no_binds);
DECLARE_VARIABLE_WITH_SYMBOL(Pattern_checking_inverse_references, Qpattern_checking_inverse_references);
extern Object Phrase_sequence_marker;
extern Object Phrase_structure_marker;
DECLARE_VARIABLE_WITH_SYMBOL(Reference_structures_originating_from_within_existence_predicate, Qreference_structures_originating_from_within_existence_predicate);
DECLARE_VARIABLE_WITH_SYMBOL(Role_names_and_local_names_for_runtime_items, Qrole_names_and_local_names_for_runtime_items);
DECLARE_VARIABLE_WITH_SYMBOL(Source_designations_from_explicit_iteration_forms, Qsource_designations_from_explicit_iteration_forms);
DECLARE_VARIABLE_WITH_SYMBOL(Top_level_reference_tree, Qtop_level_reference_tree);
DECLARE_VARIABLE_WITH_SYMBOL(Wrapper_references_for_left_side_of_formula_qm, Qwrapper_references_for_left_side_of_formula_qm);
