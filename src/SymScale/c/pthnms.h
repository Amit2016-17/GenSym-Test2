/* pthnms.h -- Header File for pthnms.c
 * Copyright (C) 1986-2017 Gensym Corporation.  All Rights Reserved.
 */


/* Symbol Definitions */
extern Object Qnum_lt;
extern Object Qcar;
extern Object Qcdr;
extern Object Qcons;
extern Object Qequal;
extern Object Kkey;
extern Object Knewest;
extern Object Ktest;
extern Object Qunsigned_byte;
extern Object Kunspecific;
extern Object Kup;
extern Object Kwild;

extern Object Pclos;
extern Object Pclos_run;
extern Object Pclosx;
extern Object Pcl;
extern Object Pcl_user;
extern Object Pkeyword;
extern Object Ptrun;
extern Object Ptx;

/* function declarations */

#ifdef USE_PROTOTYPES

extern Object abort_g2(int,...);
extern Object allocate_byte_vector_16(Object);
extern Object bytes_per_simple_vector(Object);
extern Object c_user_name(Object);
extern Object canonicize_host_name_from_file_system(Object);
extern Object clear_optimized_constants(void);
extern Object coalesce_directory_components(Object);
extern Object constant_queue_next(Object,Object);
extern Object convert_g2_stream_to_gensym_pathname(Object);
extern Object convert_namestring_to_gensym_pathname_with_known_parser(Object,Object,Object);
extern Object convert_to_gensym_pathname(Object,Object,Object);
extern Object convert_to_gensym_pathname_with_known_parser(Object,Object,Object);
extern Object copy_constant_wide_string_given_length(Object,Object);
extern Object copy_directory_components_from_directory_string(Object);
extern Object copy_directory_contents(Object);
extern Object copy_foreign_string_arg_if_appropriate(Object);
extern Object copy_gensym_pathname(Object);
extern Object copy_list_using_path_conses_1(Object);
extern Object copy_null_terminated_string_as_text_string(Object);
extern Object copy_out_current_wide_string(void);
extern Object copy_pathname_contents(Object);
extern Object copy_text_string(Object);
extern Object copy_tree_using_path_conses_1(Object);
extern Object delete_path_cons_1(Object,Object);
extern Object delete_path_element_1(Object,Object);
extern Object direct_structure_method(Object,Object);
extern Object elide_directory_containing_up_with_default_directory(Object,Object);
extern Object export_text_string(int,...);
extern Object extend_current_wide_string(Object);
extern Object file_system_host_as_text_string(Object);
extern Object foreign_get_user_name(void);
extern Object g2_stream_directory_p(Object);
extern Object g2_stream_p(Object);
extern Object gensym_base_namestring(int,...);
extern Object gensym_cons_1(Object,Object);
extern Object gensym_device_and_directory_namestring(int,...);
extern Object gensym_device_namestring(int,...);
extern Object gensym_directory_and_above_namestring(int,...);
extern Object gensym_directory_and_above_namestring_as_text_string(int,...);
extern Object gensym_directory_and_wildcard_file_namestring(int,...);
extern Object gensym_directory_as_file(Object);
extern Object gensym_directory_namestring(int,...);
extern Object gensym_directory_namestring_as_text_string(int,...);
extern Object gensym_enough_namestring(int,...);
extern Object gensym_enough_namestring_as_text_string(int,...);
extern Object gensym_file_as_directory(Object);
extern Object gensym_file_namestring(int,...);
extern Object gensym_file_namestring_as_text_string(int,...);
extern Object gensym_host_and_directory_namestring(int,...);
extern Object gensym_host_namestring(int,...);
extern Object gensym_make_pathname_function(int,...);
extern Object gensym_make_pathname_with_copied_components(Object,Object,Object,Object,Object,Object,Object);
extern Object gensym_make_pathname_without_copying(int,...);
extern Object gensym_merge_pathnames_after_conversion(int,...);
extern Object gensym_merge_pathnames_function(Object,Object,Object);
extern Object gensym_name_and_type_namestring(int,...);
extern Object gensym_namestring(int,...);
extern Object gensym_namestring_as_text_string(int,...);
extern Object gensym_namestring_of_directory_as_file(Object);
extern Object gensym_parse_namestring_function(Object,Object,Object);
extern Object gensym_pathname(Object);
extern Object gensym_pathname_contents_equal_p(Object,Object);
extern Object gensym_pathname_structure_memory_usage(void);
extern Object gensym_pathname_version_empty_p(Object);
extern Object gensym_pathnames_equal_enough_p(Object,Object);
extern Object gensym_pathnames_equal_p(Object,Object);
extern Object gensym_probe_file(Object);
extern Object gensym_string_to_wide_string(Object);
extern Object gensym_truename(Object);
extern Object gensym_type_namestring(int,...);
extern Object gensym_version_namestring(int,...);
extern Object gensym_wild_pathname_p(Object);
extern Object get_default_file_device_from_host(Object);
extern Object get_default_file_system_info(void);
extern Object get_gensym_environment_variable(Object);
extern Object get_less_case_sensitive_gensym_pathname_given_directory(Object,Object);
extern Object get_new_directory_pathname_dwim(Object);
extern Object get_object_file_suffix_for_this_os(void);
extern Object get_parser_from_host(Object);
extern Object get_parser_from_namestring(Object);
extern Object getfq_function_no_default(Object,Object);
extern Object identical_g2_streams_p(Object,Object);
extern Object initialize_convert_file_strings_to_uppercase_p(void);
extern Object initialize_default_gensym_pathname_defaults(void);
extern Object initialize_local_file_system(void);
extern Object initialize_local_filename_parser(void);
extern Object initialize_local_namestring_generator(void);
extern Object intern_text_string(int,...);
extern Object kb_name_gt_shared_object_filename(Object);
extern Object lengthw(Object);
extern Object load_and_initialize_type_description(Object,Object);
extern Object make_absolute_pathname_if_possible(Object);
extern Object make_canonical_wild_directory_pathname_if_possible(Object,Object);
extern Object make_empty_gensym_pathname(void);
extern Object make_gensym_pathname_structure_function(Object,Object,Object,Object,Object,Object);
extern Object make_gensym_pathname_structure_macro_1(Object,Object,Object,Object,Object,Object);
extern Object make_module_name_from_kb_pathname(Object);
extern Object make_object_file_pathname(Object,Object);
extern Object make_path_list_1(Object);
extern Object make_permanent_gensym_pathname_structure_internal(void);
extern Object make_thread_array(Object);
extern Object make_wild_name_and_type_pathname(Object);
extern Object maybe_supply_home_to_possible_unix_pathname(Object);
extern Object memq_function(Object,Object);
extern Object merge_pathnames_device_default_rule(int,...);
extern Object merge_pathnames_merge_structured_directories(int,...);
extern Object merge_pathnames_propagate_file_system(int,...);
extern Object merge_pathnames_replace_empty_components(int,...);
extern Object merge_pathnames_replace_unspecific_host(int,...);
extern Object merge_pathnames_version_default_rule(int,...);
extern Object merge_series_of_pathnames(Object);
extern Object mutate_global_property(Object,Object,Object);
extern Object namestring_as_gensym_string(Object);
extern Object notify_user(int,...);
extern Object nstring_downcasew(Object);
extern Object nstring_upcasew(Object);
extern Object outstanding_gensym_pathname_count(void);
extern Object outstanding_path_conses(void);
extern Object parser_in_namestring_p(Object);
extern Object path_cons_1(Object,Object);
extern Object path_cons_memory_usage(void);
extern Object path_list_2(Object,Object);
extern Object path_list_3(Object,Object,Object);
extern Object path_list_4(Object,Object,Object,Object);
extern Object path_list_trace_hook(Object);
extern Object pathname_can_contain_device_p(Object);
extern Object pathname_distinguished_by_version_p(Object);
extern Object pathname_gt_shared_file_pathname(Object);
extern Object print_gensym_pathname(Object);
extern Object push_optimized_constant(Object);
extern Object reclaim_gensym_list_1(Object);
extern Object reclaim_gensym_pathname(Object);
extern Object reclaim_gensym_pathname_structure_macro_1(Object);
extern Object reclaim_gensym_string(Object);
extern Object reclaim_if_gensym_pathname(Object);
extern Object reclaim_path_cons_1(Object);
extern Object reclaim_path_list_1(Object);
extern Object reclaim_path_list_star_1(Object);
extern Object reclaim_path_tree_1(Object);
extern Object reclaim_pathname_components(int,...);
extern Object reclaim_pathname_or_string(Object);
extern Object reclaim_text_string(Object);
extern Object reclaim_wide_string(Object);
extern Object record_direct_structure_method(Object,Object,Object);
extern Object record_system_variable(Object,Object,Object,Object,Object,Object,Object);
extern Object regenerate_optimized_constant(Object);
extern Object replenish_path_cons_pool(void);
extern Object replenish_path_list_pool(Object);
extern Object signal_gensym_file_error(Object,Object);
extern Object string_eq_w(Object,Object);
extern Object string_equalw(Object,Object);
extern Object supply_home_to_unix_pathname(Object);
extern Object symbol_name_text_string(Object);
extern Object text_string_length(Object);
extern Object text_string_p(Object);
extern Object tformat_text_string(int,...);
extern Object transfer_gensym_pathname_contents(Object,Object);
extern Object twrite_beginning_of_wide_string(Object,Object);
extern Object twrite_general_string(Object);
extern Object update_object_pool_meters_list(Object);
extern Object valid_directory_p(Object);
extern Object valid_pathname_p(Object);
extern Object wild_regular_expression_string_p(Object);

#else

extern Object abort_g2();
extern Object allocate_byte_vector_16();
extern Object bytes_per_simple_vector();
extern Object c_user_name();
extern Object canonicize_host_name_from_file_system();
extern Object clear_optimized_constants();
extern Object coalesce_directory_components();
extern Object constant_queue_next();
extern Object convert_g2_stream_to_gensym_pathname();
extern Object convert_namestring_to_gensym_pathname_with_known_parser();
extern Object convert_to_gensym_pathname();
extern Object convert_to_gensym_pathname_with_known_parser();
extern Object copy_constant_wide_string_given_length();
extern Object copy_directory_components_from_directory_string();
extern Object copy_directory_contents();
extern Object copy_foreign_string_arg_if_appropriate();
extern Object copy_gensym_pathname();
extern Object copy_list_using_path_conses_1();
extern Object copy_null_terminated_string_as_text_string();
extern Object copy_out_current_wide_string();
extern Object copy_pathname_contents();
extern Object copy_text_string();
extern Object copy_tree_using_path_conses_1();
extern Object delete_path_cons_1();
extern Object delete_path_element_1();
extern Object direct_structure_method();
extern Object elide_directory_containing_up_with_default_directory();
extern Object export_text_string();
extern Object extend_current_wide_string();
extern Object file_system_host_as_text_string();
extern Object foreign_get_user_name();
extern Object g2_stream_directory_p();
extern Object g2_stream_p();
extern Object gensym_base_namestring();
extern Object gensym_cons_1();
extern Object gensym_device_and_directory_namestring();
extern Object gensym_device_namestring();
extern Object gensym_directory_and_above_namestring();
extern Object gensym_directory_and_above_namestring_as_text_string();
extern Object gensym_directory_and_wildcard_file_namestring();
extern Object gensym_directory_as_file();
extern Object gensym_directory_namestring();
extern Object gensym_directory_namestring_as_text_string();
extern Object gensym_enough_namestring();
extern Object gensym_enough_namestring_as_text_string();
extern Object gensym_file_as_directory();
extern Object gensym_file_namestring();
extern Object gensym_file_namestring_as_text_string();
extern Object gensym_host_and_directory_namestring();
extern Object gensym_host_namestring();
extern Object gensym_make_pathname_function();
extern Object gensym_make_pathname_with_copied_components();
extern Object gensym_make_pathname_without_copying();
extern Object gensym_merge_pathnames_after_conversion();
extern Object gensym_merge_pathnames_function();
extern Object gensym_name_and_type_namestring();
extern Object gensym_namestring();
extern Object gensym_namestring_as_text_string();
extern Object gensym_namestring_of_directory_as_file();
extern Object gensym_parse_namestring_function();
extern Object gensym_pathname();
extern Object gensym_pathname_contents_equal_p();
extern Object gensym_pathname_structure_memory_usage();
extern Object gensym_pathname_version_empty_p();
extern Object gensym_pathnames_equal_enough_p();
extern Object gensym_pathnames_equal_p();
extern Object gensym_probe_file();
extern Object gensym_string_to_wide_string();
extern Object gensym_truename();
extern Object gensym_type_namestring();
extern Object gensym_version_namestring();
extern Object gensym_wild_pathname_p();
extern Object get_default_file_device_from_host();
extern Object get_default_file_system_info();
extern Object get_gensym_environment_variable();
extern Object get_less_case_sensitive_gensym_pathname_given_directory();
extern Object get_new_directory_pathname_dwim();
extern Object get_object_file_suffix_for_this_os();
extern Object get_parser_from_host();
extern Object get_parser_from_namestring();
extern Object getfq_function_no_default();
extern Object identical_g2_streams_p();
extern Object initialize_convert_file_strings_to_uppercase_p();
extern Object initialize_default_gensym_pathname_defaults();
extern Object initialize_local_file_system();
extern Object initialize_local_filename_parser();
extern Object initialize_local_namestring_generator();
extern Object intern_text_string();
extern Object kb_name_gt_shared_object_filename();
extern Object lengthw();
extern Object load_and_initialize_type_description();
extern Object make_absolute_pathname_if_possible();
extern Object make_canonical_wild_directory_pathname_if_possible();
extern Object make_empty_gensym_pathname();
extern Object make_gensym_pathname_structure_function();
extern Object make_gensym_pathname_structure_macro_1();
extern Object make_module_name_from_kb_pathname();
extern Object make_object_file_pathname();
extern Object make_path_list_1();
extern Object make_permanent_gensym_pathname_structure_internal();
extern Object make_thread_array();
extern Object make_wild_name_and_type_pathname();
extern Object maybe_supply_home_to_possible_unix_pathname();
extern Object memq_function();
extern Object merge_pathnames_device_default_rule();
extern Object merge_pathnames_merge_structured_directories();
extern Object merge_pathnames_propagate_file_system();
extern Object merge_pathnames_replace_empty_components();
extern Object merge_pathnames_replace_unspecific_host();
extern Object merge_pathnames_version_default_rule();
extern Object merge_series_of_pathnames();
extern Object mutate_global_property();
extern Object namestring_as_gensym_string();
extern Object notify_user();
extern Object nstring_downcasew();
extern Object nstring_upcasew();
extern Object outstanding_gensym_pathname_count();
extern Object outstanding_path_conses();
extern Object parser_in_namestring_p();
extern Object path_cons_1();
extern Object path_cons_memory_usage();
extern Object path_list_2();
extern Object path_list_3();
extern Object path_list_4();
extern Object path_list_trace_hook();
extern Object pathname_can_contain_device_p();
extern Object pathname_distinguished_by_version_p();
extern Object pathname_gt_shared_file_pathname();
extern Object print_gensym_pathname();
extern Object push_optimized_constant();
extern Object reclaim_gensym_list_1();
extern Object reclaim_gensym_pathname();
extern Object reclaim_gensym_pathname_structure_macro_1();
extern Object reclaim_gensym_string();
extern Object reclaim_if_gensym_pathname();
extern Object reclaim_path_cons_1();
extern Object reclaim_path_list_1();
extern Object reclaim_path_list_star_1();
extern Object reclaim_path_tree_1();
extern Object reclaim_pathname_components();
extern Object reclaim_pathname_or_string();
extern Object reclaim_text_string();
extern Object reclaim_wide_string();
extern Object record_direct_structure_method();
extern Object record_system_variable();
extern Object regenerate_optimized_constant();
extern Object replenish_path_cons_pool();
extern Object replenish_path_list_pool();
extern Object signal_gensym_file_error();
extern Object string_eq_w();
extern Object string_equalw();
extern Object supply_home_to_unix_pathname();
extern Object symbol_name_text_string();
extern Object text_string_length();
extern Object text_string_p();
extern Object tformat_text_string();
extern Object transfer_gensym_pathname_contents();
extern Object twrite_beginning_of_wide_string();
extern Object twrite_general_string();
extern Object update_object_pool_meters_list();
extern Object valid_directory_p();
extern Object valid_pathname_p();
extern Object wild_regular_expression_string_p();

#endif

/* variables/constants */
DECLARE_VARIABLE_WITH_SYMBOL(All_gensym_pathnames_containing_open_streams, Qall_gensym_pathnames_containing_open_streams);
DECLARE_VARIABLE_WITH_SYMBOL(Available_path_conses, Qavailable_path_conses);
DECLARE_VARIABLE_WITH_SYMBOL(Available_path_conses_tail, Qavailable_path_conses_tail);
extern Object Available_path_conses_tail_vector;
extern Object Available_path_conses_vector;
extern Object Bytes_per_rtl_ptr;
DECLARE_VARIABLE_WITH_SYMBOL(Chain_of_available_gensym_pathnames, Qchain_of_available_gensym_pathnames);
extern Object Chain_of_available_gensym_pathnames_vector;
extern Object Cons_pool_conses_to_make_at_a_time;
DECLARE_VARIABLE_WITH_SYMBOL(Convert_file_strings_to_uppercase_p, Qconvert_file_strings_to_uppercase_p);
extern Object Convert_file_strings_to_uppercase_p_prop;
DECLARE_VARIABLE_WITH_SYMBOL(Current_custom_reclamation_stamp_qm, Qcurrent_custom_reclamation_stamp_qm);
DECLARE_VARIABLE_WITH_SYMBOL(Current_thread_index, Qcurrent_thread_index);
DECLARE_VARIABLE_WITH_SYMBOL(Current_twriting_output_type, Qcurrent_twriting_output_type);
DECLARE_VARIABLE_WITH_SYMBOL(Current_wide_string, Qcurrent_wide_string);
DECLARE_VARIABLE_WITH_SYMBOL(Current_wide_string_list, Qcurrent_wide_string_list);
extern Object File_systems_which_distinguish_by_version;
extern Object File_systems_which_store_device_names;
DECLARE_VARIABLE_WITH_SYMBOL(Fill_pointer_for_current_wide_string, Qfill_pointer_for_current_wide_string);
DECLARE_VARIABLE_WITH_SYMBOL(G2_machine_type, Qg2_machine_type);
extern Object G2_machine_type_string;
DECLARE_VARIABLE_WITH_SYMBOL(G2_operating_system, Qg2_operating_system);
DECLARE_VARIABLE_WITH_SYMBOL(Gensym_default_pathname_defaults, Qgensym_default_pathname_defaults);
DECLARE_VARIABLE_WITH_SYMBOL(Gensym_environment_variable_buffer, Qgensym_environment_variable_buffer);
DECLARE_VARIABLE_WITH_SYMBOL(Gensym_file_error_occurred_p, Qgensym_file_error_occurred_p);
DECLARE_VARIABLE_WITH_SYMBOL(Gensym_pathname_count, Qgensym_pathname_count);
DECLARE_VARIABLE_WITH_SYMBOL(Inside_handling_gensym_file_errors_scope_p, Qinside_handling_gensym_file_errors_scope_p);
DECLARE_VARIABLE_WITH_SYMBOL(Local_file_system, Qlocal_file_system);
DECLARE_VARIABLE_WITH_SYMBOL(Local_filename_parser, Qlocal_filename_parser);
DECLARE_VARIABLE_WITH_SYMBOL(Local_namestring_generator, Qlocal_namestring_generator);
DECLARE_VARIABLE_WITH_SYMBOL(Merge_pathnames_rules, Qmerge_pathnames_rules);
DECLARE_VARIABLE_WITH_SYMBOL(Merge_pathnames_rules_sorted_p, Qmerge_pathnames_rules_sorted_p);
DECLARE_VARIABLE_WITH_SYMBOL(Object_file_pathname_for_machine, Qobject_file_pathname_for_machine);
DECLARE_VARIABLE_WITH_SYMBOL(Path_cons_counter, Qpath_cons_counter);
extern Object Path_cons_counter_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Process_specific_system_pathname, Qprocess_specific_system_pathname);
DECLARE_VARIABLE_WITH_SYMBOL(Report_filename_parsing_errors_in_development_p, Qreport_filename_parsing_errors_in_development_p);
extern Object The_type_description_of_gensym_pathname;
DECLARE_VARIABLE_WITH_SYMBOL(Total_length_of_current_wide_string, Qtotal_length_of_current_wide_string);
