/* mice.h -- Header File for mice.c
 * Copyright (C) 1986-2017 Gensym Corporation.  All Rights Reserved.
 */


/* Symbol Definitions */
extern Object Kabort;
extern Object Kname;
extern Object Qnull;

extern Object Pclos;
extern Object Pclos_run;
extern Object Pclosx;
extern Object Pcl;
extern Object Pcl_user;
extern Object Pkeyword;
extern Object Ptrun;
extern Object Ptx;

/* function declarations */

#ifdef USE_PROTOTYPES

extern Object abort_current_workstation_context(Object);
extern Object add_mouse_pointer_to_guardians_of_workstation_context(Object,Object);
extern Object bytes_per_simple_vector(Object);
extern Object cancel_and_reclaim_scheduled_queue_element_1(Object);
extern Object clean_up_workstation_context_function(Object);
extern Object clear_optimized_constants(void);
extern Object copy_of_current_frame_serial_number_function(void);
extern Object detail_pane(Object);
extern Object direct_structure_method(Object,Object);
extern Object dummy_workstation_p(Object);
extern Object enter_context_in_current_workstation(int,...);
extern Object entire_g2_window_spot_structure_memory_usage(void);
extern Object establish_next_workstation_context_continuation(Object,Object,Object,Object);
extern Object exit_current_workstation_context_in_return_function(Object);
extern Object future_task_schedule_2(Object);
extern Object gensym_cons_1(Object,Object);
extern Object get_or_make_dummy_workstation(void);
extern Object get_ui_parameter(int,...);
extern Object get_value_for_current_workstation_new_g2_classic_ui_p(void);
extern Object getfq_function_no_default(Object,Object);
extern Object invalid_spot_structure_memory_usage(void);
extern Object load_and_initialize_type_description(Object,Object);
extern Object make_an_initial_mouse_pointer(Object);
extern Object make_entire_g2_window_spot_1(void);
extern Object make_gensym_window(Object);
extern Object make_invalid_spot_1(void);
extern Object make_mouse_pointer_1(Object,Object,Object,Object,Object);
extern Object make_named_dynamic_extent_description(Object,Object,Object,Object,Object,Object,Object);
extern Object make_permanent_entire_g2_window_spot_structure_internal(void);
extern Object make_permanent_invalid_spot_structure_internal(void);
extern Object make_permanent_mouse_pointer_structure_internal(void);
extern Object make_permanent_schedule_task_structure_internal(void);
extern Object make_permanent_spot_structure_internal(void);
extern Object make_permanent_top_level_state_structure_internal(void);
extern Object make_permanent_workstation_context_frame_structure_internal(void);
extern Object make_permanent_workstation_context_structure_internal(void);
extern Object make_permanent_workstation_context_with_selection_focus_structure_internal(void);
extern Object make_spot_1(void);
extern Object make_thread_array(Object);
extern Object make_top_level_state_1(void);
extern Object make_workstation_1(Object);
extern Object make_workstation_context_1(void);
extern Object make_workstation_context_frame_1(void);
extern Object make_workstation_context_with_selection_focus_1(void);
extern Object mouse_pointer_is_multi_p(Object);
extern Object mouse_pointer_is_synthetic_p(Object);
extern Object mouse_pointer_structure_memory_usage(void);
extern Object mutate_global_property(Object,Object,Object);
extern Object native_window_heartbeat(Object);
extern Object outstanding_entire_g2_window_spot_count(void);
extern Object outstanding_invalid_spot_count(void);
extern Object outstanding_mouse_pointer_count(void);
extern Object outstanding_spot_count(void);
extern Object outstanding_top_level_state_count(void);
extern Object outstanding_workstation_context_count(void);
extern Object outstanding_workstation_context_frame_count(void);
extern Object outstanding_workstation_context_with_selection_focus_count(void);
extern Object push_last_spot(Object,Object,Object);
extern Object push_optimized_constant(Object);
extern Object put_gensym_window_in_v5_mode_internal(Object);
extern Object reclaim_entire_g2_window_spot_1(Object);
extern Object reclaim_frame_serial_number(Object);
extern Object reclaim_gensym_list_1(Object);
extern Object reclaim_gensym_tree_with_text_strings(Object);
extern Object reclaim_invalid_spot_1(Object);
extern Object reclaim_mouse_pointer_1(Object);
extern Object reclaim_mouse_pointers(Object);
extern Object reclaim_schedule_task_args(Object);
extern Object reclaim_spot_1(Object);
extern Object reclaim_structure_if_any(Object);
extern Object reclaim_top_level_state_1(Object);
extern Object reclaim_workstation_context_1(Object);
extern Object reclaim_workstation_context_frame_1(Object);
extern Object reclaim_workstation_context_stack(Object);
extern Object reclaim_workstation_context_with_selection_focus_1(Object);
extern Object record_direct_structure_method(Object,Object,Object);
extern Object record_system_variable(Object,Object,Object,Object,Object,Object,Object);
extern Object reference_mouse_pointer(Object);
extern Object regenerate_optimized_constant(Object);
extern Object release_mouse_pointer_if_any(Object);
extern Object release_mouse_pointers(Object);
extern Object reset_current_workstation_context_return_values(void);
extern Object resume_workstation_context_function(Object);
extern Object return_from_current_workstation_context(int,...);
extern Object selection_style_of_workstation_context(Object);
extern Object set_session_info_in_workstation(Object,Object);
extern Object set_up_workstation_on_ab_side(Object,Object,Object);
extern Object set_v5_mode_state(Object);
extern Object setup_workstation_context_function(Object);
extern Object show_selection_handles_p(int,...);
extern Object spot_structure_memory_usage(void);
extern Object start_or_restart_native_window_heartbeat(void);
extern Object suspend_workstation_context_function(Object);
extern Object synchronize_selection_style(Object,Object);
extern Object top_level_state_structure_memory_usage(void);
extern Object track_mouse_into_spot_function(Object);
extern Object track_mouse_pointer(Object);
extern Object track_mouse_pointer_till_done(Object);
extern Object type_description_of(Object);
extern Object unwind_all_workstation_contexts(Object);
extern Object unwind_current_workstation_back_to_top_level(void);
extern Object unwind_one_workstation_context(void);
extern Object unwind_one_workstation_context_safely(void);
extern Object update_object_pool_meters_list(Object);
extern Object valid_workstation_context_p_function(Object);
extern Object workstation_context_frame_structure_memory_usage(void);
extern Object workstation_context_structure_memory_usage(void);
extern Object workstation_context_with_selection_focus_structure_memory_usage(void);

#else

extern Object abort_current_workstation_context();
extern Object add_mouse_pointer_to_guardians_of_workstation_context();
extern Object bytes_per_simple_vector();
extern Object cancel_and_reclaim_scheduled_queue_element_1();
extern Object clean_up_workstation_context_function();
extern Object clear_optimized_constants();
extern Object copy_of_current_frame_serial_number_function();
extern Object detail_pane();
extern Object direct_structure_method();
extern Object dummy_workstation_p();
extern Object enter_context_in_current_workstation();
extern Object entire_g2_window_spot_structure_memory_usage();
extern Object establish_next_workstation_context_continuation();
extern Object exit_current_workstation_context_in_return_function();
extern Object future_task_schedule_2();
extern Object gensym_cons_1();
extern Object get_or_make_dummy_workstation();
extern Object get_ui_parameter();
extern Object get_value_for_current_workstation_new_g2_classic_ui_p();
extern Object getfq_function_no_default();
extern Object invalid_spot_structure_memory_usage();
extern Object load_and_initialize_type_description();
extern Object make_an_initial_mouse_pointer();
extern Object make_entire_g2_window_spot_1();
extern Object make_gensym_window();
extern Object make_invalid_spot_1();
extern Object make_mouse_pointer_1();
extern Object make_named_dynamic_extent_description();
extern Object make_permanent_entire_g2_window_spot_structure_internal();
extern Object make_permanent_invalid_spot_structure_internal();
extern Object make_permanent_mouse_pointer_structure_internal();
extern Object make_permanent_schedule_task_structure_internal();
extern Object make_permanent_spot_structure_internal();
extern Object make_permanent_top_level_state_structure_internal();
extern Object make_permanent_workstation_context_frame_structure_internal();
extern Object make_permanent_workstation_context_structure_internal();
extern Object make_permanent_workstation_context_with_selection_focus_structure_internal();
extern Object make_spot_1();
extern Object make_thread_array();
extern Object make_top_level_state_1();
extern Object make_workstation_1();
extern Object make_workstation_context_1();
extern Object make_workstation_context_frame_1();
extern Object make_workstation_context_with_selection_focus_1();
extern Object mouse_pointer_is_multi_p();
extern Object mouse_pointer_is_synthetic_p();
extern Object mouse_pointer_structure_memory_usage();
extern Object mutate_global_property();
extern Object native_window_heartbeat();
extern Object outstanding_entire_g2_window_spot_count();
extern Object outstanding_invalid_spot_count();
extern Object outstanding_mouse_pointer_count();
extern Object outstanding_spot_count();
extern Object outstanding_top_level_state_count();
extern Object outstanding_workstation_context_count();
extern Object outstanding_workstation_context_frame_count();
extern Object outstanding_workstation_context_with_selection_focus_count();
extern Object push_last_spot();
extern Object push_optimized_constant();
extern Object put_gensym_window_in_v5_mode_internal();
extern Object reclaim_entire_g2_window_spot_1();
extern Object reclaim_frame_serial_number();
extern Object reclaim_gensym_list_1();
extern Object reclaim_gensym_tree_with_text_strings();
extern Object reclaim_invalid_spot_1();
extern Object reclaim_mouse_pointer_1();
extern Object reclaim_mouse_pointers();
extern Object reclaim_schedule_task_args();
extern Object reclaim_spot_1();
extern Object reclaim_structure_if_any();
extern Object reclaim_top_level_state_1();
extern Object reclaim_workstation_context_1();
extern Object reclaim_workstation_context_frame_1();
extern Object reclaim_workstation_context_stack();
extern Object reclaim_workstation_context_with_selection_focus_1();
extern Object record_direct_structure_method();
extern Object record_system_variable();
extern Object reference_mouse_pointer();
extern Object regenerate_optimized_constant();
extern Object release_mouse_pointer_if_any();
extern Object release_mouse_pointers();
extern Object reset_current_workstation_context_return_values();
extern Object resume_workstation_context_function();
extern Object return_from_current_workstation_context();
extern Object selection_style_of_workstation_context();
extern Object set_session_info_in_workstation();
extern Object set_up_workstation_on_ab_side();
extern Object set_v5_mode_state();
extern Object setup_workstation_context_function();
extern Object show_selection_handles_p();
extern Object spot_structure_memory_usage();
extern Object start_or_restart_native_window_heartbeat();
extern Object suspend_workstation_context_function();
extern Object synchronize_selection_style();
extern Object top_level_state_structure_memory_usage();
extern Object track_mouse_into_spot_function();
extern Object track_mouse_pointer();
extern Object track_mouse_pointer_till_done();
extern Object type_description_of();
extern Object unwind_all_workstation_contexts();
extern Object unwind_current_workstation_back_to_top_level();
extern Object unwind_one_workstation_context();
extern Object unwind_one_workstation_context_safely();
extern Object update_object_pool_meters_list();
extern Object valid_workstation_context_p_function();
extern Object workstation_context_frame_structure_memory_usage();
extern Object workstation_context_structure_memory_usage();
extern Object workstation_context_with_selection_focus_structure_memory_usage();

#endif

/* variables/constants */
DECLARE_VARIABLE_WITH_SYMBOL(Available_workstation_contexts, Qavailable_workstation_contexts);
DECLARE_VARIABLE_WITH_SYMBOL(Backtrace_stack_for_internal_error, Qbacktrace_stack_for_internal_error);
DECLARE_VARIABLE_WITH_SYMBOL(Chain_of_available_entire_g2_window_spots, Qchain_of_available_entire_g2_window_spots);
extern Object Chain_of_available_entire_g2_window_spots_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Chain_of_available_invalid_spots, Qchain_of_available_invalid_spots);
extern Object Chain_of_available_invalid_spots_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Chain_of_available_mouse_pointers, Qchain_of_available_mouse_pointers);
extern Object Chain_of_available_mouse_pointers_vector;
extern Object Chain_of_available_schedule_tasks_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Chain_of_available_spots, Qchain_of_available_spots);
extern Object Chain_of_available_spots_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Chain_of_available_top_level_states, Qchain_of_available_top_level_states);
extern Object Chain_of_available_top_level_states_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Chain_of_available_workstation_context_frames, Qchain_of_available_workstation_context_frames);
extern Object Chain_of_available_workstation_context_frames_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Chain_of_available_workstation_context_with_selection_focuss, Qchain_of_available_workstation_context_with_selection_focuss);
extern Object Chain_of_available_workstation_context_with_selection_focuss_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Chain_of_available_workstation_contexts, Qchain_of_available_workstation_contexts);
extern Object Chain_of_available_workstation_contexts_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Current_g2_user_mode_qm, Qcurrent_g2_user_mode_qm);
DECLARE_VARIABLE_WITH_SYMBOL(Current_g2_window_for_this_workstation_qm, Qcurrent_g2_window_for_this_workstation_qm);
DECLARE_VARIABLE_WITH_SYMBOL(Current_schedule_task, Qcurrent_schedule_task);
DECLARE_VARIABLE_WITH_SYMBOL(Current_system_dummy_workstation_qm, Qcurrent_system_dummy_workstation_qm);
DECLARE_VARIABLE_WITH_SYMBOL(Current_thread_index, Qcurrent_thread_index);
DECLARE_VARIABLE_WITH_SYMBOL(Current_workstation, Qcurrent_workstation);
DECLARE_VARIABLE_WITH_SYMBOL(Current_workstation_context, Qcurrent_workstation_context);
DECLARE_VARIABLE_WITH_SYMBOL(Current_workstation_detail_pane, Qcurrent_workstation_detail_pane);
DECLARE_VARIABLE_WITH_SYMBOL(Current_workstation_native_window_qm, Qcurrent_workstation_native_window_qm);
DECLARE_VARIABLE_WITH_SYMBOL(Current_workstation_window, Qcurrent_workstation_window);
DECLARE_VARIABLE_WITH_SYMBOL(Entire_g2_window_spot_count, Qentire_g2_window_spot_count);
DECLARE_VARIABLE_WITH_SYMBOL(For_workstation, Qfor_workstation);
DECLARE_VARIABLE_WITH_SYMBOL(For_workstation_context, Qfor_workstation_context);
DECLARE_VARIABLE_WITH_SYMBOL(For_workstation_polling, Qfor_workstation_polling);
#define Illegal_key_code FIX((SI_Long)-1L)
DECLARE_VARIABLE_WITH_SYMBOL(Index_of_top_of_backtrace_stack, Qindex_of_top_of_backtrace_stack);
DECLARE_VARIABLE_WITH_SYMBOL(Invalid_spot_count, Qinvalid_spot_count);
extern Object Maximum_index_in_backtrace_stack_for_internal_error;
DECLARE_VARIABLE_WITH_SYMBOL(Mouse_pointer_count, Qmouse_pointer_count);
DECLARE_VARIABLE_WITH_SYMBOL(Native_window_heartbeat_task, Qnative_window_heartbeat_task);
extern Object Native_window_polling_interval;
DECLARE_VARIABLE_WITH_SYMBOL(New_g2_classic_ui_p, Qnew_g2_classic_ui_p);
extern Object New_g2_classic_ui_standard_system_workspace_background_color;
DECLARE_VARIABLE_WITH_SYMBOL(Next_continuation_function_qm, Qnext_continuation_function_qm);
DECLARE_VARIABLE_WITH_SYMBOL(Next_info, Qnext_info);
DECLARE_VARIABLE_WITH_SYMBOL(Next_info_reclaimer_qm, Qnext_info_reclaimer_qm);
DECLARE_VARIABLE_WITH_SYMBOL(Next_old_style_return_function_qm, Qnext_old_style_return_function_qm);
extern Object Selection_style_of_workstation_context_type_prop;
DECLARE_VARIABLE_WITH_SYMBOL(Servicing_workstation_qm, Qservicing_workstation_qm);
#define Size_of_basic_backtrace_information FIX((SI_Long)3L)
DECLARE_VARIABLE_WITH_SYMBOL(Specific_structure_for_current_workstation_context, Qspecific_structure_for_current_workstation_context);
DECLARE_VARIABLE_WITH_SYMBOL(Spot_count, Qspot_count);
DECLARE_VARIABLE_WITH_SYMBOL(Structure_being_reclaimed, Qstructure_being_reclaimed);
DECLARE_VARIABLE_WITH_SYMBOL(System_window, Qsystem_window);
extern Object The_type_description_of_entire_g2_window_spot;
extern Object The_type_description_of_invalid_spot;
extern Object The_type_description_of_mouse_pointer;
extern Object The_type_description_of_spot;
extern Object The_type_description_of_top_level_state;
extern Object The_type_description_of_workstation_context;
extern Object The_type_description_of_workstation_context_frame;
extern Object The_type_description_of_workstation_context_with_selection_focus;
DECLARE_VARIABLE_WITH_SYMBOL(Top_level_state_count, Qtop_level_state_count);
DECLARE_VARIABLE_WITH_SYMBOL(Type_of_current_workstation_context, Qtype_of_current_workstation_context);
DECLARE_VARIABLE_WITH_SYMBOL(Type_of_current_workstation_window, Qtype_of_current_workstation_window);
extern Object Workspace_title_bar_frame_style_large;
extern Object Workspace_title_bar_frame_style_small;
DECLARE_VARIABLE_WITH_SYMBOL(Workstation_context_count, Qworkstation_context_count);
DECLARE_VARIABLE_WITH_SYMBOL(Workstation_context_frame_count, Qworkstation_context_frame_count);
DECLARE_VARIABLE_WITH_SYMBOL(Workstation_context_with_selection_focus_count, Qworkstation_context_with_selection_focus_count);
extern Object Workstations_in_service;
