/* parse2.h -- Header File for parse2.c
 * Copyright (C) 1986-2017 Gensym Corporation.  All Rights Reserved.
 */


/* Symbol Definitions */
extern Object Qcharacter;
extern Object Qsymbol;
extern Object Qunsigned_byte;
extern Object Qvariable;

extern Object Pclos;
extern Object Pclos_run;
extern Object Pclosx;
extern Object Pcl;
extern Object Pcl_user;
extern Object Pkeyword;
extern Object Ptrun;
extern Object Ptx;

/* function declarations */

#ifdef USE_PROTOTYPES

extern Object ab_gensym(int,...);
extern Object add_lexing_table_to_cache(Object,Object);
extern Object allocate_byte_vector_16(Object);
extern Object assq_function(Object,Object);
extern Object bytes_per_simple_vector(Object);
extern Object can_this_production_end_with(Object,Object);
extern Object clear_lexing_table_cache(void);
extern Object clear_optimized_constants(void);
extern Object collect_nonterminals(void);
extern Object compile_lexing_table(Object);
extern Object compile_parsing_table(Object);
extern Object compile_permanent_lexing_table(Object);
extern Object copy_list_using_token_conses_1(Object);
extern Object copy_out_current_wide_string(void);
extern Object copy_text_string(Object);
extern Object copy_tree_using_token_conses_1(Object);
extern Object copy_wide_string(Object);
extern Object create_action_transitions(void);
extern Object create_augmented_grammar(Object);
extern Object create_follow_a_list(void);
extern Object create_lr_states(void);
extern Object create_parse_object(Object,Object);
extern Object create_parse_table(Object,Object,Object,Object);
extern Object create_possible_phrase(Object,Object);
extern Object determine_follow_of_nonterminal_with_omissions(Object,Object);
extern Object direct_structure_method(Object,Object);
extern Object ensure_transform_constituent_array(Object);
extern Object epsilon_production_p(Object);
extern Object extend_current_wide_string(Object);
extern Object find_destination_of_transitions(Object,Object);
extern Object find_transitions(Object,Object);
extern Object first_can_be(Object,Object);
extern Object follow_1(Object,Object);
extern Object g2_use_tokenizer_internal(Object);
extern Object gensym_cons_1(Object,Object);
extern Object get_current_sexp_annotation_hash(void);
extern Object get_lexing_table_for_regexp(Object);
extern Object get_lexing_table_from_cache(Object);
extern Object get_next_token_from_text_string_1(Object,Object,Object);
extern Object intern_wide_string(int,...);
extern Object load_and_initialize_type_description(Object,Object);
extern Object lr_action(Object,Object);
extern Object lr_closure(Object);
extern Object lr_first(Object);
extern Object lr_first_of_nonterminal(Object,Object);
extern Object lr_follow_for_possible_phrase(Object);
extern Object lr_goto(Object,Object);
extern Object lr_parse_1(Object);
extern Object lr_reduce(Object);
extern Object lr_shift(Object,Object);
extern Object make_edit_state_1(void);
extern Object make_parse_table_1(void);
extern Object make_permanent_parse_table_structure_internal(void);
extern Object make_permanent_possible_phrase_structure_internal(void);
extern Object make_permanent_production_structure_internal(void);
extern Object make_permanent_set_of_possible_phrases_structure_internal(void);
extern Object make_possible_phrase_1(void);
extern Object make_production_1(void);
extern Object make_set_of_possible_phrases_1(void);
extern Object make_sexp_annotation_hash(void);
extern Object make_thread_array(Object);
extern Object memq_function(Object,Object);
extern Object move_to_top_of_regexp_cache(Object);
extern Object mutate_global_property(Object,Object,Object);
extern Object nonterms_which_have_productions_which_may_end_with(Object);
extern Object outstanding_parse_table_count(void);
extern Object outstanding_possible_phrase_count(void);
extern Object outstanding_production_count(void);
extern Object outstanding_set_of_possible_phrases_count(void);
extern Object parse_regexp_string(Object);
extern Object parse_table_structure_memory_usage(void);
extern Object parse_unknown_regexp_string(Object);
extern Object partial_tokens_for_state(Object);
extern Object phrase_cons(Object,Object);
extern Object possible_phrase_eql(Object,Object);
extern Object possible_phrase_member(Object,Object);
extern Object possible_phrase_structure_memory_usage(void);
extern Object possible_phrases_represented_in_array_qm(Object);
extern Object possible_phrases_represented_in_list_qm(Object,Object);
extern Object preprocess_regexp_string(Object,Object);
extern Object production_member_of_possible_phrases_p(Object,Object);
extern Object production_structure_memory_usage(void);
extern Object push_optimized_constant(Object);
extern Object reclaim_dfa(Object);
extern Object reclaim_edit_state_1(Object);
extern Object reclaim_parse_object_1(Object);
extern Object reclaim_parse_table_1(Object);
extern Object reclaim_possible_phrase_1(Object);
extern Object reclaim_production_1(Object);
extern Object reclaim_set_of_possible_phrases_1(Object);
extern Object reclaim_token_cons_1(Object);
extern Object reclaim_token_list_1(Object);
extern Object reclaim_token_tree_1(Object);
extern Object reclaim_wide_string(Object);
extern Object record_direct_structure_method(Object,Object,Object);
extern Object record_system_variable(Object,Object,Object,Object,Object,Object,Object);
extern Object regenerate_optimized_constant(Object);
extern Object regexp_string_preprocessor_errors_qm(Object,Object);
extern Object regular_expression_lexeme(Object,Object);
extern Object same_possible_phrases_p(Object,Object);
extern Object set_of_possible_phrases_structure_memory_usage(void);
extern Object stack_of_regexp_tokens(Object);
extern Object string_eq_w(Object,Object);
extern Object symbol_after(Object,Object);
extern Object symbol_after_dot(Object);
extern Object symbols_appearing_in_some_production_following(Object);
extern Object symbols_in_grammar_which_are_not_nonterminals(Object);
extern Object symbols_which_can_begin_rhs(Object,Object);
extern Object token_cons_1(Object,Object);
extern Object token_list_2(Object,Object);
extern Object token_reverse(Object);
extern Object transform_by_template(Object);
extern Object twrite(Object);
extern Object twrite_beginning_of_wide_string(Object,Object);
extern Object twrite_portion_of_wide_string_unparsably_to_current_wide_string(Object,Object,Object);
extern Object twrite_replacement_for_built_in_character_class(Object,Object,Object);
extern Object twrite_replacement_for_tokenizer_variable(Object,Object,Object);
extern Object unicode_uppercase_if_lowercase(Object);
extern Object unrepresented_nonkernel_possible_phrases(Object,Object);
extern Object update_object_pool_meters_list(Object);

#else

extern Object ab_gensym();
extern Object add_lexing_table_to_cache();
extern Object allocate_byte_vector_16();
extern Object assq_function();
extern Object bytes_per_simple_vector();
extern Object can_this_production_end_with();
extern Object clear_lexing_table_cache();
extern Object clear_optimized_constants();
extern Object collect_nonterminals();
extern Object compile_lexing_table();
extern Object compile_parsing_table();
extern Object compile_permanent_lexing_table();
extern Object copy_list_using_token_conses_1();
extern Object copy_out_current_wide_string();
extern Object copy_text_string();
extern Object copy_tree_using_token_conses_1();
extern Object copy_wide_string();
extern Object create_action_transitions();
extern Object create_augmented_grammar();
extern Object create_follow_a_list();
extern Object create_lr_states();
extern Object create_parse_object();
extern Object create_parse_table();
extern Object create_possible_phrase();
extern Object determine_follow_of_nonterminal_with_omissions();
extern Object direct_structure_method();
extern Object ensure_transform_constituent_array();
extern Object epsilon_production_p();
extern Object extend_current_wide_string();
extern Object find_destination_of_transitions();
extern Object find_transitions();
extern Object first_can_be();
extern Object follow_1();
extern Object g2_use_tokenizer_internal();
extern Object gensym_cons_1();
extern Object get_current_sexp_annotation_hash();
extern Object get_lexing_table_for_regexp();
extern Object get_lexing_table_from_cache();
extern Object get_next_token_from_text_string_1();
extern Object intern_wide_string();
extern Object load_and_initialize_type_description();
extern Object lr_action();
extern Object lr_closure();
extern Object lr_first();
extern Object lr_first_of_nonterminal();
extern Object lr_follow_for_possible_phrase();
extern Object lr_goto();
extern Object lr_parse_1();
extern Object lr_reduce();
extern Object lr_shift();
extern Object make_edit_state_1();
extern Object make_parse_table_1();
extern Object make_permanent_parse_table_structure_internal();
extern Object make_permanent_possible_phrase_structure_internal();
extern Object make_permanent_production_structure_internal();
extern Object make_permanent_set_of_possible_phrases_structure_internal();
extern Object make_possible_phrase_1();
extern Object make_production_1();
extern Object make_set_of_possible_phrases_1();
extern Object make_sexp_annotation_hash();
extern Object make_thread_array();
extern Object memq_function();
extern Object move_to_top_of_regexp_cache();
extern Object mutate_global_property();
extern Object nonterms_which_have_productions_which_may_end_with();
extern Object outstanding_parse_table_count();
extern Object outstanding_possible_phrase_count();
extern Object outstanding_production_count();
extern Object outstanding_set_of_possible_phrases_count();
extern Object parse_regexp_string();
extern Object parse_table_structure_memory_usage();
extern Object parse_unknown_regexp_string();
extern Object partial_tokens_for_state();
extern Object phrase_cons();
extern Object possible_phrase_eql();
extern Object possible_phrase_member();
extern Object possible_phrase_structure_memory_usage();
extern Object possible_phrases_represented_in_array_qm();
extern Object possible_phrases_represented_in_list_qm();
extern Object preprocess_regexp_string();
extern Object production_member_of_possible_phrases_p();
extern Object production_structure_memory_usage();
extern Object push_optimized_constant();
extern Object reclaim_dfa();
extern Object reclaim_edit_state_1();
extern Object reclaim_parse_object_1();
extern Object reclaim_parse_table_1();
extern Object reclaim_possible_phrase_1();
extern Object reclaim_production_1();
extern Object reclaim_set_of_possible_phrases_1();
extern Object reclaim_token_cons_1();
extern Object reclaim_token_list_1();
extern Object reclaim_token_tree_1();
extern Object reclaim_wide_string();
extern Object record_direct_structure_method();
extern Object record_system_variable();
extern Object regenerate_optimized_constant();
extern Object regexp_string_preprocessor_errors_qm();
extern Object regular_expression_lexeme();
extern Object same_possible_phrases_p();
extern Object set_of_possible_phrases_structure_memory_usage();
extern Object stack_of_regexp_tokens();
extern Object string_eq_w();
extern Object symbol_after();
extern Object symbol_after_dot();
extern Object symbols_appearing_in_some_production_following();
extern Object symbols_in_grammar_which_are_not_nonterminals();
extern Object symbols_which_can_begin_rhs();
extern Object token_cons_1();
extern Object token_list_2();
extern Object token_reverse();
extern Object transform_by_template();
extern Object twrite();
extern Object twrite_beginning_of_wide_string();
extern Object twrite_portion_of_wide_string_unparsably_to_current_wide_string();
extern Object twrite_replacement_for_built_in_character_class();
extern Object twrite_replacement_for_tokenizer_variable();
extern Object unicode_uppercase_if_lowercase();
extern Object unrepresented_nonkernel_possible_phrases();
extern Object update_object_pool_meters_list();

#endif

/* variables/constants */
extern Object Available_token_conses_tail_vector;
extern Object Available_token_conses_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Built_in_character_codes, Qbuilt_in_character_codes);
extern Object Cache_of_lexing_tables;
extern Object Cache_of_regular_expressions;
DECLARE_VARIABLE_WITH_SYMBOL(Chain_of_available_parse_tables, Qchain_of_available_parse_tables);
extern Object Chain_of_available_parse_tables_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Chain_of_available_possible_phrases, Qchain_of_available_possible_phrases);
extern Object Chain_of_available_possible_phrases_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Chain_of_available_productions, Qchain_of_available_productions);
extern Object Chain_of_available_productions_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Chain_of_available_set_of_possible_phrasess, Qchain_of_available_set_of_possible_phrasess);
extern Object Chain_of_available_set_of_possible_phrasess_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Current_anchor_p, Qcurrent_anchor_p);
DECLARE_VARIABLE_WITH_SYMBOL(Current_edit_state, Qcurrent_edit_state);
DECLARE_VARIABLE_WITH_SYMBOL(Current_input_stack, Qcurrent_input_stack);
DECLARE_VARIABLE_WITH_SYMBOL(Current_lexing_strings, Qcurrent_lexing_strings);
DECLARE_VARIABLE_WITH_SYMBOL(Current_lr_states, Qcurrent_lr_states);
DECLARE_VARIABLE_WITH_SYMBOL(Current_nonterminals, Qcurrent_nonterminals);
DECLARE_VARIABLE_WITH_SYMBOL(Current_parse_table, Qcurrent_parse_table);
DECLARE_VARIABLE_WITH_SYMBOL(Current_productions, Qcurrent_productions);
DECLARE_VARIABLE_WITH_SYMBOL(Current_start_state, Qcurrent_start_state);
DECLARE_VARIABLE_WITH_SYMBOL(Current_state_stack, Qcurrent_state_stack);
DECLARE_VARIABLE_WITH_SYMBOL(Current_terminals, Qcurrent_terminals);
DECLARE_VARIABLE_WITH_SYMBOL(Current_thread_index, Qcurrent_thread_index);
DECLARE_VARIABLE_WITH_SYMBOL(Current_token_stack, Qcurrent_token_stack);
DECLARE_VARIABLE_WITH_SYMBOL(Current_tokenizer, Qcurrent_tokenizer);
DECLARE_VARIABLE_WITH_SYMBOL(Current_transform_constituent_array, Qcurrent_transform_constituent_array);
DECLARE_VARIABLE_WITH_SYMBOL(Current_twriting_output_type, Qcurrent_twriting_output_type);
DECLARE_VARIABLE_WITH_SYMBOL(Current_wide_string, Qcurrent_wide_string);
DECLARE_VARIABLE_WITH_SYMBOL(Current_wide_string_list, Qcurrent_wide_string_list);
#define Default_reduction FIX((SI_Long)1L)
DECLARE_VARIABLE_WITH_SYMBOL(Fill_pointer_for_current_wide_string, Qfill_pointer_for_current_wide_string);
DECLARE_VARIABLE_WITH_SYMBOL(Generate_source_annotation_info, Qgenerate_source_annotation_info);
DECLARE_VARIABLE_WITH_SYMBOL(Lr0_follow, Qlr0_follow);
#define Max_number_of_lexing_tables_to_cache FIX((SI_Long)100L)
#define Max_number_of_regexps_to_cache FIX((SI_Long)25L)
#define No_tokenizer_match_end_index FIX((SI_Long)0L)
DECLARE_VARIABLE_WITH_SYMBOL(Number_of_lexing_tables_in_cache, Qnumber_of_lexing_tables_in_cache);
DECLARE_VARIABLE_WITH_SYMBOL(Parse_table_count, Qparse_table_count);
DECLARE_VARIABLE_WITH_SYMBOL(Possible_phrase_count, Qpossible_phrase_count);
DECLARE_VARIABLE_WITH_SYMBOL(Preprocessing_tokenizer, Qpreprocessing_tokenizer);
DECLARE_VARIABLE_WITH_SYMBOL(Preprocessor_errors_qm, Qpreprocessor_errors_qm);
DECLARE_VARIABLE_WITH_SYMBOL(Production_count, Qproduction_count);
extern Object Regexp_macro_tokens;
DECLARE_VARIABLE_WITH_SYMBOL(Regexp_preprocessing_parser, Qregexp_preprocessing_parser);
DECLARE_VARIABLE_WITH_SYMBOL(Regular_expression_parser, Qregular_expression_parser);
DECLARE_VARIABLE_WITH_SYMBOL(Set_of_possible_phrases_count, Qset_of_possible_phrases_count);
extern Object Tail_of_lexing_table_cache_marker;
extern Object The_type_description_of_parse_table;
extern Object The_type_description_of_possible_phrase;
extern Object The_type_description_of_production;
extern Object The_type_description_of_set_of_possible_phrases;
DECLARE_VARIABLE_WITH_SYMBOL(Total_length_of_current_wide_string, Qtotal_length_of_current_wide_string);
