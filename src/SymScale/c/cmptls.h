/* cmptls.h -- Header File for cmptls.c
 * Copyright (C) 1986-2017 Gensym Corporation.  All Rights Reserved.
 */


/* Symbol Definitions */
extern Object Qcons;
extern Object Qeq;
extern Object Qinline;
extern Object Kname;
extern Object Ktype;
extern Object Qunsigned_byte;
extern Object Qvariable;

extern Object Pclos;
extern Object Pclos_run;
extern Object Pclosx;
extern Object Pcl;
extern Object Pcl_user;
extern Object Pkeyword;
extern Object Ptrun;
extern Object Ptx;

/* function declarations */

#ifdef USE_PROTOTYPES

extern Object activity_given_index(Object,Object,Object);
extern Object add_activity_translation_to_code_stream(Object,Object,Object);
extern Object add_compiler_error_and_warning_frame_notes(void);
extern Object add_frame_note(int,...);
extern Object add_or_delete_as_item_referring_to_name(Object);
extern Object add_to_frame_note_particulars_list_if_necessary(Object,Object,Object);
extern Object adjust_nesting_of_inlining_data_received_value_compilations(Object);
extern Object allocate_byte_vector(Object);
extern Object allocate_byte_vector_16(Object);
extern Object allocate_managed_simple_vector(Object);
extern Object analyze_compiled_items_for_consistency(Object);
extern Object analyze_single_free_reference_for_consistency(Object,Object);
extern Object assq_function(Object,Object);
extern Object available_var_spot_count(void);
extern Object block_can_be_dependent_p(Object);
extern Object block_can_be_inlined_p(Object);
extern Object block_is_optimizable_p(Object);
extern Object block_is_unstable_p(Object);
extern Object byte_code_stream_structure_memory_usage(void);
extern Object bytes_per_simple_vector(Object);
extern Object cached_parses_up_to_date_p(Object);
extern Object cancel_and_reclaim_scheduled_queue_element_1(Object);
extern Object check_for_cached_attribute(Object,Object,Object,Object,Object);
extern Object check_for_cached_name_undefined_instance(Object,Object);
extern Object check_for_invalid_inlining(Object);
extern Object check_for_new_code_body_errors(void);
extern Object check_for_undefined_attribute(Object);
extern Object check_for_undefined_attribute_of_class(Object,Object);
extern Object check_for_undefined_class(Object);
extern Object check_for_undefined_class_qualified_attribute(Object,Object);
extern Object check_for_undefined_class_qualified_attribute_of_class(Object,Object,Object);
extern Object check_for_undefined_class_qualified_method(Object,Object);
extern Object check_for_undefined_instance_name(Object);
extern Object check_for_unstable_class_and_non_subclass(Object,Object);
extern Object check_for_unstable_class_and_subclass(Object,Object);
extern Object check_for_unstable_instance_name(Object);
extern Object check_for_unstable_instance_name_of_class(Object,Object);
extern Object check_for_valid_function_call(Object,Object);
extern Object check_for_valid_method(Object);
extern Object check_for_valid_procedure_call(Object,Object,Object,Object,Object,Object);
extern Object check_for_valid_stable_compile_time_selected_method(Object,Object,Object,Object,Object);
extern Object check_for_valid_stable_procedure_call(Object,Object,Object,Object);
extern Object check_undefined_instances_of_class(Object,Object);
extern Object check_undefined_instances_of_type(Object,Object);
extern Object class_type_specification_p(Object);
extern Object clear_compiler_errors(void);
extern Object clear_inlining_data(void);
extern Object clear_optimized_constants(void);
extern Object coalesce_lookup_structures(int,...);
extern Object collect_subclasses(Object);
extern Object compilations_up_to_date_p(Object);
extern Object compiler_bug(int,...);
extern Object compiler_code_body_entry_structure_memory_usage(void);
extern Object compiler_cons_1(Object,Object);
extern Object compiler_cons_memory_usage(void);
extern Object compiler_dependence_warning(int,...);
extern Object compiler_error(int,...);
extern Object compiler_errors_qm(Object);
extern Object compiler_list_2(Object,Object);
extern Object compiler_list_3(Object,Object,Object);
extern Object compiler_list_4(Object,Object,Object,Object);
extern Object compiler_list_trace_hook(Object);
extern Object compiler_warning(int,...);
extern Object compress_annotation_info_for_saving(Object);
extern Object computation_instance_structure_memory_usage(void);
extern Object constant_fold_internal_constants_p(Object,Object);
extern Object constant_queue_next(Object,Object);
extern Object copy_for_slot_value(Object);
extern Object copy_list_using_compiler_conses_1(Object);
extern Object copy_list_using_slot_value_conses_1(Object);
extern Object copy_list_using_stack_conses_1(Object);
extern Object copy_out_current_wide_string(void);
extern Object copy_stack_node_instruction_extra_info(Object);
extern Object copy_tree_using_compiler_conses_1(Object);
extern Object copy_tree_using_stack_conses_1(Object);
extern Object create_pseudo_instruction_property_list(void);
extern Object delete_compiler_cons_1(Object,Object);
extern Object delete_compiler_element_1(Object,Object);
extern Object delete_frame_note_if_any(Object,Object);
extern Object delete_stack_cons_1(Object,Object);
extern Object delete_stack_element_1(Object,Object);
extern Object denote_component_of_block(int,...);
extern Object denoted_name_of_type_p(Object,Object);
extern Object dependent_compilation_p(int,...);
extern Object destabilizing_item_deletion_p(Object);
extern Object destabilizing_operation_restricted_for_item_p(Object);
extern Object destabilizing_slot_p(Object,Object);
extern Object direct_structure_method(Object,Object);
extern Object emit_already_consed_instruction(Object);
extern Object emit_already_consed_instruction_to_stream(Object,Object);
extern Object environment_index_ok_in_this_context_qm(Object);
extern Object equalw(Object,Object);
extern Object evaluation_value_p_function(Object);
extern Object evaluation_values_can_be_constant_folded_p(Object,Object);
extern Object extend_current_wide_string(Object);
extern Object find_activity(Object,Object);
extern Object generate_list_of_lexically_visible_code_bodies(Object);
extern Object generate_new_goto_tag(void);
extern Object generate_new_index_in_code_body(Object,Object,Object,Object);
extern Object generate_new_stack_arg_var_spot(Object,Object);
extern Object generate_new_stack_frame_var_spot(Object);
extern Object generate_new_variable_spot(int,...);
extern Object get_inline_call_number(Object);
extern Object get_instance_with_name_if_any(Object,Object);
extern Object get_lookup_slot_value_given_default(Object,Object,Object);
extern Object get_module_block_is_in(Object);
extern Object get_slot_value_function(Object,Object,Object);
extern Object get_specific_method(Object,Object,Object,Object,Object,Object);
extern Object getfq_function_no_default(Object,Object);
extern Object goto_tag_entry_structure_memory_usage(void);
extern Object handle_dependent_or_stable_status_change_for_item(Object);
extern Object handle_stable_hierarchy_or_inline_status_change_for_item(int,...);
extern Object indirectly_denoted_item_p(Object);
extern Object inlining_data_holder_structure_memory_usage(void);
extern Object inlining_data_recieved_value_compilations_qm(void);
extern Object inner_block_cant_be_inlined_in_outer_block_qm(Object,Object);
extern Object install_free_references_in_byte_code_body(Object,Object);
extern Object invocation_stack_program_counter_function(Object);
extern Object jump_depth_for_tag_qm(Object);
extern Object load_and_initialize_type_description(Object,Object);
extern Object lookup_global_or_kb_specific_property_value(Object,Object);
extern Object lookup_kb_specific_property_value(Object,Object);
extern Object make_byte_code_stream_1(void);
extern Object make_byte_code_stream_given_base_stream(Object);
extern Object make_compiler_code_body_entry_1(Object,Object);
extern Object make_compiler_list_1(Object);
extern Object make_computation_instance_1(void);
extern Object make_goto_tag_entry_1(Object,Object);
extern Object make_inferior_byte_code_stream(Object);
extern Object make_inlining_data_holder_1(void);
extern Object make_named_dynamic_extent_description(Object,Object,Object,Object,Object,Object,Object);
extern Object make_permanent_byte_code_stream_structure_internal(void);
extern Object make_permanent_compiler_code_body_entry_structure_internal(void);
extern Object make_permanent_computation_instance_structure_internal(void);
extern Object make_permanent_goto_tag_entry_structure_internal(void);
extern Object make_permanent_inlining_data_holder_structure_internal(void);
extern Object make_permanent_pseudo_instruction_stream_structure_internal(void);
extern Object make_permanent_stack_node_instruction_structure_internal(void);
extern Object make_permanent_stack_node_structure_internal(void);
extern Object make_procedure_byte_code_constants(Object);
extern Object make_pseudo_instruction_stream_1(void);
extern Object make_stack_list_1(Object);
extern Object make_stack_node_1_1(Object,Object);
extern Object make_stack_node_instruction_1_1(Object,Object);
extern Object make_symbol_properties_hash_table_skip_list_sentinel(Object,Object);
extern Object make_thread_array(Object);
extern Object mangle_tag_in_context(Object);
extern Object memq_function(Object,Object);
extern Object merge_byte_code_streams(Object,Object);
extern Object merge_pseudo_instruction_stream(Object);
extern Object merge_pseudo_instruction_streams(Object,Object);
extern Object mutate_global_property(Object,Object,Object);
extern Object note_change_to_block_1(Object,Object);
extern Object note_independent_item_in_stable_free_reference(Object);
extern Object note_invalid_inlining(Object,Object);
extern Object note_invalid_stable_free_reference(Object,Object);
extern Object note_invalid_stable_hierarchy(Object,Object);
extern Object optimizable_in_context_qm(void);
extern Object outstanding_byte_code_stream_count(void);
extern Object outstanding_compiler_code_body_entry_count(void);
extern Object outstanding_compiler_conses(void);
extern Object outstanding_computation_instance_count(void);
extern Object outstanding_goto_tag_entry_count(void);
extern Object outstanding_inlining_data_holder_count(void);
extern Object outstanding_pseudo_instruction_stream_count(void);
extern Object outstanding_stack_conses(void);
extern Object outstanding_stack_node_count(void);
extern Object outstanding_stack_node_instruction_count(void);
extern Object phrase_cons(Object,Object);
extern Object phrase_cons_with_args_reversed(Object,Object);
extern Object phrase_list_2(Object,Object);
extern Object phrase_list_3(Object,Object,Object);
extern Object print_activities_in_byte_code_body(Object);
extern Object print_activity_list(Object);
extern Object procedure_compiler_duplicate_local_name_error(Object);
extern Object procedure_compiler_missing_local_name_error(Object);
extern Object procedure_method_class_function(Object);
extern Object procedure_method_name_function(Object);
extern Object pseudo_instruction_stream_structure_memory_usage(void);
extern Object push_optimized_constant(Object);
extern Object read_byte_code_stream_vector(Object);
extern Object reason_not_runnable(Object);
extern Object reclaim_byte_code_stream_1(Object);
extern Object reclaim_compiler_code_body_entry_1(Object);
extern Object reclaim_compiler_cons_1(Object);
extern Object reclaim_compiler_list_1(Object);
extern Object reclaim_compiler_list_star_1(Object);
extern Object reclaim_compiler_tree_1(Object);
extern Object reclaim_computation_instance_1(Object);
extern Object reclaim_create_pseudo_instruction_property_list(Object);
extern Object reclaim_evaluation_value(Object);
extern Object reclaim_goto_tag_entry_1(Object);
extern Object reclaim_if_simple_vector_of_slot_values(Object);
extern Object reclaim_inlining_data_holder_1(Object);
extern Object reclaim_managed_simple_vector(Object);
extern Object reclaim_pseudo_instruction_stream_1(Object);
extern Object reclaim_schedule_task_args(Object);
extern Object reclaim_slot_value_list_1(Object);
extern Object reclaim_stack_cons_1(Object);
extern Object reclaim_stack_list_1(Object);
extern Object reclaim_stack_list_of_nodes(Object);
extern Object reclaim_stack_list_star_1(Object);
extern Object reclaim_stack_node_1(Object);
extern Object reclaim_stack_node_instruction(Object);
extern Object reclaim_stack_node_instruction_1_1(Object);
extern Object reclaim_stack_tree_1(Object);
extern Object reclaim_text_string(Object);
extern Object record_direct_structure_method(Object,Object,Object);
extern Object record_free_reference(Object,Object);
extern Object record_goto_tags(Object);
extern Object record_item_made_incomplete_if_appropriate(Object);
extern Object record_new_goto_tag(Object);
extern Object record_system_variable(Object,Object,Object,Object,Object,Object,Object);
extern Object redundant_parameter_free_reference_qm(Object,Object);
extern Object regenerate_optimized_constant(Object);
extern Object register_byte_code_tag_resolution_address(Object,Object,Object);
extern Object register_byte_code_tag_resolution_point(Object,Object);
extern Object register_constant_in_byte_code_stream(Object,Object);
extern Object register_goto_tag_address(Object,Object,Object);
extern Object register_internal_constant_in_byte_code_stream(Object,Object);
extern Object register_tag_in_byte_code_stream(int,...);
extern Object remove_compiler_error_and_warning_frame_notes(void);
extern Object replenish_compiler_cons_pool(void);
extern Object replenish_compiler_list_pool(Object);
extern Object replenish_lookup_cons_pool(void);
extern Object replenish_stack_cons_pool(void);
extern Object replenish_stack_list_pool(Object);
extern Object restrict_destabilization_p(Object,Object);
extern Object runnable_p_function(Object);
extern Object set_pseudo_instruction_property(Object,Object,Object);
extern Object set_skip_list_entry(Object,Object,Object,Object,Object,Object,Object,Object);
extern Object slot_value_cons_1(Object,Object);
extern Object slot_value_list_2(Object,Object);
extern Object slot_value_list_4(Object,Object,Object,Object);
extern Object stable_class_p(int,...);
extern Object stable_denoted_procedure_p(int,...);
extern Object stable_name_of_class_p(Object,Object,Object);
extern Object stable_name_p(int,...);
extern Object stack_cons_1(Object,Object);
extern Object stack_cons_memory_usage(void);
extern Object stack_list_2(Object,Object);
extern Object stack_list_3(Object,Object,Object);
extern Object stack_list_4(Object,Object,Object,Object);
extern Object stack_list_trace_hook(Object);
extern Object stack_node_instruction_structure_memory_usage(void);
extern Object stack_node_structure_memory_usage(void);
extern Object string_eq_w(Object,Object);
extern Object text_string_length(Object);
extern Object text_string_p(Object);
extern Object tformat(int,...);
extern Object twrite_beginning_of_wide_string(Object,Object);
extern Object twrite_character(Object);
extern Object twrite_compiler_message_header(void);
extern Object twrite_general_string(Object);
extern Object twrite_single_free_reference_for_consistency(Object,Object);
extern Object type_specification_class_function(Object);
extern Object type_specification_subtype_p(Object,Object);
extern Object type_specifications_could_intersect_p(Object,Object);
extern Object update_frame_status(Object,Object,Object);
extern Object update_object_pool_meters_list(Object);
extern Object valid_type_specification_p(Object);
extern Object valid_var_spot_index_p(Object);
extern Object valid_var_spot_p(Object);
extern Object var_spot_type(Object,Object);
extern Object variable_spot_and_description_for_local_name(Object);
extern Object write_activity_given_index(Object,Object,Object);
extern Object write_activity_given_pc_and_byte_code_body(Object,Object);
extern Object write_byte_code_to_stream(Object,Object);
extern Object write_list_of_type_specifications(Object);
extern Object write_type_specification(Object);

#else

extern Object activity_given_index();
extern Object add_activity_translation_to_code_stream();
extern Object add_compiler_error_and_warning_frame_notes();
extern Object add_frame_note();
extern Object add_or_delete_as_item_referring_to_name();
extern Object add_to_frame_note_particulars_list_if_necessary();
extern Object adjust_nesting_of_inlining_data_received_value_compilations();
extern Object allocate_byte_vector();
extern Object allocate_byte_vector_16();
extern Object allocate_managed_simple_vector();
extern Object analyze_compiled_items_for_consistency();
extern Object analyze_single_free_reference_for_consistency();
extern Object assq_function();
extern Object available_var_spot_count();
extern Object block_can_be_dependent_p();
extern Object block_can_be_inlined_p();
extern Object block_is_optimizable_p();
extern Object block_is_unstable_p();
extern Object byte_code_stream_structure_memory_usage();
extern Object bytes_per_simple_vector();
extern Object cached_parses_up_to_date_p();
extern Object cancel_and_reclaim_scheduled_queue_element_1();
extern Object check_for_cached_attribute();
extern Object check_for_cached_name_undefined_instance();
extern Object check_for_invalid_inlining();
extern Object check_for_new_code_body_errors();
extern Object check_for_undefined_attribute();
extern Object check_for_undefined_attribute_of_class();
extern Object check_for_undefined_class();
extern Object check_for_undefined_class_qualified_attribute();
extern Object check_for_undefined_class_qualified_attribute_of_class();
extern Object check_for_undefined_class_qualified_method();
extern Object check_for_undefined_instance_name();
extern Object check_for_unstable_class_and_non_subclass();
extern Object check_for_unstable_class_and_subclass();
extern Object check_for_unstable_instance_name();
extern Object check_for_unstable_instance_name_of_class();
extern Object check_for_valid_function_call();
extern Object check_for_valid_method();
extern Object check_for_valid_procedure_call();
extern Object check_for_valid_stable_compile_time_selected_method();
extern Object check_for_valid_stable_procedure_call();
extern Object check_undefined_instances_of_class();
extern Object check_undefined_instances_of_type();
extern Object class_type_specification_p();
extern Object clear_compiler_errors();
extern Object clear_inlining_data();
extern Object clear_optimized_constants();
extern Object coalesce_lookup_structures();
extern Object collect_subclasses();
extern Object compilations_up_to_date_p();
extern Object compiler_bug();
extern Object compiler_code_body_entry_structure_memory_usage();
extern Object compiler_cons_1();
extern Object compiler_cons_memory_usage();
extern Object compiler_dependence_warning();
extern Object compiler_error();
extern Object compiler_errors_qm();
extern Object compiler_list_2();
extern Object compiler_list_3();
extern Object compiler_list_4();
extern Object compiler_list_trace_hook();
extern Object compiler_warning();
extern Object compress_annotation_info_for_saving();
extern Object computation_instance_structure_memory_usage();
extern Object constant_fold_internal_constants_p();
extern Object constant_queue_next();
extern Object copy_for_slot_value();
extern Object copy_list_using_compiler_conses_1();
extern Object copy_list_using_slot_value_conses_1();
extern Object copy_list_using_stack_conses_1();
extern Object copy_out_current_wide_string();
extern Object copy_stack_node_instruction_extra_info();
extern Object copy_tree_using_compiler_conses_1();
extern Object copy_tree_using_stack_conses_1();
extern Object create_pseudo_instruction_property_list();
extern Object delete_compiler_cons_1();
extern Object delete_compiler_element_1();
extern Object delete_frame_note_if_any();
extern Object delete_stack_cons_1();
extern Object delete_stack_element_1();
extern Object denote_component_of_block();
extern Object denoted_name_of_type_p();
extern Object dependent_compilation_p();
extern Object destabilizing_item_deletion_p();
extern Object destabilizing_operation_restricted_for_item_p();
extern Object destabilizing_slot_p();
extern Object direct_structure_method();
extern Object emit_already_consed_instruction();
extern Object emit_already_consed_instruction_to_stream();
extern Object environment_index_ok_in_this_context_qm();
extern Object equalw();
extern Object evaluation_value_p_function();
extern Object evaluation_values_can_be_constant_folded_p();
extern Object extend_current_wide_string();
extern Object find_activity();
extern Object generate_list_of_lexically_visible_code_bodies();
extern Object generate_new_goto_tag();
extern Object generate_new_index_in_code_body();
extern Object generate_new_stack_arg_var_spot();
extern Object generate_new_stack_frame_var_spot();
extern Object generate_new_variable_spot();
extern Object get_inline_call_number();
extern Object get_instance_with_name_if_any();
extern Object get_lookup_slot_value_given_default();
extern Object get_module_block_is_in();
extern Object get_slot_value_function();
extern Object get_specific_method();
extern Object getfq_function_no_default();
extern Object goto_tag_entry_structure_memory_usage();
extern Object handle_dependent_or_stable_status_change_for_item();
extern Object handle_stable_hierarchy_or_inline_status_change_for_item();
extern Object indirectly_denoted_item_p();
extern Object inlining_data_holder_structure_memory_usage();
extern Object inlining_data_recieved_value_compilations_qm();
extern Object inner_block_cant_be_inlined_in_outer_block_qm();
extern Object install_free_references_in_byte_code_body();
extern Object invocation_stack_program_counter_function();
extern Object jump_depth_for_tag_qm();
extern Object load_and_initialize_type_description();
extern Object lookup_global_or_kb_specific_property_value();
extern Object lookup_kb_specific_property_value();
extern Object make_byte_code_stream_1();
extern Object make_byte_code_stream_given_base_stream();
extern Object make_compiler_code_body_entry_1();
extern Object make_compiler_list_1();
extern Object make_computation_instance_1();
extern Object make_goto_tag_entry_1();
extern Object make_inferior_byte_code_stream();
extern Object make_inlining_data_holder_1();
extern Object make_named_dynamic_extent_description();
extern Object make_permanent_byte_code_stream_structure_internal();
extern Object make_permanent_compiler_code_body_entry_structure_internal();
extern Object make_permanent_computation_instance_structure_internal();
extern Object make_permanent_goto_tag_entry_structure_internal();
extern Object make_permanent_inlining_data_holder_structure_internal();
extern Object make_permanent_pseudo_instruction_stream_structure_internal();
extern Object make_permanent_stack_node_instruction_structure_internal();
extern Object make_permanent_stack_node_structure_internal();
extern Object make_procedure_byte_code_constants();
extern Object make_pseudo_instruction_stream_1();
extern Object make_stack_list_1();
extern Object make_stack_node_1_1();
extern Object make_stack_node_instruction_1_1();
extern Object make_symbol_properties_hash_table_skip_list_sentinel();
extern Object make_thread_array();
extern Object mangle_tag_in_context();
extern Object memq_function();
extern Object merge_byte_code_streams();
extern Object merge_pseudo_instruction_stream();
extern Object merge_pseudo_instruction_streams();
extern Object mutate_global_property();
extern Object note_change_to_block_1();
extern Object note_independent_item_in_stable_free_reference();
extern Object note_invalid_inlining();
extern Object note_invalid_stable_free_reference();
extern Object note_invalid_stable_hierarchy();
extern Object optimizable_in_context_qm();
extern Object outstanding_byte_code_stream_count();
extern Object outstanding_compiler_code_body_entry_count();
extern Object outstanding_compiler_conses();
extern Object outstanding_computation_instance_count();
extern Object outstanding_goto_tag_entry_count();
extern Object outstanding_inlining_data_holder_count();
extern Object outstanding_pseudo_instruction_stream_count();
extern Object outstanding_stack_conses();
extern Object outstanding_stack_node_count();
extern Object outstanding_stack_node_instruction_count();
extern Object phrase_cons();
extern Object phrase_cons_with_args_reversed();
extern Object phrase_list_2();
extern Object phrase_list_3();
extern Object print_activities_in_byte_code_body();
extern Object print_activity_list();
extern Object procedure_compiler_duplicate_local_name_error();
extern Object procedure_compiler_missing_local_name_error();
extern Object procedure_method_class_function();
extern Object procedure_method_name_function();
extern Object pseudo_instruction_stream_structure_memory_usage();
extern Object push_optimized_constant();
extern Object read_byte_code_stream_vector();
extern Object reason_not_runnable();
extern Object reclaim_byte_code_stream_1();
extern Object reclaim_compiler_code_body_entry_1();
extern Object reclaim_compiler_cons_1();
extern Object reclaim_compiler_list_1();
extern Object reclaim_compiler_list_star_1();
extern Object reclaim_compiler_tree_1();
extern Object reclaim_computation_instance_1();
extern Object reclaim_create_pseudo_instruction_property_list();
extern Object reclaim_evaluation_value();
extern Object reclaim_goto_tag_entry_1();
extern Object reclaim_if_simple_vector_of_slot_values();
extern Object reclaim_inlining_data_holder_1();
extern Object reclaim_managed_simple_vector();
extern Object reclaim_pseudo_instruction_stream_1();
extern Object reclaim_schedule_task_args();
extern Object reclaim_slot_value_list_1();
extern Object reclaim_stack_cons_1();
extern Object reclaim_stack_list_1();
extern Object reclaim_stack_list_of_nodes();
extern Object reclaim_stack_list_star_1();
extern Object reclaim_stack_node_1();
extern Object reclaim_stack_node_instruction();
extern Object reclaim_stack_node_instruction_1_1();
extern Object reclaim_stack_tree_1();
extern Object reclaim_text_string();
extern Object record_direct_structure_method();
extern Object record_free_reference();
extern Object record_goto_tags();
extern Object record_item_made_incomplete_if_appropriate();
extern Object record_new_goto_tag();
extern Object record_system_variable();
extern Object redundant_parameter_free_reference_qm();
extern Object regenerate_optimized_constant();
extern Object register_byte_code_tag_resolution_address();
extern Object register_byte_code_tag_resolution_point();
extern Object register_constant_in_byte_code_stream();
extern Object register_goto_tag_address();
extern Object register_internal_constant_in_byte_code_stream();
extern Object register_tag_in_byte_code_stream();
extern Object remove_compiler_error_and_warning_frame_notes();
extern Object replenish_compiler_cons_pool();
extern Object replenish_compiler_list_pool();
extern Object replenish_lookup_cons_pool();
extern Object replenish_stack_cons_pool();
extern Object replenish_stack_list_pool();
extern Object restrict_destabilization_p();
extern Object runnable_p_function();
extern Object set_pseudo_instruction_property();
extern Object set_skip_list_entry();
extern Object slot_value_cons_1();
extern Object slot_value_list_2();
extern Object slot_value_list_4();
extern Object stable_class_p();
extern Object stable_denoted_procedure_p();
extern Object stable_name_of_class_p();
extern Object stable_name_p();
extern Object stack_cons_1();
extern Object stack_cons_memory_usage();
extern Object stack_list_2();
extern Object stack_list_3();
extern Object stack_list_4();
extern Object stack_list_trace_hook();
extern Object stack_node_instruction_structure_memory_usage();
extern Object stack_node_structure_memory_usage();
extern Object string_eq_w();
extern Object text_string_length();
extern Object text_string_p();
extern Object tformat();
extern Object twrite_beginning_of_wide_string();
extern Object twrite_character();
extern Object twrite_compiler_message_header();
extern Object twrite_general_string();
extern Object twrite_single_free_reference_for_consistency();
extern Object type_specification_class_function();
extern Object type_specification_subtype_p();
extern Object type_specifications_could_intersect_p();
extern Object update_frame_status();
extern Object update_object_pool_meters_list();
extern Object valid_type_specification_p();
extern Object valid_var_spot_index_p();
extern Object valid_var_spot_p();
extern Object var_spot_type();
extern Object variable_spot_and_description_for_local_name();
extern Object write_activity_given_index();
extern Object write_activity_given_pc_and_byte_code_body();
extern Object write_byte_code_to_stream();
extern Object write_list_of_type_specifications();
extern Object write_type_specification();

#endif

/* variables/constants */
extern Object Action_compiler_prop;
extern Object Action_method_compiler_prop;
DECLARE_VARIABLE_WITH_SYMBOL(Always_recompile_on_load, Qalways_recompile_on_load);
DECLARE_VARIABLE_WITH_SYMBOL(Available_compiler_conses, Qavailable_compiler_conses);
DECLARE_VARIABLE_WITH_SYMBOL(Available_compiler_conses_tail, Qavailable_compiler_conses_tail);
extern Object Available_compiler_conses_tail_vector;
extern Object Available_compiler_conses_vector;
extern Object Available_lookup_conses_tail_vector;
extern Object Available_lookup_conses_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Available_stack_conses, Qavailable_stack_conses);
DECLARE_VARIABLE_WITH_SYMBOL(Available_stack_conses_tail, Qavailable_stack_conses_tail);
extern Object Available_stack_conses_tail_vector;
extern Object Available_stack_conses_vector;
#define Base_in_line_evaluator_number FIX((SI_Long)150L)
#define Bits_in_var_spot_index FIX((SI_Long)16L)
#define Bits_in_var_spot_local_index FIX((SI_Long)10L)
#define Bits_in_var_spot_nesting FIX((SI_Long)6L)
DECLARE_VARIABLE_WITH_SYMBOL(Block_class_description, Qblock_class_description);
DECLARE_VARIABLE_WITH_SYMBOL(Byte_code_stream_count, Qbyte_code_stream_count);
extern Object Bytes_per_rtl_ptr;
extern Object Cached_attribute_cons_marker;
DECLARE_VARIABLE_WITH_SYMBOL(Chain_of_available_byte_code_streams, Qchain_of_available_byte_code_streams);
extern Object Chain_of_available_byte_code_streams_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Chain_of_available_compiler_code_body_entrys, Qchain_of_available_compiler_code_body_entrys);
extern Object Chain_of_available_compiler_code_body_entrys_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Chain_of_available_computation_instances, Qchain_of_available_computation_instances);
extern Object Chain_of_available_computation_instances_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Chain_of_available_goto_tag_entrys, Qchain_of_available_goto_tag_entrys);
extern Object Chain_of_available_goto_tag_entrys_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Chain_of_available_inlining_data_holders, Qchain_of_available_inlining_data_holders);
extern Object Chain_of_available_inlining_data_holders_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Chain_of_available_pseudo_instruction_streams, Qchain_of_available_pseudo_instruction_streams);
extern Object Chain_of_available_pseudo_instruction_streams_vector;
extern Object Chain_of_available_schedule_tasks_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Chain_of_available_stack_node_instructions, Qchain_of_available_stack_node_instructions);
extern Object Chain_of_available_stack_node_instructions_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Chain_of_available_stack_nodes, Qchain_of_available_stack_nodes);
extern Object Chain_of_available_stack_nodes_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Class_definition_class_description, Qclass_definition_class_description);
extern Object Class_definition_gkbprop;
extern Object Class_description_gkbprop;
DECLARE_VARIABLE_WITH_SYMBOL(Code_body, Qcode_body);
DECLARE_VARIABLE_WITH_SYMBOL(Code_body_entries_in_compilation, Qcode_body_entries_in_compilation);
DECLARE_VARIABLE_WITH_SYMBOL(Collecting_free_references, Qcollecting_free_references);
DECLARE_VARIABLE_WITH_SYMBOL(Compiled_item_being_analyzed, Qcompiled_item_being_analyzed);
DECLARE_VARIABLE_WITH_SYMBOL(Compiled_item_being_analyzed_started_out_incomplete_qm, Qcompiled_item_being_analyzed_started_out_incomplete_qm);
DECLARE_VARIABLE_WITH_SYMBOL(Compiler_code_body_entry_count, Qcompiler_code_body_entry_count);
DECLARE_VARIABLE_WITH_SYMBOL(Compiler_cons_counter, Qcompiler_cons_counter);
extern Object Compiler_cons_counter_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Compiler_errors, Qcompiler_errors);
DECLARE_VARIABLE_WITH_SYMBOL(Compiler_free_references, Qcompiler_free_references);
#define Compiler_header_statement_length_limit FIX((SI_Long)40L)
DECLARE_VARIABLE_WITH_SYMBOL(Compiler_warnings, Qcompiler_warnings);
DECLARE_VARIABLE_WITH_SYMBOL(Compiling_incomplete_items_after_analyze_p, Qcompiling_incomplete_items_after_analyze_p);
DECLARE_VARIABLE_WITH_SYMBOL(Computation_instance_count, Qcomputation_instance_count);
extern Object Cons_pool_conses_to_make_at_a_time;
DECLARE_VARIABLE_WITH_SYMBOL(Current_computation_activity, Qcurrent_computation_activity);
DECLARE_VARIABLE_WITH_SYMBOL(Current_computation_component_particulars, Qcurrent_computation_component_particulars);
DECLARE_VARIABLE_WITH_SYMBOL(Current_computation_frame, Qcurrent_computation_frame);
DECLARE_VARIABLE_WITH_SYMBOL(Current_computation_instance, Qcurrent_computation_instance);
DECLARE_VARIABLE_WITH_SYMBOL(Current_kb_specific_property_list_property_name, Qcurrent_kb_specific_property_list_property_name);
DECLARE_VARIABLE_WITH_SYMBOL(Current_schedule_task, Qcurrent_schedule_task);
DECLARE_VARIABLE_WITH_SYMBOL(Current_thread_index, Qcurrent_thread_index);
DECLARE_VARIABLE_WITH_SYMBOL(Current_twriting_output_type, Qcurrent_twriting_output_type);
DECLARE_VARIABLE_WITH_SYMBOL(Current_wide_string, Qcurrent_wide_string);
DECLARE_VARIABLE_WITH_SYMBOL(Current_wide_string_list, Qcurrent_wide_string_list);
DECLARE_VARIABLE_WITH_SYMBOL(Definition_class_description, Qdefinition_class_description);
DECLARE_VARIABLE_WITH_SYMBOL(Delete_as_item_referring_to_name_qm, Qdelete_as_item_referring_to_name_qm);
#define Dispatch_instruction_number FIX((SI_Long)255L)
DECLARE_VARIABLE_WITH_SYMBOL(Duplicate_local_names_already_reported, Qduplicate_local_names_already_reported);
DECLARE_VARIABLE_WITH_SYMBOL(Entity_class_description, Qentity_class_description);
extern Object Expiration_source_operator_p_prop;
extern Object Expiration_special_form_operator_p_prop;
DECLARE_VARIABLE_WITH_SYMBOL(Fill_pointer_for_current_wide_string, Qfill_pointer_for_current_wide_string);
DECLARE_VARIABLE_WITH_SYMBOL(Frame_note_index, Qframe_note_index);
DECLARE_VARIABLE_WITH_SYMBOL(Frame_note_index_skip, Qframe_note_index_skip);
extern Object Frame_or_frames_with_this_name_kbprop;
DECLARE_VARIABLE_WITH_SYMBOL(Funcalled_evaluator_array, Qfuncalled_evaluator_array);
DECLARE_VARIABLE_WITH_SYMBOL(Funcalled_evaluator_dispatch_type, Qfuncalled_evaluator_dispatch_type);
DECLARE_VARIABLE_WITH_SYMBOL(Funcalled_evaluator_functions, Qfuncalled_evaluator_functions);
DECLARE_VARIABLE_WITH_SYMBOL(Function_definition_class_description, Qfunction_definition_class_description);
DECLARE_VARIABLE_WITH_SYMBOL(Goto_tag_entry_count, Qgoto_tag_entry_count);
extern Object Goto_tag_recorder_prop;
DECLARE_VARIABLE_WITH_SYMBOL(Goto_tags_in_compilation, Qgoto_tags_in_compilation);
DECLARE_VARIABLE_WITH_SYMBOL(In_line_evaluator_array, Qin_line_evaluator_array);
DECLARE_VARIABLE_WITH_SYMBOL(Inhibit_free_reference_recording, Qinhibit_free_reference_recording);
DECLARE_VARIABLE_WITH_SYMBOL(Inlining_data, Qinlining_data);
DECLARE_VARIABLE_WITH_SYMBOL(Inlining_data_holder_count, Qinlining_data_holder_count);
DECLARE_VARIABLE_WITH_SYMBOL(Inside_breakpoint_p, Qinside_breakpoint_p);
DECLARE_VARIABLE_WITH_SYMBOL(Kb_flags, Qkb_flags);
DECLARE_VARIABLE_WITH_SYMBOL(Lexically_visible_code_bodies, Qlexically_visible_code_bodies);
DECLARE_VARIABLE_WITH_SYMBOL(Lexically_visible_goto_tags, Qlexically_visible_goto_tags);
extern Object Maximum_byte_vector_length;
extern Object Maximum_code_body_count;
extern Object Maximum_constant_vector_length;
#define Maximum_managed_simple_vector_size FIX((SI_Long)1024L)
#define Maximum_number_of_extended_inline_evaluators FIX((SI_Long)250L)
#define Maximum_number_of_funcalled_evaluators FIX((SI_Long)200L)
#define Maximum_number_of_in_line_evaluators FIX((SI_Long)106L)
extern Object Maximum_stack_instruction_vector_length;
#define Maximum_var_spot_index FIX((SI_Long)65535L)
#define Maximum_var_spot_local_index FIX((SI_Long)1023L)
#define Maximum_var_spot_nesting FIX((SI_Long)63L)
DECLARE_VARIABLE_WITH_SYMBOL(Method_class_description, Qmethod_class_description);
DECLARE_VARIABLE_WITH_SYMBOL(Method_declaration_class_description, Qmethod_declaration_class_description);
DECLARE_VARIABLE_WITH_SYMBOL(Missing_local_names_already_reported, Qmissing_local_names_already_reported);
DECLARE_VARIABLE_WITH_SYMBOL(New_goto_tag_counter, Qnew_goto_tag_counter);
DECLARE_VARIABLE_WITH_SYMBOL(Next_stack_frame_var_location, Qnext_stack_frame_var_location);
extern Object No_specific_property_value;
DECLARE_VARIABLE_WITH_SYMBOL(Noting_changes_to_kb_p, Qnoting_changes_to_kb_p);
DECLARE_VARIABLE_WITH_SYMBOL(Outermost_stack_frame_var_binding_qm, Qoutermost_stack_frame_var_binding_qm);
DECLARE_VARIABLE_WITH_SYMBOL(Parameter_class_description, Qparameter_class_description);
extern Object Preferred_instruction_chooser_prop;
DECLARE_VARIABLE_WITH_SYMBOL(Procedure_class_description, Qprocedure_class_description);
extern Object Procedure_statement_compiler_prop;
extern Object Procedure_statement_writer_prop;
extern Object Pseudo_instruction_byte_code_emitter_prop;
DECLARE_VARIABLE_WITH_SYMBOL(Pseudo_instruction_stream_count, Qpseudo_instruction_stream_count);
DECLARE_VARIABLE_WITH_SYMBOL(Reading_kb_p, Qreading_kb_p);
DECLARE_VARIABLE_WITH_SYMBOL(Recompile_on_next_load, Qrecompile_on_next_load);
extern Object Registered_activities_array;
DECLARE_VARIABLE_WITH_SYMBOL(Remote_procedure_declaration_class_description, Qremote_procedure_declaration_class_description);
extern Object Required_domain_types_of_role_prop;
DECLARE_VARIABLE_WITH_SYMBOL(Result_index, Qresult_index);
DECLARE_VARIABLE_WITH_SYMBOL(Rule_class_description, Qrule_class_description);
DECLARE_VARIABLE_WITH_SYMBOL(Scope_conses, Qscope_conses);
extern Object Special_annotation_lookup_structure_marker;
DECLARE_VARIABLE_WITH_SYMBOL(Stack_cons_counter, Qstack_cons_counter);
extern Object Stack_cons_counter_vector;
extern Object Stack_evaluators_prop;
DECLARE_VARIABLE_WITH_SYMBOL(Stack_frame_vars_ok_in_procedure_qm, Qstack_frame_vars_ok_in_procedure_qm);
DECLARE_VARIABLE_WITH_SYMBOL(Stack_node_count, Qstack_node_count);
DECLARE_VARIABLE_WITH_SYMBOL(Stack_node_instruction_count, Qstack_node_instruction_count);
extern Object Stack_node_instruction_emitter_prop;
extern Object Stack_node_instruction_extra_info_copier_prop;
extern Object Stack_node_instruction_reclaimer_prop;
DECLARE_VARIABLE_WITH_SYMBOL(Stack_nodes_to_reclaim, Qstack_nodes_to_reclaim);
extern Object Stack_special_form_converter_prop;
DECLARE_VARIABLE_WITH_SYMBOL(Structure_being_reclaimed, Qstructure_being_reclaimed);
extern Object Symbol_properties_table;
extern Object The_type_description_of_byte_code_stream;
extern Object The_type_description_of_compiler_code_body_entry;
extern Object The_type_description_of_computation_instance;
extern Object The_type_description_of_goto_tag_entry;
extern Object The_type_description_of_inlining_data_holder;
extern Object The_type_description_of_pseudo_instruction_stream;
extern Object The_type_description_of_stack_node;
extern Object The_type_description_of_stack_node_instruction;
DECLARE_VARIABLE_WITH_SYMBOL(Total_length_of_current_wide_string, Qtotal_length_of_current_wide_string);
DECLARE_VARIABLE_WITH_SYMBOL(Variable_or_parameter_class_description, Qvariable_or_parameter_class_description);
DECLARE_VARIABLE_WITH_SYMBOL(Variables_that_did_not_have_values, Qvariables_that_did_not_have_values);
DECLARE_VARIABLE_WITH_SYMBOL(Working_on_lexical_computation_of_frame, Qworking_on_lexical_computation_of_frame);
