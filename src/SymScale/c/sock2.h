/* sock2.h -- Header File for sock2.c
 * Copyright (C) 1986-2017 Gensym Corporation.  All Rights Reserved.
 */


/* Symbol Definitions */
extern Object Qblock;
extern Object Qbyte;
extern Object Kelement_type;
extern Object Qtype;
extern Object Qunsigned_byte;

extern Object Pclos;
extern Object Pclos_run;
extern Object Pclosx;
extern Object Pcl;
extern Object Pcl_user;
extern Object Pkeyword;
extern Object Ptrun;
extern Object Ptx;

/* function declarations */

#ifdef USE_PROTOTYPES

extern Object add_class_to_environment(int,...);
extern Object add_task_to_output_queue(Object,Object);
extern Object allocate_byte_vector_16(Object);
extern Object allocate_evaluation_sequence(Object);
extern Object allocate_managed_array(int,...);
extern Object append_continuation_data(Object,Object);
extern Object blocking_socket_structure_memory_usage(void);
extern Object bytes_per_simple_vector(Object);
extern Object c_icmp_open(Object,Object,Object);
extern Object cancel_and_reclaim_scheduled_queue_element_1(Object);
extern Object change_slot_value(int,...);
extern Object check_if_superior_classes_are_defined(Object,Object);
extern Object cleanup_blocking_socket(Object);
extern Object clear_optimized_constants(void);
extern Object close_socket(int,...);
extern Object code_body_continuation_structure_memory_usage(void);
extern Object code_body_invocation_local_name_value(Object,Object);
extern Object complete_blocking_socket_continuation(Object);
extern Object complete_code_body_continuation(Object);
extern Object complete_tcp_write_continuation(Object);
extern Object complete_tcp_write_task(Object,Object);
extern Object concatenate_text_strings(Object,Object);
extern Object connect_socket(Object,Object,Object,Object);
extern Object copy_foreign_string_arg_if_appropriate(Object);
extern Object copy_null_terminated_string_as_text_string(Object);
extern Object copy_out_current_wide_string(void);
extern Object copy_text_string(Object);
extern Object create_associated_g2_socket(Object);
extern Object data_available_p(Object);
extern Object delete_frame(Object);
extern Object direct_structure_method(Object,Object);
extern Object enqueue_tcp_cleanups(Object);
extern Object estructure_slot(Object,Object,Object);
extern Object eval_cons_1(Object,Object);
extern Object evaluation_sequence_aref(Object,Object);
extern Object execute_tcp_write(Object);
extern Object extend_current_gensym_string(int,...);
extern Object g2_initiate_ping(Object,Object,Object);
extern Object g2_tcp_accept(Object,Object);
extern Object g2_tcp_close(Object);
extern Object g2_tcp_connect(Object,Object,Object,Object);
extern Object g2_tcp_listen(Object,Object);
extern Object g2_tcp_read(Object,Object,Object);
extern Object g2_tcp_read_bytes_as_text(Object,Object,Object);
extern Object g2_tcp_write(Object,Object,Object);
extern Object g2_tcp_write_bytes(Object,Object,Object);
extern Object gensym_cons_1(Object,Object);
extern Object gensym_list_2(Object,Object);
extern Object get_accept_pathname(Object);
extern Object get_lookup_slot_value_given_default(Object,Object,Object);
extern Object get_reference_to_item(Object);
extern Object getfq_function_no_default(Object,Object);
extern Object handle_network_accept_internals(Object,Object,Object);
extern Object icmp_socket_structure_memory_usage(void);
extern Object install_code_body_invocation_completion_form(Object,Object);
extern Object lengthw(Object);
extern Object load_and_initialize_type_description(Object,Object);
extern Object make_blocking_socket_1(void);
extern Object make_blocking_socket_with_continuation(Object,Object);
extern Object make_code_body_continuation(int,...);
extern Object make_code_body_continuation_1_1(Object,Object,Object,Object);
extern Object make_error_text(Object,Object);
extern Object make_icmp_socket_1(void);
extern Object make_permanent_blocking_socket_structure_internal(void);
extern Object make_permanent_code_body_continuation_structure_internal(void);
extern Object make_permanent_icmp_socket_structure_internal(void);
extern Object make_queue(void);
extern Object make_thread_array(Object);
extern Object make_transient_item(Object);
extern Object make_variable_fill_icp_buffer(void);
extern Object maybe_fix_socket_status(Object,Object);
extern Object mutate_global_property(Object,Object,Object);
extern Object network_get_last_error_string(Object);
extern Object network_stack_error(Object,Object,Object);
extern Object notify_user_at_console(int,...);
extern Object obtain_simple_gensym_string_of_quantized_length(Object);
extern Object outstanding_blocking_socket_count(void);
extern Object outstanding_code_body_continuation_count(void);
extern Object outstanding_icmp_socket_count(void);
extern Object push_optimized_constant(Object);
extern Object queue_empty_p(Object);
extern Object queue_insert(Object,Object);
extern Object queue_peek(Object);
extern Object queue_pop(Object);
extern Object raw_stack_error_named_error(Object,Object);
extern Object read_byte_from_socket(Object);
extern Object read_from_socket(Object);
extern Object read_from_socket_until_char(Object,Object);
extern Object read_n_chars_from_socket(Object,Object);
extern Object read_number_from_text_string(int,...);
extern Object read_ping_stream(Object,Object);
extern Object reclaim_blocking_socket_1(Object);
extern Object reclaim_blocking_socket_partial_data(Object);
extern Object reclaim_blocking_socket_queue(Object);
extern Object reclaim_code_body_continuation_1(Object);
extern Object reclaim_evaluation_sequence(Object);
extern Object reclaim_evaluation_structure(Object);
extern Object reclaim_gensym_cons_1(Object);
extern Object reclaim_gensym_list_1(Object);
extern Object reclaim_gensym_string(Object);
extern Object reclaim_icmp_socket_1(Object);
extern Object reclaim_if_socket_buffer(Object);
extern Object reclaim_internal_socket_qm_value(Object,Object);
extern Object reclaim_list_of_block_snapshots(Object);
extern Object reclaim_output_queue_element(Object);
extern Object reclaim_queue(Object);
extern Object reclaim_schedule_task_args(Object);
extern Object reclaim_text_string(Object);
extern Object reclaim_variable_fill_icp_buffer(Object);
extern Object reclaim_wide_string(Object);
extern Object record_block_for_tformat(Object);
extern Object record_direct_structure_method(Object,Object,Object);
extern Object record_system_variable(Object,Object,Object,Object,Object,Object,Object);
extern Object regenerate_optimized_constant(Object);
extern Object register_socket_to_handle(Object,Object);
extern Object return_network_data_to_socket_continuation_if_any(Object);
extern Object set_blocking_socket_continuation(Object,Object,Object);
extern Object set_code_body_invocation_local_name_value(Object,Object,Object);
extern Object set_local_name_value_validating_environment(Object,Object,Object);
extern Object set_non_savable_lookup_slot_value(Object,Object,Object);
extern Object set_up_secure_icp(int,...);
extern Object start_listening(Object,Object,Object);
extern Object text_string_length(Object);
extern Object text_string_p(Object);
extern Object tformat(int,...);
extern Object tformat_stack_error_text_string(int,...);
extern Object translate_icmp_code(Object);
extern Object try_network_accept(Object,Object);
extern Object twrite(Object);
extern Object twrite_wide_character(Object);
extern Object update_g2_socket_status(Object,Object);
extern Object update_object_pool_meters_list(Object);
extern Object update_server_certificate(Object);
extern Object wake_up_code_body_invocation(Object);
extern Object write_bytes_to_socket(Object,Object);
extern Object write_to_socket(Object,Object);

#else

extern Object add_class_to_environment();
extern Object add_task_to_output_queue();
extern Object allocate_byte_vector_16();
extern Object allocate_evaluation_sequence();
extern Object allocate_managed_array();
extern Object append_continuation_data();
extern Object blocking_socket_structure_memory_usage();
extern Object bytes_per_simple_vector();
extern Object c_icmp_open();
extern Object cancel_and_reclaim_scheduled_queue_element_1();
extern Object change_slot_value();
extern Object check_if_superior_classes_are_defined();
extern Object cleanup_blocking_socket();
extern Object clear_optimized_constants();
extern Object close_socket();
extern Object code_body_continuation_structure_memory_usage();
extern Object code_body_invocation_local_name_value();
extern Object complete_blocking_socket_continuation();
extern Object complete_code_body_continuation();
extern Object complete_tcp_write_continuation();
extern Object complete_tcp_write_task();
extern Object concatenate_text_strings();
extern Object connect_socket();
extern Object copy_foreign_string_arg_if_appropriate();
extern Object copy_null_terminated_string_as_text_string();
extern Object copy_out_current_wide_string();
extern Object copy_text_string();
extern Object create_associated_g2_socket();
extern Object data_available_p();
extern Object delete_frame();
extern Object direct_structure_method();
extern Object enqueue_tcp_cleanups();
extern Object estructure_slot();
extern Object eval_cons_1();
extern Object evaluation_sequence_aref();
extern Object execute_tcp_write();
extern Object extend_current_gensym_string();
extern Object g2_initiate_ping();
extern Object g2_tcp_accept();
extern Object g2_tcp_close();
extern Object g2_tcp_connect();
extern Object g2_tcp_listen();
extern Object g2_tcp_read();
extern Object g2_tcp_read_bytes_as_text();
extern Object g2_tcp_write();
extern Object g2_tcp_write_bytes();
extern Object gensym_cons_1();
extern Object gensym_list_2();
extern Object get_accept_pathname();
extern Object get_lookup_slot_value_given_default();
extern Object get_reference_to_item();
extern Object getfq_function_no_default();
extern Object handle_network_accept_internals();
extern Object icmp_socket_structure_memory_usage();
extern Object install_code_body_invocation_completion_form();
extern Object lengthw();
extern Object load_and_initialize_type_description();
extern Object make_blocking_socket_1();
extern Object make_blocking_socket_with_continuation();
extern Object make_code_body_continuation();
extern Object make_code_body_continuation_1_1();
extern Object make_error_text();
extern Object make_icmp_socket_1();
extern Object make_permanent_blocking_socket_structure_internal();
extern Object make_permanent_code_body_continuation_structure_internal();
extern Object make_permanent_icmp_socket_structure_internal();
extern Object make_queue();
extern Object make_thread_array();
extern Object make_transient_item();
extern Object make_variable_fill_icp_buffer();
extern Object maybe_fix_socket_status();
extern Object mutate_global_property();
extern Object network_get_last_error_string();
extern Object network_stack_error();
extern Object notify_user_at_console();
extern Object obtain_simple_gensym_string_of_quantized_length();
extern Object outstanding_blocking_socket_count();
extern Object outstanding_code_body_continuation_count();
extern Object outstanding_icmp_socket_count();
extern Object push_optimized_constant();
extern Object queue_empty_p();
extern Object queue_insert();
extern Object queue_peek();
extern Object queue_pop();
extern Object raw_stack_error_named_error();
extern Object read_byte_from_socket();
extern Object read_from_socket();
extern Object read_from_socket_until_char();
extern Object read_n_chars_from_socket();
extern Object read_number_from_text_string();
extern Object read_ping_stream();
extern Object reclaim_blocking_socket_1();
extern Object reclaim_blocking_socket_partial_data();
extern Object reclaim_blocking_socket_queue();
extern Object reclaim_code_body_continuation_1();
extern Object reclaim_evaluation_sequence();
extern Object reclaim_evaluation_structure();
extern Object reclaim_gensym_cons_1();
extern Object reclaim_gensym_list_1();
extern Object reclaim_gensym_string();
extern Object reclaim_icmp_socket_1();
extern Object reclaim_if_socket_buffer();
extern Object reclaim_internal_socket_qm_value();
extern Object reclaim_list_of_block_snapshots();
extern Object reclaim_output_queue_element();
extern Object reclaim_queue();
extern Object reclaim_schedule_task_args();
extern Object reclaim_text_string();
extern Object reclaim_variable_fill_icp_buffer();
extern Object reclaim_wide_string();
extern Object record_block_for_tformat();
extern Object record_direct_structure_method();
extern Object record_system_variable();
extern Object regenerate_optimized_constant();
extern Object register_socket_to_handle();
extern Object return_network_data_to_socket_continuation_if_any();
extern Object set_blocking_socket_continuation();
extern Object set_code_body_invocation_local_name_value();
extern Object set_local_name_value_validating_environment();
extern Object set_non_savable_lookup_slot_value();
extern Object set_up_secure_icp();
extern Object start_listening();
extern Object text_string_length();
extern Object text_string_p();
extern Object tformat();
extern Object tformat_stack_error_text_string();
extern Object translate_icmp_code();
extern Object try_network_accept();
extern Object twrite();
extern Object twrite_wide_character();
extern Object update_g2_socket_status();
extern Object update_object_pool_meters_list();
extern Object update_server_certificate();
extern Object wake_up_code_body_invocation();
extern Object write_bytes_to_socket();
extern Object write_to_socket();

#endif

/* variables/constants */
extern Object Available_gensym_conses_tail_vector;
extern Object Available_gensym_conses_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Blocking_socket_count, Qblocking_socket_count);
DECLARE_VARIABLE_WITH_SYMBOL(Cached_top_of_stack, Qcached_top_of_stack);
DECLARE_VARIABLE_WITH_SYMBOL(Chain_of_available_blocking_sockets, Qchain_of_available_blocking_sockets);
extern Object Chain_of_available_blocking_sockets_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Chain_of_available_code_body_continuations, Qchain_of_available_code_body_continuations);
extern Object Chain_of_available_code_body_continuations_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Chain_of_available_icmp_sockets, Qchain_of_available_icmp_sockets);
extern Object Chain_of_available_icmp_sockets_vector;
extern Object Chain_of_available_schedule_tasks_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Code_body_continuation_count, Qcode_body_continuation_count);
DECLARE_VARIABLE_WITH_SYMBOL(Current_computation_frame, Qcurrent_computation_frame);
DECLARE_VARIABLE_WITH_SYMBOL(Current_computation_instance, Qcurrent_computation_instance);
DECLARE_VARIABLE_WITH_SYMBOL(Current_gensym_string, Qcurrent_gensym_string);
DECLARE_VARIABLE_WITH_SYMBOL(Current_schedule_task, Qcurrent_schedule_task);
DECLARE_VARIABLE_WITH_SYMBOL(Current_thread_index, Qcurrent_thread_index);
DECLARE_VARIABLE_WITH_SYMBOL(Current_twriting_output_type, Qcurrent_twriting_output_type);
DECLARE_VARIABLE_WITH_SYMBOL(Current_wide_string, Qcurrent_wide_string);
DECLARE_VARIABLE_WITH_SYMBOL(Current_wide_string_list, Qcurrent_wide_string_list);
extern Object Evaluation_false_value;
extern Object Evaluation_true_value;
DECLARE_VARIABLE_WITH_SYMBOL(Fill_pointer_for_current_gensym_string, Qfill_pointer_for_current_gensym_string);
DECLARE_VARIABLE_WITH_SYMBOL(Fill_pointer_for_current_wide_string, Qfill_pointer_for_current_wide_string);
#define G2_product_tag FIX((SI_Long)1L)
DECLARE_VARIABLE_WITH_SYMBOL(Icmp_socket_count, Qicmp_socket_count);
DECLARE_VARIABLE_WITH_SYMBOL(Inside_handle_event, Qinside_handle_event);
#define Managed_array_index_offset FIX((SI_Long)2L)
extern Object Maximum_in_place_array_size;
#define Maximum_length_for_user_text_strings FIX((SI_Long)100000000L)
#define Ne_error_value FIX((SI_Long)-2L)
extern Object Network_status_success;
DECLARE_VARIABLE_WITH_SYMBOL(Note_blocks_in_tformat, Qnote_blocks_in_tformat);
DECLARE_VARIABLE_WITH_SYMBOL(Ping_seq_id_array, Qping_seq_id_array);
extern Object Secure_icp_initialized_p;
DECLARE_VARIABLE_WITH_SYMBOL(Snapshots_of_related_blocks, Qsnapshots_of_related_blocks);
DECLARE_VARIABLE_WITH_SYMBOL(Structure_being_reclaimed, Qstructure_being_reclaimed);
extern Object The_type_description_of_blocking_socket;
extern Object The_type_description_of_code_body_continuation;
extern Object The_type_description_of_icmp_socket;
DECLARE_VARIABLE_WITH_SYMBOL(Total_length_of_current_gensym_string, Qtotal_length_of_current_gensym_string);
DECLARE_VARIABLE_WITH_SYMBOL(Total_length_of_current_wide_string, Qtotal_length_of_current_wide_string);
#define Use_tcpip_protocol_only FIX((SI_Long)13L)
