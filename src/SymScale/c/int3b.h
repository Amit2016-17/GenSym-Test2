/* int3b.h -- Header File for int3b.c
 * Copyright (C) 1986-2017 Gensym Corporation.  All Rights Reserved.
 */


/* Symbol Definitions */
extern Object Qdouble_float;
extern Object Kend1;
extern Object Qeq;
extern Object Qerror;
extern Object Qfixnum;
extern Object Qfloat;
extern Object Qnull;
extern Object Qsymbol;
extern Object Qunsigned_byte;

extern Object Pclos;
extern Object Pclos_run;
extern Object Pclosx;
extern Object Pcl;
extern Object Pcl_user;
extern Object Pkeyword;
extern Object Ptrun;
extern Object Ptx;

/* function declarations */

#ifdef USE_PROTOTYPES

extern Object acknowledge_icp_version_info_length_in_icp_bytes(void);
extern Object add_icp_message_handler(Object,Object);
extern Object allocate_byte_vector_16(Object);
extern Object assq_function(Object,Object);
extern Object byte_allotment_for_icp_output_port(Object,Object);
extern Object bytes_per_double_float_simple_array(Object);
extern Object c_native_clock_ticks_or_cache(Object,Object);
extern Object c_set_connection_pathname(Object,Object);
extern Object cancel_and_reclaim_scheduled_queue_element_1(Object);
extern Object clear_items_registered_with_handle_on_port(Object,Object);
extern Object compute_local_icp_version_info(void);
extern Object copy_gensym_string(Object);
extern Object copy_out_current_wide_string(void);
extern Object copy_text_string(Object);
extern Object deassign_index_in_index_space(Object,Object);
extern Object delete_skip_list_entry(Object,Object,Object,Object,Object);
extern Object deregister_corresponding_icp_object(Object,Object,Object,Object,Object);
extern Object describe_icp_connection(Object);
extern Object disallow_new_icp_listener_connection(Object);
extern Object do_i_am_alive_processing(Object);
extern Object dump_icp_buffer(Object);
extern Object emit_icp_read_trace(Object,Object,Object,Object,Object,Object,Object,Object,Object,Object);
extern Object emit_icp_write_trace(Object,Object,Object,Object,Object,Object,Object,Object,Object,Object);
extern Object end_icp_message_group(void);
extern Object enlarge_index_space(Object,Object);
extern Object enqueue_reclaim_index_space_message(Object,Object,Object,Object,Object,Object,Object);
extern Object ensure_remote_icp_version_info(Object,Object);
extern Object extend_current_gensym_string(int,...);
extern Object finalize_icp_version_info(Object,Object);
extern Object fixnum_length_in_icp_bytes(Object);
extern Object flush_and_shutdown_icp_socket(Object);
extern Object frame_serial_number_to_item_table(Object);
extern Object future_task_schedule_2(Object);
extern Object generate_float_vector(Object);
extern Object gensym_string_length_in_icp_bytes(Object);
extern Object gensym_string_to_wide_string(Object);
extern Object get_current_icp_contact_port_number_or_name_if_any(void);
extern Object get_icp_version_info_value(Object,Object,Object);
extern Object get_local_host_name(void);
extern Object get_local_icp_version_info_value(Object,Object);
extern Object get_remote_g2_time_at_start(Object);
extern Object get_remote_home_name(Object);
extern Object get_remote_host_name(Object);
extern Object get_remote_icp_version_info_value(Object,Object,Object);
extern Object get_remote_listener_port(Object);
extern Object get_unix_host_name(void);
extern Object getfq_function_no_default(Object,Object);
extern Object handle_acknowledge_deregister_corresponding_icp_object(Object,Object);
extern Object handle_delete_corresponding_icp_object(Object,Object,Object);
extern Object handle_icp_acknowledge_deregister_corresponding_icp_object(void);
extern Object handle_icp_acknowledge_deregister_corresponding_icp_object__body(Object,Object);
extern Object handle_icp_connection_denied(void);
extern Object handle_icp_connection_denied__body(void);
extern Object handle_icp_connection_shutdown_imminent(void);
extern Object handle_icp_connection_shutdown_imminent__body(Object);
extern Object handle_icp_define_dummy_object(void);
extern Object handle_icp_define_dummy_object__body(Object);
extern Object handle_icp_delete_icp_object_for_process(void);
extern Object handle_icp_delete_icp_object_for_process__body(Object,Object);
extern Object handle_icp_deregister_corresponding_icp_object(void);
extern Object handle_icp_deregister_corresponding_icp_object__body(Object,Object);
extern Object handle_icp_deregister_icp_objects(void);
extern Object handle_icp_deregister_icp_objects__body(Object,Object,Object);
extern Object handle_icp_deregister_original_icp_object(void);
extern Object handle_icp_deregister_original_icp_object__body(Object,Object);
extern Object handle_icp_end_message_block(void);
extern Object handle_icp_end_message_block__body(void);
extern Object handle_icp_enlarge_corresponding_icp_object_index_space(void);
extern Object handle_icp_enlarge_corresponding_icp_object_index_space__body(Object,Object);
extern Object handle_icp_i_am_alive(void);
extern Object handle_icp_i_am_alive__body(Object);
extern Object handle_icp_message_group_id(void);
extern Object handle_icp_message_group_id__body(Object,Object);
extern Object handle_icp_no_license(void);
extern Object handle_icp_no_license__body(void);
extern Object handle_icp_nop(void);
extern Object handle_icp_nop__body(Object);
extern Object handle_icp_remote_eval(void);
extern Object handle_icp_remote_eval__body(Object);
extern Object handle_unclogged_connection_if_necessary(Object);
extern Object handler_for_enlarge_corresponding_icp_object_index_space(Object,Object);
extern Object icp_case_2_error(Object,Object,Object,Object,Object,Object,Object,Object,Object,Object);
extern Object icp_connection_being_shutdown_qm(Object);
extern Object icp_connection_open_p(Object);
extern Object icp_cons_1(Object,Object);
extern Object icp_error_internal(Object,Object,Object,Object,Object);
extern Object icp_object_type_given_icp_object(Object,Object);
extern Object icp_version_info_element_length_in_icp_bytes(Object,Object,Object,Object);
extern Object icp_version_info_element_length_in_icp_bytes_1(Object,Object);
extern Object icp_version_info_element_value(Object,Object,Object);
extern Object initial_icp_version_info_length_in_icp_bytes(void);
extern Object initialize_i_am_alive_info(Object,Object);
extern Object instantaneous_icp_reader_byte_count(void);
extern Object instantaneous_icp_writer_byte_count(void);
extern Object intern_gensym_string(int,...);
extern Object intern_text_string(int,...);
extern Object item_index_space(Object);
extern Object items_registered_with_handle_on_port(Object,Object);
extern Object local_icp_version_info(void);
extern Object make_corresponding_icp_symbol(Object);
extern Object make_i_am_alive_info_1(void);
extern Object make_permanent_schedule_task_structure_internal(void);
extern Object maybe_set_connection_name(Object);
extern Object maybe_update_remote_icp_version_info(Object,Object,Object);
extern Object maybe_update_remote_icp_version_info_for_version(Object,Object,Object);
extern Object memq_function(Object,Object);
extern Object min_of_local_and_remote_icp_version_info_value(Object,Object);
extern Object mutate_global_property(Object,Object,Object);
extern Object name_for_local_home(void);
extern Object no_license_for_new_icp_listener_connection(Object);
extern Object note_item_deleted_from_frame_serial_number_table(Object);
extern Object note_no_object_in_deregister_corresponding_icp_object(Object,Object,Object,Object,Object);
extern Object notify_user(int,...);
extern Object notify_user_at_console(int,...);
extern Object number_of_outstanding_message_groups(Object);
extern Object read_acknowledge_icp_version_info(Object);
extern Object read_icp_byte(void);
extern Object read_icp_character(void);
extern Object read_icp_corresponding_icp_object_index_list(void);
extern Object read_icp_corresponding_object_index(void);
extern Object read_icp_deregister_corresponding_icp_object_index_space_name(void);
extern Object read_icp_deregister_icp_objects_operation(void);
extern Object read_icp_double_float_using_function(void);
extern Object read_icp_fill_bytes(Object);
extern Object read_icp_fixnum(void);
extern Object read_icp_float(void);
extern Object read_icp_gensym_string(void);
extern Object read_icp_integer(void);
extern Object read_icp_managed_double_float(void);
extern Object read_icp_number_of_icp_bytes_of_fill(void);
extern Object read_icp_s_expression_for_remote_eval(void);
extern Object read_icp_sexp_element(void);
extern Object read_icp_symbol_as_value_type(void);
extern Object read_icp_text_string(void);
extern Object read_icp_unsigned_integer(void);
extern Object read_icp_unsigned_integer_or_nil(void);
extern Object read_icp_version_info_element(Object,Object,Object);
extern Object read_icp_version_info_skip(Object);
extern Object read_icp_wide_string(void);
extern Object read_initial_icp_version_info(Object);
extern Object receive_initial_message(Object,Object);
extern Object reclaim_gensym_list_1(Object);
extern Object reclaim_gensym_string(Object);
extern Object reclaim_icp_cons_1(Object);
extern Object reclaim_icp_list_1(Object);
extern Object reclaim_icp_port_entry_for_registered_item(Object,Object);
extern Object reclaim_icp_version_info(Object);
extern Object reclaim_icp_version_info_element(Object);
extern Object reclaim_managed_simple_float_array_of_length_1(Object);
extern Object reclaim_s_expression_for_remote_eval(Object);
extern Object reclaim_schedule_task_args(Object);
extern Object reclaim_text_or_gensym_string(Object);
extern Object reclaim_text_string(Object);
extern Object reconstruct_g2_time_at_start(Object);
extern Object reconstruct_managed_float(Object,Object,Object,Object);
extern Object record_system_variable(Object,Object,Object,Object,Object,Object,Object);
extern Object remote_icp_build_identification_string_qm(Object);
extern Object remote_icp_major_version(Object);
extern Object remote_icp_minor_version(Object);
extern Object remote_icp_protocol_version(Object);
extern Object remote_icp_revision_number(Object);
extern Object remove_icp_port_entries_from_icp_object_1(Object,Object,Object,Object,Object);
extern Object resumable_icp_pop(void);
extern Object resumable_icp_pop_list_if_end_marker(void);
extern Object resumable_icp_push(Object);
extern Object schedule_send_i_am_alive_message(Object,Object);
extern Object send_i_am_alive_if_necessary(Object,Object);
extern Object send_i_am_alive_message(Object,Object);
extern Object send_icp_acknowledge_deregister_corresponding_icp_object(Object,Object);
extern Object send_icp_connection_denied(void);
extern Object send_icp_connection_shutdown_imminent(Object);
extern Object send_icp_define_dummy_object(Object);
extern Object send_icp_delete_icp_object_for_process(Object,Object);
extern Object send_icp_deregister_corresponding_icp_object(Object,Object);
extern Object send_icp_deregister_icp_objects(Object,Object,Object);
extern Object send_icp_deregister_original_icp_object(Object,Object);
extern Object send_icp_end_message_block(void);
extern Object send_icp_enlarge_corresponding_icp_object_index_space(Object,Object);
extern Object send_icp_i_am_alive(Object);
extern Object send_icp_message_group_id(Object,Object);
extern Object send_icp_no_license(void);
extern Object send_icp_nop(Object);
extern Object send_icp_remote_eval(Object);
extern Object send_initial_icp_version_info(Object,Object);
extern Object send_reclaim_index_space_message_p(Object,Object,Object);
extern Object set_remote_icp_protocol_version_from_major_and_minor_version(Object);
extern Object simple_eval(Object);
extern Object start_writing_icp_message(Object);
extern Object stringw(Object);
extern Object sxhashw(Object);
extern Object symbol_name_text_string(Object);
extern Object text_string_p(Object);
extern Object twrite_general_string(Object);
extern Object twrite_wide_character(Object);
extern Object update_icp_bytes_per_second_if_possible(Object,Object);
extern Object update_icp_connection_clogged_p(Object,Object);
extern Object warn_disallowed_icp_listener_connections(int,...);
extern Object wide_string_length_in_icp_bytes(Object);
extern Object wide_string_to_gensym_string(Object);
extern Object write_acknowledge_icp_version_info(void);
extern Object write_icp_byte(Object);
extern Object write_icp_character(Object);
extern Object write_icp_corresponding_icp_object_index_list(Object);
extern Object write_icp_corresponding_object_index(Object);
extern Object write_icp_deregister_corresponding_icp_object_index_space_name(Object);
extern Object write_icp_deregister_icp_objects_operation(Object);
extern Object write_icp_double_float_using_function(Object);
extern Object write_icp_fill_bytes(Object);
extern Object write_icp_fixnum(Object);
extern Object write_icp_float(Object);
extern Object write_icp_gensym_string(Object);
extern Object write_icp_integer(Object);
extern Object write_icp_managed_double_float(Object);
extern Object write_icp_number_of_icp_bytes_of_fill(Object);
extern Object write_icp_s_expression_for_remote_eval(Object);
extern Object write_icp_sexp_element(Object);
extern Object write_icp_symbol_as_value_type(Object);
extern Object write_icp_text_string(Object);
extern Object write_icp_unsigned_integer(Object);
extern Object write_icp_unsigned_integer_or_nil(Object);
extern Object write_icp_version_info_element(Object,Object,Object,Object);
extern Object write_icp_wide_string(Object);
extern Object write_initial_icp_version_info(void);

#else

extern Object acknowledge_icp_version_info_length_in_icp_bytes();
extern Object add_icp_message_handler();
extern Object allocate_byte_vector_16();
extern Object assq_function();
extern Object byte_allotment_for_icp_output_port();
extern Object bytes_per_double_float_simple_array();
extern Object c_native_clock_ticks_or_cache();
extern Object c_set_connection_pathname();
extern Object cancel_and_reclaim_scheduled_queue_element_1();
extern Object clear_items_registered_with_handle_on_port();
extern Object compute_local_icp_version_info();
extern Object copy_gensym_string();
extern Object copy_out_current_wide_string();
extern Object copy_text_string();
extern Object deassign_index_in_index_space();
extern Object delete_skip_list_entry();
extern Object deregister_corresponding_icp_object();
extern Object describe_icp_connection();
extern Object disallow_new_icp_listener_connection();
extern Object do_i_am_alive_processing();
extern Object dump_icp_buffer();
extern Object emit_icp_read_trace();
extern Object emit_icp_write_trace();
extern Object end_icp_message_group();
extern Object enlarge_index_space();
extern Object enqueue_reclaim_index_space_message();
extern Object ensure_remote_icp_version_info();
extern Object extend_current_gensym_string();
extern Object finalize_icp_version_info();
extern Object fixnum_length_in_icp_bytes();
extern Object flush_and_shutdown_icp_socket();
extern Object frame_serial_number_to_item_table();
extern Object future_task_schedule_2();
extern Object generate_float_vector();
extern Object gensym_string_length_in_icp_bytes();
extern Object gensym_string_to_wide_string();
extern Object get_current_icp_contact_port_number_or_name_if_any();
extern Object get_icp_version_info_value();
extern Object get_local_host_name();
extern Object get_local_icp_version_info_value();
extern Object get_remote_g2_time_at_start();
extern Object get_remote_home_name();
extern Object get_remote_host_name();
extern Object get_remote_icp_version_info_value();
extern Object get_remote_listener_port();
extern Object get_unix_host_name();
extern Object getfq_function_no_default();
extern Object handle_acknowledge_deregister_corresponding_icp_object();
extern Object handle_delete_corresponding_icp_object();
extern Object handle_icp_acknowledge_deregister_corresponding_icp_object();
extern Object handle_icp_acknowledge_deregister_corresponding_icp_object__body();
extern Object handle_icp_connection_denied();
extern Object handle_icp_connection_denied__body();
extern Object handle_icp_connection_shutdown_imminent();
extern Object handle_icp_connection_shutdown_imminent__body();
extern Object handle_icp_define_dummy_object();
extern Object handle_icp_define_dummy_object__body();
extern Object handle_icp_delete_icp_object_for_process();
extern Object handle_icp_delete_icp_object_for_process__body();
extern Object handle_icp_deregister_corresponding_icp_object();
extern Object handle_icp_deregister_corresponding_icp_object__body();
extern Object handle_icp_deregister_icp_objects();
extern Object handle_icp_deregister_icp_objects__body();
extern Object handle_icp_deregister_original_icp_object();
extern Object handle_icp_deregister_original_icp_object__body();
extern Object handle_icp_end_message_block();
extern Object handle_icp_end_message_block__body();
extern Object handle_icp_enlarge_corresponding_icp_object_index_space();
extern Object handle_icp_enlarge_corresponding_icp_object_index_space__body();
extern Object handle_icp_i_am_alive();
extern Object handle_icp_i_am_alive__body();
extern Object handle_icp_message_group_id();
extern Object handle_icp_message_group_id__body();
extern Object handle_icp_no_license();
extern Object handle_icp_no_license__body();
extern Object handle_icp_nop();
extern Object handle_icp_nop__body();
extern Object handle_icp_remote_eval();
extern Object handle_icp_remote_eval__body();
extern Object handle_unclogged_connection_if_necessary();
extern Object handler_for_enlarge_corresponding_icp_object_index_space();
extern Object icp_case_2_error();
extern Object icp_connection_being_shutdown_qm();
extern Object icp_connection_open_p();
extern Object icp_cons_1();
extern Object icp_error_internal();
extern Object icp_object_type_given_icp_object();
extern Object icp_version_info_element_length_in_icp_bytes();
extern Object icp_version_info_element_length_in_icp_bytes_1();
extern Object icp_version_info_element_value();
extern Object initial_icp_version_info_length_in_icp_bytes();
extern Object initialize_i_am_alive_info();
extern Object instantaneous_icp_reader_byte_count();
extern Object instantaneous_icp_writer_byte_count();
extern Object intern_gensym_string();
extern Object intern_text_string();
extern Object item_index_space();
extern Object items_registered_with_handle_on_port();
extern Object local_icp_version_info();
extern Object make_corresponding_icp_symbol();
extern Object make_i_am_alive_info_1();
extern Object make_permanent_schedule_task_structure_internal();
extern Object maybe_set_connection_name();
extern Object maybe_update_remote_icp_version_info();
extern Object maybe_update_remote_icp_version_info_for_version();
extern Object memq_function();
extern Object min_of_local_and_remote_icp_version_info_value();
extern Object mutate_global_property();
extern Object name_for_local_home();
extern Object no_license_for_new_icp_listener_connection();
extern Object note_item_deleted_from_frame_serial_number_table();
extern Object note_no_object_in_deregister_corresponding_icp_object();
extern Object notify_user();
extern Object notify_user_at_console();
extern Object number_of_outstanding_message_groups();
extern Object read_acknowledge_icp_version_info();
extern Object read_icp_byte();
extern Object read_icp_character();
extern Object read_icp_corresponding_icp_object_index_list();
extern Object read_icp_corresponding_object_index();
extern Object read_icp_deregister_corresponding_icp_object_index_space_name();
extern Object read_icp_deregister_icp_objects_operation();
extern Object read_icp_double_float_using_function();
extern Object read_icp_fill_bytes();
extern Object read_icp_fixnum();
extern Object read_icp_float();
extern Object read_icp_gensym_string();
extern Object read_icp_integer();
extern Object read_icp_managed_double_float();
extern Object read_icp_number_of_icp_bytes_of_fill();
extern Object read_icp_s_expression_for_remote_eval();
extern Object read_icp_sexp_element();
extern Object read_icp_symbol_as_value_type();
extern Object read_icp_text_string();
extern Object read_icp_unsigned_integer();
extern Object read_icp_unsigned_integer_or_nil();
extern Object read_icp_version_info_element();
extern Object read_icp_version_info_skip();
extern Object read_icp_wide_string();
extern Object read_initial_icp_version_info();
extern Object receive_initial_message();
extern Object reclaim_gensym_list_1();
extern Object reclaim_gensym_string();
extern Object reclaim_icp_cons_1();
extern Object reclaim_icp_list_1();
extern Object reclaim_icp_port_entry_for_registered_item();
extern Object reclaim_icp_version_info();
extern Object reclaim_icp_version_info_element();
extern Object reclaim_managed_simple_float_array_of_length_1();
extern Object reclaim_s_expression_for_remote_eval();
extern Object reclaim_schedule_task_args();
extern Object reclaim_text_or_gensym_string();
extern Object reclaim_text_string();
extern Object reconstruct_g2_time_at_start();
extern Object reconstruct_managed_float();
extern Object record_system_variable();
extern Object remote_icp_build_identification_string_qm();
extern Object remote_icp_major_version();
extern Object remote_icp_minor_version();
extern Object remote_icp_protocol_version();
extern Object remote_icp_revision_number();
extern Object remove_icp_port_entries_from_icp_object_1();
extern Object resumable_icp_pop();
extern Object resumable_icp_pop_list_if_end_marker();
extern Object resumable_icp_push();
extern Object schedule_send_i_am_alive_message();
extern Object send_i_am_alive_if_necessary();
extern Object send_i_am_alive_message();
extern Object send_icp_acknowledge_deregister_corresponding_icp_object();
extern Object send_icp_connection_denied();
extern Object send_icp_connection_shutdown_imminent();
extern Object send_icp_define_dummy_object();
extern Object send_icp_delete_icp_object_for_process();
extern Object send_icp_deregister_corresponding_icp_object();
extern Object send_icp_deregister_icp_objects();
extern Object send_icp_deregister_original_icp_object();
extern Object send_icp_end_message_block();
extern Object send_icp_enlarge_corresponding_icp_object_index_space();
extern Object send_icp_i_am_alive();
extern Object send_icp_message_group_id();
extern Object send_icp_no_license();
extern Object send_icp_nop();
extern Object send_icp_remote_eval();
extern Object send_initial_icp_version_info();
extern Object send_reclaim_index_space_message_p();
extern Object set_remote_icp_protocol_version_from_major_and_minor_version();
extern Object simple_eval();
extern Object start_writing_icp_message();
extern Object stringw();
extern Object sxhashw();
extern Object symbol_name_text_string();
extern Object text_string_p();
extern Object twrite_general_string();
extern Object twrite_wide_character();
extern Object update_icp_bytes_per_second_if_possible();
extern Object update_icp_connection_clogged_p();
extern Object warn_disallowed_icp_listener_connections();
extern Object wide_string_length_in_icp_bytes();
extern Object wide_string_to_gensym_string();
extern Object write_acknowledge_icp_version_info();
extern Object write_icp_byte();
extern Object write_icp_character();
extern Object write_icp_corresponding_icp_object_index_list();
extern Object write_icp_corresponding_object_index();
extern Object write_icp_deregister_corresponding_icp_object_index_space_name();
extern Object write_icp_deregister_icp_objects_operation();
extern Object write_icp_double_float_using_function();
extern Object write_icp_fill_bytes();
extern Object write_icp_fixnum();
extern Object write_icp_float();
extern Object write_icp_gensym_string();
extern Object write_icp_integer();
extern Object write_icp_managed_double_float();
extern Object write_icp_number_of_icp_bytes_of_fill();
extern Object write_icp_s_expression_for_remote_eval();
extern Object write_icp_sexp_element();
extern Object write_icp_symbol_as_value_type();
extern Object write_icp_text_string();
extern Object write_icp_unsigned_integer();
extern Object write_icp_unsigned_integer_or_nil();
extern Object write_icp_version_info_element();
extern Object write_icp_wide_string();
extern Object write_initial_icp_version_info();

#endif

/* Externally callable routines */

#ifdef USE_PROTOTYPES

extern double read_icp_double_float_1(void);
extern Object write_icp_double_float_1(double);

#else

extern double read_icp_double_float_1();
extern Object write_icp_double_float_1();

#endif

/* variables/constants */
DECLARE_VARIABLE_WITH_SYMBOL(Abort_for_icp_catcher_qm, Qabort_for_icp_catcher_qm);
DECLARE_VARIABLE_WITH_SYMBOL(Active_icp_sockets, Qactive_icp_sockets);
DECLARE_VARIABLE_WITH_SYMBOL(At_end_of_icp_message_block_qm, Qat_end_of_icp_message_block_qm);
extern Object Available_float_array_conses_tail_vector;
extern Object Available_float_array_conses_vector;
extern Object Available_icp_conses_tail_vector;
extern Object Available_icp_conses_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Backtrace_stack_for_internal_error, Qbacktrace_stack_for_internal_error);
extern Object Build_identification_string;
DECLARE_VARIABLE_WITH_SYMBOL(Cached_local_icp_version_info, Qcached_local_icp_version_info);
extern Object Chain_of_available_schedule_tasks_vector;
DECLARE_VARIABLE_WITH_SYMBOL(Created_simple_float_array_pool_arrays, Qcreated_simple_float_array_pool_arrays);
DECLARE_VARIABLE_WITH_SYMBOL(Current_gensym_string, Qcurrent_gensym_string);
DECLARE_VARIABLE_WITH_SYMBOL(Current_icp_buffer, Qcurrent_icp_buffer);
DECLARE_VARIABLE_WITH_SYMBOL(Current_icp_port, Qcurrent_icp_port);
DECLARE_VARIABLE_WITH_SYMBOL(Current_icp_read_trace_level, Qcurrent_icp_read_trace_level);
DECLARE_VARIABLE_WITH_SYMBOL(Current_icp_socket, Qcurrent_icp_socket);
DECLARE_VARIABLE_WITH_SYMBOL(Current_icp_write_trace_level, Qcurrent_icp_write_trace_level);
DECLARE_VARIABLE_WITH_SYMBOL(Current_real_time, Qcurrent_real_time);
DECLARE_VARIABLE_WITH_SYMBOL(Current_schedule_task, Qcurrent_schedule_task);
DECLARE_VARIABLE_WITH_SYMBOL(Current_standard_icp_object_index_space, Qcurrent_standard_icp_object_index_space);
DECLARE_VARIABLE_WITH_SYMBOL(Current_system_name, Qcurrent_system_name);
DECLARE_VARIABLE_WITH_SYMBOL(Current_temporary_icp_object_index_space, Qcurrent_temporary_icp_object_index_space);
DECLARE_VARIABLE_WITH_SYMBOL(Current_thread_index, Qcurrent_thread_index);
DECLARE_VARIABLE_WITH_SYMBOL(Current_twriting_output_type, Qcurrent_twriting_output_type);
DECLARE_VARIABLE_WITH_SYMBOL(Current_wide_string, Qcurrent_wide_string);
DECLARE_VARIABLE_WITH_SYMBOL(Current_wide_string_list, Qcurrent_wide_string_list);
DECLARE_VARIABLE_WITH_SYMBOL(Current_write_icp_byte_position, Qcurrent_write_icp_byte_position);
DECLARE_VARIABLE_WITH_SYMBOL(Deadman_switch_time_interval, Qdeadman_switch_time_interval);
DECLARE_VARIABLE_WITH_SYMBOL(Deregister_and_register_item_p, Qderegister_and_register_item_p);
DECLARE_VARIABLE_WITH_SYMBOL(Deregister_but_do_not_remove_from_table_p, Qderegister_but_do_not_remove_from_table_p);
DECLARE_VARIABLE_WITH_SYMBOL(Disable_resumability, Qdisable_resumability);
DECLARE_VARIABLE_WITH_SYMBOL(Fill_pointer_for_current_gensym_string, Qfill_pointer_for_current_gensym_string);
DECLARE_VARIABLE_WITH_SYMBOL(Fill_pointer_for_current_wide_string, Qfill_pointer_for_current_wide_string);
extern Object Fixnum_time_units_per_second;
DECLARE_VARIABLE_WITH_SYMBOL(G2_machine_type, Qg2_machine_type);
DECLARE_VARIABLE_WITH_SYMBOL(G2_operating_system, Qg2_operating_system);
DECLARE_VARIABLE_WITH_SYMBOL(G2_time_at_start, Qg2_time_at_start);
DECLARE_VARIABLE_WITH_SYMBOL(G2_time_at_start_as_text_string, Qg2_time_at_start_as_text_string);
DECLARE_VARIABLE_WITH_SYMBOL(Gsi_application_name, Qgsi_application_name);
DECLARE_VARIABLE_WITH_SYMBOL(Handling_solitary_i_am_alive_qm, Qhandling_solitary_i_am_alive_qm);
DECLARE_VARIABLE_WITH_SYMBOL(I_am_alive_send_time_interval, Qi_am_alive_send_time_interval);
DECLARE_VARIABLE_WITH_SYMBOL(I_am_alive_send_time_interval_in_seconds, Qi_am_alive_send_time_interval_in_seconds);
DECLARE_VARIABLE_WITH_SYMBOL(I_am_alive_send_time_interval_in_seconds_as_float, Qi_am_alive_send_time_interval_in_seconds_as_float);
extern Object Icp_acknowledge_version_info_alist;
DECLARE_VARIABLE_WITH_SYMBOL(Icp_buffer_of_start_of_message_series_qm, Qicp_buffer_of_start_of_message_series_qm);
DECLARE_VARIABLE_WITH_SYMBOL(Icp_buffers_for_message_group, Qicp_buffers_for_message_group);
DECLARE_VARIABLE_WITH_SYMBOL(Icp_byte_position_of_start_of_message_series_qm, Qicp_byte_position_of_start_of_message_series_qm);
DECLARE_VARIABLE_WITH_SYMBOL(Icp_message_handler_array, Qicp_message_handler_array);
extern Object Icp_message_out_of_synch_case_2_warning;
DECLARE_VARIABLE_WITH_SYMBOL(Icp_port_for_reclaim, Qicp_port_for_reclaim);
DECLARE_VARIABLE_WITH_SYMBOL(Icp_protocol_version, Qicp_protocol_version);
DECLARE_VARIABLE_WITH_SYMBOL(Icp_read_trace_cutoff_level_qm, Qicp_read_trace_cutoff_level_qm);
DECLARE_VARIABLE_WITH_SYMBOL(Icp_suspend, Qicp_suspend);
extern Object Icp_version_info_alist;
DECLARE_VARIABLE_WITH_SYMBOL(Icp_write_trace_cutoff_level_qm, Qicp_write_trace_cutoff_level_qm);
DECLARE_VARIABLE_WITH_SYMBOL(Index_of_top_of_backtrace_stack, Qindex_of_top_of_backtrace_stack);
DECLARE_VARIABLE_WITH_SYMBOL(Inhibit_corresponding_icp_object_making, Qinhibit_corresponding_icp_object_making);
DECLARE_VARIABLE_WITH_SYMBOL(Initial_icp_version_info_enabled_p, Qinitial_icp_version_info_enabled_p);
extern Object Latest_icp_window_protocol_version;
DECLARE_VARIABLE_WITH_SYMBOL(Local_host_name, Qlocal_host_name);
#define Major_version_number_of_current_gensym_product_line FIX((SI_Long)12L)
extern Object Maximum_index_in_backtrace_stack_for_internal_error;
#define Minor_version_number_of_current_gensym_product_line FIX((SI_Long)0L)
extern Object Most_positive_fixnum32_plus_one_as_float;
DECLARE_VARIABLE_WITH_SYMBOL(Name_for_local_home, Qname_for_local_home);
extern Object Newest_icp_version;
DECLARE_VARIABLE_WITH_SYMBOL(Number_of_icp_bytes_for_message_series, Qnumber_of_icp_bytes_for_message_series);
DECLARE_VARIABLE_WITH_SYMBOL(Number_of_icp_bytes_in_message_group, Qnumber_of_icp_bytes_in_message_group);
DECLARE_VARIABLE_WITH_SYMBOL(Number_of_icp_bytes_to_fill_buffer, Qnumber_of_icp_bytes_to_fill_buffer);
DECLARE_VARIABLE_WITH_SYMBOL(Partition_float_union, Qpartition_float_union);
DECLARE_VARIABLE_WITH_SYMBOL(Profiling_enabled_qm, Qprofiling_enabled_qm);
DECLARE_VARIABLE_WITH_SYMBOL(Refused_icp_listener_connections, Qrefused_icp_listener_connections);
DECLARE_VARIABLE_WITH_SYMBOL(Resumable_icp_state, Qresumable_icp_state);
#define Revision_number_of_current_gensym_product_line FIX((SI_Long)9L)
DECLARE_VARIABLE_WITH_SYMBOL(Send_logbook_messages_to_console_p, Qsend_logbook_messages_to_console_p);
DECLARE_VARIABLE_WITH_SYMBOL(Sending_i_am_alive_qm, Qsending_i_am_alive_qm);
extern Object Sexp_element_character_type_tag;
extern Object Sexp_element_float_type_tag;
extern Object Sexp_element_integer_type_tag;
extern Object Sexp_element_list_type_tag;
extern Object Sexp_element_symbol_type_tag;
extern Object Sexp_element_text_type_tag;
extern Object Sexp_null_type_tag;
DECLARE_VARIABLE_WITH_SYMBOL(Shutdown_interval_for_disallowed_icp_connection_in_seconds, Qshutdown_interval_for_disallowed_icp_connection_in_seconds);
DECLARE_VARIABLE_WITH_SYMBOL(Simple_float_array_pool_memory_usage, Qsimple_float_array_pool_memory_usage);
#define Size_of_basic_backtrace_information FIX((SI_Long)3L)
DECLARE_VARIABLE_WITH_SYMBOL(Structure_being_reclaimed, Qstructure_being_reclaimed);
DECLARE_VARIABLE_WITH_SYMBOL(Supports_dialog_component_with_font, Qsupports_dialog_component_with_font);
DECLARE_VARIABLE_WITH_SYMBOL(Supports_font_in_grid_view, Qsupports_font_in_grid_view);
DECLARE_VARIABLE_WITH_SYMBOL(Supports_transparent_color_index, Qsupports_transparent_color_index);
DECLARE_VARIABLE_WITH_SYMBOL(Tcp_listener_port_number, Qtcp_listener_port_number);
DECLARE_VARIABLE_WITH_SYMBOL(Total_length_of_current_gensym_string, Qtotal_length_of_current_gensym_string);
DECLARE_VARIABLE_WITH_SYMBOL(Total_length_of_current_wide_string, Qtotal_length_of_current_wide_string);
DECLARE_VARIABLE_WITH_SYMBOL(Trace_skip_data_service_i_am_alive_messages_p, Qtrace_skip_data_service_i_am_alive_messages_p);
DECLARE_VARIABLE_WITH_SYMBOL(Vector_of_simple_float_array_pools, Qvector_of_simple_float_array_pools);
DECLARE_VARIABLE_WITH_SYMBOL(Write_initial_icp_version_info_p, Qwrite_initial_icp_version_info_p);
DECLARE_VARIABLE_WITH_SYMBOL(Writing_icp_message_group, Qwriting_icp_message_group);
