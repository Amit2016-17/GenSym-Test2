// Created by Microsoft (R) C/C++ Compiler Version 12.00.9782.0 (1cab833a).
//
// G2Com.tlh
//
// C++ source equivalent of Win32 type library ../../Release/G2Com.dll
// compiler-generated file created 11/17/08 at 15:15:40 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

//
// Forward references and typedefs
//

struct __declspec(uuid("f15b9434-b166-11d1-a718-006008c5f933"))
/* dispinterface */ _G2Events;
struct /* coclass */ G2Item;
struct __declspec(uuid("d8b90dc4-74bb-4775-983c-02137e2e283b"))
/* dual interface */ IG2Item4;
struct __declspec(uuid("159b27b6-6bb3-4317-a5e5-fd55001d3e9f"))
/* dual interface */ IG2Item3;
struct __declspec(uuid("0e22a2cd-4e8c-4f5d-be79-39d6ccc804f3"))
/* dual interface */ IG2Item2;
struct __declspec(uuid("d4a49e08-2ada-49d2-bbcb-7fdd7ebb6d86"))
/* dual interface */ IG2Item;
struct __declspec(uuid("fceb8041-ef78-4be6-adc8-51c173f65484"))
/* dual interface */ G2ComObject;
typedef enum __MIDL___MIDL_itf_G2Com_0000_0001 G2Type;
struct __declspec(uuid("3862dc96-af87-48c9-9c14-0f2d5a4b7250"))
/* dual interface */ IG2ItemRef;
struct __declspec(uuid("064bea68-090c-47fe-8d43-1bf88f5bc47d"))
/* dual interface */ IG2Gateway4;
struct __declspec(uuid("43dd340a-7247-416a-9db0-64b15cd4bd28"))
/* dual interface */ IG2Gateway3;
struct __declspec(uuid("c18d503e-c8a5-45c6-a42f-100f4347b367"))
/* dual interface */ IG2Gateway2;
struct __declspec(uuid("a71acd10-3b6e-11d1-8ab3-00609703e60f"))
/* dual interface */ IG2Gateway;
typedef enum __MIDL___MIDL_itf_G2Com_0000_0002 G2RunStateType;
struct /* coclass */ G2Workspace;
struct __declspec(uuid("986f5307-690c-4ef3-9173-7a2ae4014590"))
/* dual interface */ IG2Workspace;
struct /* coclass */ G2Window;
struct __declspec(uuid("2488bb94-3222-4d5d-8257-8dd9600561f5"))
/* dual interface */ IG2Window;
struct /* coclass */ G2Gateway;
struct /* coclass */ GatewayProp;
struct /* coclass */ G2StructureEntry;
struct __declspec(uuid("c4e20f9c-7ecc-4ee8-8fef-6ab6d3d80943"))
/* dual interface */ IG2StructureEntry;
struct /* coclass */ G2Structure;
struct __declspec(uuid("a59a1dfb-3711-4893-b3f4-d9fd0b824c23"))
/* dual interface */ IG2Structure;
struct /* coclass */ G2Attribute;
struct __declspec(uuid("45bb4fd7-576b-4672-923e-15e7c13d2c76"))
/* dual interface */ IG2Attribute;
struct /* coclass */ G2ListOrArray;
struct __declspec(uuid("4a80a9fd-41df-4b49-8740-13c43e350f29"))
/* dual interface */ IG2ListOrArray;
struct /* coclass */ G2Symbol;
struct __declspec(uuid("b2e73bd0-b965-4456-b9d0-8d11ea69d476"))
/* dual interface */ IG2Symbol;
struct /* coclass */ G2LAElement;
struct __declspec(uuid("98a966ca-2d0b-4952-bd49-25b3bbee91f6"))
/* dual interface */ IG2LAElement;
struct /* coclass */ G2ItemRef;
struct /* coclass */ G2ComConfigurator;
struct __declspec(uuid("56e2306b-4f30-4249-94b0-b3b9647dbc3a"))
/* dual interface */ IG2ComConfigurator;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(_G2Events, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(G2ComObject, __uuidof(G2ComObject));
_COM_SMARTPTR_TYPEDEF(IG2Item, __uuidof(IG2Item));
_COM_SMARTPTR_TYPEDEF(IG2Item2, __uuidof(IG2Item2));
_COM_SMARTPTR_TYPEDEF(IG2Item3, __uuidof(IG2Item3));
_COM_SMARTPTR_TYPEDEF(IG2Item4, __uuidof(IG2Item4));
_COM_SMARTPTR_TYPEDEF(IG2ItemRef, __uuidof(IG2ItemRef));
_COM_SMARTPTR_TYPEDEF(IG2Gateway, __uuidof(IG2Gateway));
_COM_SMARTPTR_TYPEDEF(IG2Gateway2, __uuidof(IG2Gateway2));
_COM_SMARTPTR_TYPEDEF(IG2Gateway3, __uuidof(IG2Gateway3));
_COM_SMARTPTR_TYPEDEF(IG2Gateway4, __uuidof(IG2Gateway4));
_COM_SMARTPTR_TYPEDEF(IG2Workspace, __uuidof(IG2Workspace));
_COM_SMARTPTR_TYPEDEF(IG2Window, __uuidof(IG2Window));
_COM_SMARTPTR_TYPEDEF(IG2StructureEntry, __uuidof(IG2StructureEntry));
_COM_SMARTPTR_TYPEDEF(IG2Structure, __uuidof(IG2Structure));
_COM_SMARTPTR_TYPEDEF(IG2Attribute, __uuidof(IG2Attribute));
_COM_SMARTPTR_TYPEDEF(IG2ListOrArray, __uuidof(IG2ListOrArray));
_COM_SMARTPTR_TYPEDEF(IG2Symbol, __uuidof(IG2Symbol));
_COM_SMARTPTR_TYPEDEF(IG2LAElement, __uuidof(IG2LAElement));
_COM_SMARTPTR_TYPEDEF(IG2ComConfigurator, __uuidof(IG2ComConfigurator));

//
// Type library items
//

struct __declspec(uuid("f15b9434-b166-11d1-a718-006008c5f933"))
_G2Events : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT G2Paused ( );
    HRESULT G2Resumed ( );
    HRESULT G2Connected ( );
    HRESULT G2Disconnected ( );
    HRESULT RpcCalled (
        _bstr_t ProcedureName,
        VARIANT * InputArguments,
        VARIANT * ReturnArguments );
    HRESULT RpcStarted (
        _bstr_t ProcedureName,
        VARIANT * InputArguments );
    HRESULT RpcReturned (
        _bstr_t ProcedureName,
        VARIANT * ReturnArguments,
        VARIANT * DeferredCallIdentifier );
    HRESULT Error (
        _bstr_t ErrorMessage,
        long ErrorCode,
        VARIANT * DeferredCallIdentifier );
    HRESULT GotMessage (
        _bstr_t Message );
    HRESULT G2Reset ( );
    HRESULT G2Started ( );
    HRESULT G2RunStateKnown ( );
    HRESULT ItemDeleted (
        struct IG2Item4 * * localItem,
        long subscriptionHndl,
        const _variant_t & userData );
    HRESULT AttributeModified (
        struct IG2Item4 * * localItem,
        _bstr_t attributeName,
        const _variant_t & newValue,
        long subscriptionHndl,
        const _variant_t & userData );
    HRESULT IconColorChanged (
        struct IG2Item4 * * localItem,
        long subscriptionHndl,
        IDispatch * chgStruct,
        const _variant_t & userData );
    HRESULT CustomEvent (
        struct IG2Item4 * * localItem,
        _bstr_t EventName,
        const _variant_t & newValue,
        long subscriptionHndl,
        const _variant_t & userData );
    HRESULT ItemAdded (
        struct IG2Workspace * * localItem,
        long subscriptionHndl,
        const _variant_t & userData );
    HRESULT ItemRemoved (
        struct IG2Workspace * * localItem,
        long subscriptionHndl,
        const _variant_t & userData );
    HRESULT ValueChanged (
        struct IG2Item4 * * localItem,
        const _variant_t & newValue,
        long subscriptionHndl,
        const _variant_t & userData );
    HRESULT ItemSelected (
        struct IG2Window * * localWindow,
        long subscriptionHandle,
        const _variant_t & userData );
};

struct __declspec(uuid("65da1f96-da11-47fe-b3ef-1ce21cdb0ed0"))
G2Item;
    // [ default ] interface IG2Item4
    // interface IG2Item3
    // interface IG2Item2
    // interface IG2Item

struct __declspec(uuid("fceb8041-ef78-4be6-adc8-51c173f65484"))
G2ComObject : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetWhatAmI))
    _bstr_t WhatAmI;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetWhatAmI ( );
    IUnknownPtr Duplicate ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_WhatAmI (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall raw_Duplicate (
        IUnknown * * pNewObj ) = 0;
};

struct __declspec(uuid("d4a49e08-2ada-49d2-bbcb-7fdd7ebb6d86"))
IG2Item : G2ComObject
{
    //
    // Property data
    //

    __declspec(property(get=GetItem,put=PutItem))
    _variant_t Item[];
    __declspec(property(get=GetClassName,put=PutClassName))
    _bstr_t ClassName;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetType,put=PutType))
    G2Type Type;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetAttrNames))
    SAFEARRAY * AttrNames;
    __declspec(property(get=GetAttrValues))
    SAFEARRAY * AttrValues;
    __declspec(property(get=GetAttrTypes))
    SAFEARRAY * AttrTypes;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetItem (
        const _variant_t & Idx );
    void PutItem (
        const _variant_t & Idx,
        const _variant_t & pItem );
    _bstr_t GetClassName ( );
    void PutClassName (
        _bstr_t pClassName );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t pItemName );
    G2Type GetType ( );
    void PutType (
        G2Type pGsiType );
    _variant_t GetValue ( );
    void PutValue (
        const _variant_t & pGsiType );
    long GetCount ( );
    HRESULT Add (
        _bstr_t atName,
        const _variant_t & atVal );
    HRESULT Remove (
        const _variant_t & varIdx );
    IUnknownPtr Get_NewEnum ( );
    SAFEARRAY * GetAttrNames ( );
    SAFEARRAY * GetAttrValues ( );
    SAFEARRAY * GetAttrTypes ( );
    HRESULT Symbolize (
        const _variant_t & Idx,
        VARIANT_BOOL flgSym );
    HRESULT Init (
        long pItem );
    HRESULT Git (
        long * pGsiItem );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Item (
        VARIANT Idx,
        VARIANT * pItem ) = 0;
    virtual HRESULT __stdcall put_Item (
        VARIANT Idx,
        VARIANT pItem ) = 0;
    virtual HRESULT __stdcall get_ClassName (
        BSTR * pClassName ) = 0;
    virtual HRESULT __stdcall put_ClassName (
        BSTR pClassName ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * pItemName ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR pItemName ) = 0;
    virtual HRESULT __stdcall get_Type (
        G2Type * pGsiType ) = 0;
    virtual HRESULT __stdcall put_Type (
        G2Type pGsiType ) = 0;
    virtual HRESULT __stdcall get_Value (
        VARIANT * pGsiType ) = 0;
    virtual HRESULT __stdcall put_Value (
        VARIANT pGsiType ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pVal ) = 0;
    virtual HRESULT __stdcall raw_Add (
        BSTR atName,
        VARIANT atVal ) = 0;
    virtual HRESULT __stdcall raw_Remove (
        VARIANT varIdx ) = 0;
    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * pVal ) = 0;
    virtual HRESULT __stdcall get_AttrNames (
        SAFEARRAY * * attrNameList ) = 0;
    virtual HRESULT __stdcall get_AttrValues (
        SAFEARRAY * * attrValList ) = 0;
    virtual HRESULT __stdcall get_AttrTypes (
        SAFEARRAY * * attrTypeList ) = 0;
    virtual HRESULT __stdcall raw_Symbolize (
        VARIANT Idx,
        VARIANT_BOOL flgSym ) = 0;
    virtual HRESULT __stdcall raw_Init (
        long pItem ) = 0;
    virtual HRESULT __stdcall raw_Git (
        long * pGsiItem ) = 0;
};

struct __declspec(uuid("0e22a2cd-4e8c-4f5d-be79-39d6ccc804f3"))
IG2Item2 : IG2Item
{
    //
    // Property data
    //

    __declspec(property(get=GetLinked))
    VARIANT_BOOL Linked;
    __declspec(property(get=GetAttrType))
    G2Type AttrType[];
    __declspec(property(get=GetReference))
    IG2ItemRefPtr Reference;

    //
    // Wrapper methods for error-handling
    //

    HRESULT Inix (
        long pItem,
        struct IG2ItemRef * pRef );
    HRESULT Refresh ( );
    HRESULT Update ( );
    HRESULT Create (
        IDispatch * pAxL );
    HRESULT Delete ( );
    VARIANT_BOOL GetLinked ( );
    HRESULT Link (
        struct IG2ItemRef * pItemRef );
    HRESULT Unlink ( );
    HRESULT Unhandle ( );
    G2Type GetAttrType (
        const _variant_t & Idx );
    IG2ItemRefPtr GetReference ( );
    _variant_t SubscribeToAttributeModification (
        const _variant_t & AttrName,
        const _variant_t & userData );
    _variant_t SubscribeToDeletion (
        const _variant_t & userData );
    _variant_t SubscribeToIconColorChange (
        const _variant_t & userData );
    _variant_t SubscribeToCustomEvent (
        _bstr_t EventName,
        const _variant_t & userData );
    _variant_t SubscribeToValueChange (
        const _variant_t & userData );
    HRESULT UnsubscribeFromAttributeModification (
        const _variant_t & FromWhat );
    HRESULT UnsubscribeFromDeletion ( );
    HRESULT UnsubscribeFromIconColorChange ( );
    HRESULT UnsubscribeFromCustomEvent (
        const _variant_t & EventNames );
    HRESULT UnsubscribeFromAll ( );
    HRESULT UnsubscribeFromValueChange ( );
    _variant_t Subscriptions ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Inix (
        long pItem,
        struct IG2ItemRef * pRef ) = 0;
    virtual HRESULT __stdcall raw_Refresh ( ) = 0;
    virtual HRESULT __stdcall raw_Update ( ) = 0;
    virtual HRESULT __stdcall raw_Create (
        IDispatch * pAxL ) = 0;
    virtual HRESULT __stdcall raw_Delete ( ) = 0;
    virtual HRESULT __stdcall get_Linked (
        VARIANT_BOOL * pflgLinked ) = 0;
    virtual HRESULT __stdcall raw_Link (
        struct IG2ItemRef * pItemRef ) = 0;
    virtual HRESULT __stdcall raw_Unlink ( ) = 0;
    virtual HRESULT __stdcall raw_Unhandle ( ) = 0;
    virtual HRESULT __stdcall get_AttrType (
        VARIANT Idx,
        G2Type * pVal ) = 0;
    virtual HRESULT __stdcall get_Reference (
        struct IG2ItemRef * * pVal ) = 0;
    virtual HRESULT __stdcall raw_SubscribeToAttributeModification (
        VARIANT AttrName,
        VARIANT userData,
        VARIANT * SubscripHndls ) = 0;
    virtual HRESULT __stdcall raw_SubscribeToDeletion (
        VARIANT userData,
        VARIANT * SubscripHndl ) = 0;
    virtual HRESULT __stdcall raw_SubscribeToIconColorChange (
        VARIANT userData,
        VARIANT * SubscripHndl ) = 0;
    virtual HRESULT __stdcall raw_SubscribeToCustomEvent (
        BSTR EventName,
        VARIANT userData,
        VARIANT * SubscripHndl ) = 0;
    virtual HRESULT __stdcall raw_SubscribeToValueChange (
        VARIANT userData,
        VARIANT * subscriptionHandle ) = 0;
    virtual HRESULT __stdcall raw_UnsubscribeFromAttributeModification (
        VARIANT FromWhat ) = 0;
    virtual HRESULT __stdcall raw_UnsubscribeFromDeletion ( ) = 0;
    virtual HRESULT __stdcall raw_UnsubscribeFromIconColorChange ( ) = 0;
    virtual HRESULT __stdcall raw_UnsubscribeFromCustomEvent (
        VARIANT EventNames ) = 0;
    virtual HRESULT __stdcall raw_UnsubscribeFromAll ( ) = 0;
    virtual HRESULT __stdcall raw_UnsubscribeFromValueChange ( ) = 0;
    virtual HRESULT __stdcall raw_Subscriptions (
        VARIANT * ArrayOfSubscriptions ) = 0;
};

struct __declspec(uuid("159b27b6-6bb3-4317-a5e5-fd55001d3e9f"))
IG2Item3 : IG2Item2
{
    //
    // Property data
    //

    __declspec(property(get=GetIcon))
    IDispatchPtr Icon[];

    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr GetIcon (
        long BackgroundColor );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Icon (
        long BackgroundColor,
        IDispatch * * pVal ) = 0;
};

struct __declspec(uuid("d8b90dc4-74bb-4775-983c-02137e2e283b"))
IG2Item4 : IG2Item3
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Init2 (
        long pDatum );
    HRESULT Init3 (
        long pDatum,
        struct IG2ItemRef * pRef );
    HRESULT Git2 (
        long * ppDatum );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Init2 (
        long pDatum ) = 0;
    virtual HRESULT __stdcall raw_Init3 (
        long pDatum,
        struct IG2ItemRef * pRef ) = 0;
    virtual HRESULT __stdcall raw_Git2 (
        long * ppDatum ) = 0;
};

enum __MIDL___MIDL_itf_G2Com_0000_0001
{
    g2Null = 0,
    g2Integer = 1,
    g2SymbolType = 3,
    g2String = 4,
    g2Logical = 5,
    g2Float = 6,
    g2IntegerArray = 17,
    g2SymbolArray = 19,
    g2StringArray = 20,
    g2LogicalArray = 21,
    g2FloatArray = 22,
    g2ItemArray = 23,
    g2ValueArray = 24,
    g2ItemOrValueArray = 25,
    g2QuantityArray = 26,
    g2IntegerList = 33,
    g2SymbolList = 35,
    g2StringList = 36,
    g2LogicalList = 37,
    g2FloatList = 38,
    g2ItemList = 39,
    g2ValueList = 40,
    g2ItemOrValueList = 41,
    g2QuantityList = 42,
    g2Sequence = 49,
    g2StructureType = 50
};

struct __declspec(uuid("3862dc96-af87-48c9-9c14-0f2d5a4b7250"))
IG2ItemRef : G2ComObject
{
    //
    // Property data
    //

    __declspec(property(get=GetUUID,put=PutUUID))
    _bstr_t UUID;
    __declspec(property(put=PutGateway))
    IG2Gateway4Ptr Gateway;

    //
    // Wrapper methods for error-handling
    //

    HRESULT Init (
        unsigned short * pUUIDin,
        long pCtx );
    HRESULT Git (
        unsigned short * pUUIDout,
        long * pCtx );
    _bstr_t GetUUID ( );
    void PutUUID (
        _bstr_t pVal );
    void PutGateway (
        struct IG2Gateway4 * _arg1 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Init (
        unsigned short * pUUIDin,
        long pCtx ) = 0;
    virtual HRESULT __stdcall raw_Git (
        unsigned short * pUUIDout,
        long * pCtx ) = 0;
    virtual HRESULT __stdcall get_UUID (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_UUID (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall put_Gateway (
        struct IG2Gateway4 * _arg1 ) = 0;
};

struct __declspec(uuid("a71acd10-3b6e-11d1-8ab3-00609703e60f"))
IG2Gateway : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetIsG2Connected))
    VARIANT_BOOL IsG2Connected;
    __declspec(property(get=GetIsG2Running))
    VARIANT_BOOL IsG2Running;
    __declspec(property(get=GetG2Location,put=PutG2Location))
    _bstr_t G2Location;
    __declspec(property(get=GetInterfaceClass,put=PutInterfaceClass))
    _bstr_t InterfaceClass;
    __declspec(property(get=GetRemoteInitializationString,put=PutRemoteInitializationString))
    _bstr_t RemoteInitializationString;
    __declspec(property(get=GetCallTimeout,put=PutCallTimeout))
    long CallTimeout;

    //
    // Wrapper methods for error-handling
    //

    long Connect (
        VARIANT_BOOL WaitFlag );
    HRESULT Disconnect ( );
    _variant_t Call (
        _bstr_t ProcedureName,
        SAFEARRAY * * InputArguments );
    HRESULT CallDeferred (
        _bstr_t ProcedureName,
        VARIANT * DeferredCallIdentifier,
        SAFEARRAY * * InputArguments );
    HRESULT Start (
        _bstr_t ProcedureName,
        SAFEARRAY * * Arguments );
    IDispatchPtr GetNamedObject (
        _bstr_t ObjectName,
        _bstr_t ObjectClass );
    IDispatchPtr CreateObjectInstance (
        _bstr_t ClassName );
    VARIANT_BOOL GetIsG2Connected ( );
    VARIANT_BOOL GetIsG2Running ( );
    _bstr_t GetG2Location ( );
    void PutG2Location (
        _bstr_t Location );
    _bstr_t GetInterfaceClass ( );
    void PutInterfaceClass (
        _bstr_t InterfaceClassName );
    _bstr_t GetRemoteInitializationString ( );
    void PutRemoteInitializationString (
        _bstr_t InitializationString );
    long GetCallTimeout ( );
    void PutCallTimeout (
        long MaxWait );
    HRESULT _FireEvents ( );
    HRESULT PostMessage (
        VARIANT * Message );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Connect (
        VARIANT_BOOL WaitFlag,
        long * pReVal ) = 0;
    virtual HRESULT __stdcall raw_Disconnect ( ) = 0;
    virtual HRESULT __stdcall raw_Call (
        BSTR ProcedureName,
        SAFEARRAY * * InputArguments,
        VARIANT * ReturnArguments ) = 0;
    virtual HRESULT __stdcall raw_CallDeferred (
        BSTR ProcedureName,
        VARIANT * DeferredCallIdentifier,
        SAFEARRAY * * InputArguments ) = 0;
    virtual HRESULT __stdcall raw_Start (
        BSTR ProcedureName,
        SAFEARRAY * * Arguments ) = 0;
    virtual HRESULT __stdcall raw_GetNamedObject (
        BSTR ObjectName,
        BSTR ObjectClass,
        IDispatch * * Obj ) = 0;
    virtual HRESULT __stdcall raw_CreateObjectInstance (
        BSTR ClassName,
        IDispatch * * Obj ) = 0;
    virtual HRESULT __stdcall get_IsG2Connected (
        VARIANT_BOOL * Val ) = 0;
    virtual HRESULT __stdcall get_IsG2Running (
        VARIANT_BOOL * Val ) = 0;
    virtual HRESULT __stdcall get_G2Location (
        BSTR * Location ) = 0;
    virtual HRESULT __stdcall put_G2Location (
        BSTR Location ) = 0;
    virtual HRESULT __stdcall get_InterfaceClass (
        BSTR * InterfaceClassName ) = 0;
    virtual HRESULT __stdcall put_InterfaceClass (
        BSTR InterfaceClassName ) = 0;
    virtual HRESULT __stdcall get_RemoteInitializationString (
        BSTR * InitializationString ) = 0;
    virtual HRESULT __stdcall put_RemoteInitializationString (
        BSTR InitializationString ) = 0;
    virtual HRESULT __stdcall get_CallTimeout (
        long * MaxWait ) = 0;
    virtual HRESULT __stdcall put_CallTimeout (
        long MaxWait ) = 0;
    virtual HRESULT __stdcall raw__FireEvents ( ) = 0;
    virtual HRESULT __stdcall raw_PostMessage (
        VARIANT * Message ) = 0;
};

struct __declspec(uuid("c18d503e-c8a5-45c6-a42f-100f4347b367"))
IG2Gateway2 : IG2Gateway
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT OnStartPage (
        IUnknown * piUnk );
    HRESULT OnEndPage ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_OnStartPage (
        IUnknown * piUnk ) = 0;
    virtual HRESULT __stdcall raw_OnEndPage ( ) = 0;
};

struct __declspec(uuid("43dd340a-7247-416a-9db0-64b15cd4bd28"))
IG2Gateway3 : IG2Gateway2
{
    //
    // Property data
    //

    __declspec(property(get=GetG2RunState))
    G2RunStateType G2RunState;

    //
    // Wrapper methods for error-handling
    //

    _variant_t MakeG2ComVariable (
        G2Type ComType,
        SAFEARRAY * * inArgs );
    HRESULT DbgMsg (
        _bstr_t msg );
    G2RunStateType GetG2RunState ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_MakeG2ComVariable (
        G2Type ComType,
        SAFEARRAY * * inArgs,
        VARIANT * pResult ) = 0;
    virtual HRESULT __stdcall raw_DbgMsg (
        BSTR msg ) = 0;
    virtual HRESULT __stdcall get_G2RunState (
        G2RunStateType * pVal ) = 0;
};

struct __declspec(uuid("064bea68-090c-47fe-8d43-1bf88f5bc47d"))
IG2Gateway4 : IG2Gateway3
{
    //
    // Property data
    //

    __declspec(property(get=GetTWHandle,put=PutTWHandle))
    long TWHandle;
    __declspec(property(get=GetG2Symbols,put=PutG2Symbols))
    VARIANT_BOOL G2Symbols;
    __declspec(property(get=GetDisconnectOnReset,put=PutDisconnectOnReset))
    VARIANT_BOOL DisconnectOnReset;

    //
    // Wrapper methods for error-handling
    //

    long GetTWHandle ( );
    void PutTWHandle (
        long plHWnd );
    VARIANT_BOOL ObtainTWLockIfUnused ( );
    HRESULT ClearTWLock ( );
    VARIANT_BOOL GetG2Symbols ( );
    void PutG2Symbols (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetDisconnectOnReset ( );
    void PutDisconnectOnReset (
        VARIANT_BOOL pVal );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_TWHandle (
        long * plHWnd ) = 0;
    virtual HRESULT __stdcall put_TWHandle (
        long plHWnd ) = 0;
    virtual HRESULT __stdcall raw_ObtainTWLockIfUnused (
        VARIANT_BOOL * pResult ) = 0;
    virtual HRESULT __stdcall raw_ClearTWLock ( ) = 0;
    virtual HRESULT __stdcall get_G2Symbols (
        VARIANT_BOOL * pVal ) = 0;
    virtual HRESULT __stdcall put_G2Symbols (
        VARIANT_BOOL pVal ) = 0;
    virtual HRESULT __stdcall get_DisconnectOnReset (
        VARIANT_BOOL * pVal ) = 0;
    virtual HRESULT __stdcall put_DisconnectOnReset (
        VARIANT_BOOL pVal ) = 0;
};

enum __MIDL___MIDL_itf_G2Com_0000_0002
{
    g2UnknownState = -1,
    G2Reset = 0,
    G2Paused = 1,
    g2Running = 2
};

struct __declspec(uuid("4f6ff39f-793b-4bc5-8413-657f7ba99f57"))
G2Workspace;
    // [ default ] interface IG2Workspace

struct __declspec(uuid("986f5307-690c-4ef3-9173-7a2ae4014590"))
IG2Workspace : G2ComObject
{
    //
    // Wrapper methods for error-handling
    //

    _variant_t SubscribeToItemAddition (
        const _variant_t & userData );
    _variant_t SubscribeToItemRemoval (
        const _variant_t & userData );
    HRESULT UnsubscribeFromItemAddition ( );
    HRESULT UnsubscribeFromItemRemoval ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_SubscribeToItemAddition (
        VARIANT userData,
        VARIANT * subHdl ) = 0;
    virtual HRESULT __stdcall raw_SubscribeToItemRemoval (
        VARIANT userData,
        VARIANT * subHdl ) = 0;
    virtual HRESULT __stdcall raw_UnsubscribeFromItemAddition ( ) = 0;
    virtual HRESULT __stdcall raw_UnsubscribeFromItemRemoval ( ) = 0;
};

struct __declspec(uuid("4e1a836d-1fea-4e83-8f2f-a21204406222"))
G2Window;
    // [ default ] interface IG2Window

struct __declspec(uuid("2488bb94-3222-4d5d-8257-8dd9600561f5"))
IG2Window : G2ComObject
{
    //
    // Property data
    //

    __declspec(property(get=Getg2UserMode,put=Putg2UserMode))
    _bstr_t g2UserMode;

    //
    // Wrapper methods for error-handling
    //

    _variant_t SubscribeToSelection (
        const _variant_t & userData );
    HRESULT UnsubscribeFromSelection ( );
    _bstr_t Getg2UserMode ( );
    void Putg2UserMode (
        _bstr_t pVal );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_SubscribeToSelection (
        VARIANT userData,
        VARIANT * results ) = 0;
    virtual HRESULT __stdcall raw_UnsubscribeFromSelection ( ) = 0;
    virtual HRESULT __stdcall get_g2UserMode (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_g2UserMode (
        BSTR pVal ) = 0;
};

struct __declspec(uuid("ac4c85d0-b16c-11d1-a718-006008c5f933"))
G2Gateway;
    // [ default ] interface IG2Gateway4
    // interface IG2Gateway3
    // interface IG2Gateway2
    // interface IG2Gateway
    // [ default, source ] dispinterface _G2Events

struct __declspec(uuid("8aef2da3-471a-11d1-8ab5-00609703e60f"))
GatewayProp;
    // [ default ] interface IUnknown

struct __declspec(uuid("15fc7ccc-c179-49ba-a68b-13c20c580dc0"))
G2StructureEntry;
    // [ default ] interface IG2StructureEntry

struct __declspec(uuid("c4e20f9c-7ecc-4ee8-8fef-6ab6d3d80943"))
IG2StructureEntry : G2ComObject
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutName (
        _bstr_t pVal );
    _variant_t GetValue ( );
    void PutValue (
        const _variant_t & pVal );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_Value (
        VARIANT * pVal ) = 0;
    virtual HRESULT __stdcall put_Value (
        VARIANT pVal ) = 0;
};

struct __declspec(uuid("ce90290f-2eae-49ef-8b5a-d5ff6aae8ce0"))
G2Structure;
    // [ default ] interface IG2Structure

struct __declspec(uuid("a59a1dfb-3711-4893-b3f4-d9fd0b824c23"))
IG2Structure : G2ComObject
{
    //
    // Property data
    //

    __declspec(property(get=GetItem,put=PutItem))
    _variant_t Item[];
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetItem (
        const _variant_t & index );
    void PutItem (
        const _variant_t & index,
        const _variant_t & pItem );
    long GetCount ( );
    HRESULT Add (
        SAFEARRAY * * InputArguments );
    HRESULT Remove (
        const _variant_t & index );
    IUnknownPtr Get_NewEnum ( );
    SAFEARRAY * Names ( );
    SAFEARRAY * Values ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Item (
        VARIANT index,
        VARIANT * pItem ) = 0;
    virtual HRESULT __stdcall put_Item (
        VARIANT index,
        VARIANT pItem ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pVal ) = 0;
    virtual HRESULT __stdcall raw_Add (
        SAFEARRAY * * InputArguments ) = 0;
    virtual HRESULT __stdcall raw_Remove (
        VARIANT index ) = 0;
    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * pVal ) = 0;
    virtual HRESULT __stdcall raw_Names (
        SAFEARRAY * * nameList ) = 0;
    virtual HRESULT __stdcall raw_Values (
        SAFEARRAY * * valueList ) = 0;
};

struct __declspec(uuid("738b47fa-2d36-40d2-8dc3-47e97717e64b"))
G2Attribute;
    // [ default ] interface IG2Attribute

struct __declspec(uuid("45bb4fd7-576b-4672-923e-15e7c13d2c76"))
IG2Attribute : G2ComObject
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetType,put=PutType))
    G2Type Type;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutValue (
        const _variant_t & pVal );
    _variant_t GetValue ( );
    G2Type GetType ( );
    void PutType (
        G2Type pType );
    HRESULT Init (
        long pGsiAttr );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * pName ) = 0;
    virtual HRESULT __stdcall put_Value (
        VARIANT pVal ) = 0;
    virtual HRESULT __stdcall get_Value (
        VARIANT * pVal ) = 0;
    virtual HRESULT __stdcall get_Type (
        G2Type * pType ) = 0;
    virtual HRESULT __stdcall put_Type (
        G2Type pType ) = 0;
    virtual HRESULT __stdcall raw_Init (
        long pGsiAttr ) = 0;
};

struct __declspec(uuid("27f911c6-b864-4c85-a7fa-ce151b60f4bf"))
G2ListOrArray;
    // [ default ] interface IG2ListOrArray

struct __declspec(uuid("4a80a9fd-41df-4b49-8740-13c43e350f29"))
IG2ListOrArray : G2ComObject
{
    //
    // Property data
    //

    __declspec(property(get=GetItem,put=PutItem))
    _variant_t Item[];
    __declspec(property(get=GetType,put=PutType))
    G2Type Type;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetItem (
        long Idx );
    void PutItem (
        long Idx,
        const _variant_t & pVal );
    G2Type GetType ( );
    void PutType (
        G2Type pVal );
    long GetCount ( );
    HRESULT Init (
        long pGsiItem );
    HRESULT Insert (
        long Idx,
        const _variant_t & varX );
    HRESULT Append (
        long Idx,
        const _variant_t & varX );
    HRESULT Add (
        const _variant_t & varX );
    HRESULT Remove (
        long Idx );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Item (
        long Idx,
        VARIANT * pVal ) = 0;
    virtual HRESULT __stdcall put_Item (
        long Idx,
        VARIANT pVal ) = 0;
    virtual HRESULT __stdcall get_Type (
        G2Type * pVal ) = 0;
    virtual HRESULT __stdcall put_Type (
        G2Type pVal ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * pVal ) = 0;
    virtual HRESULT __stdcall raw_Init (
        long pGsiItem ) = 0;
    virtual HRESULT __stdcall raw_Insert (
        long Idx,
        VARIANT varX ) = 0;
    virtual HRESULT __stdcall raw_Append (
        long Idx,
        VARIANT varX ) = 0;
    virtual HRESULT __stdcall raw_Add (
        VARIANT varX ) = 0;
    virtual HRESULT __stdcall raw_Remove (
        long Idx ) = 0;
    virtual HRESULT __stdcall get__NewEnum (
        IUnknown * * pVal ) = 0;
};

struct __declspec(uuid("3137f3e2-9860-4335-907b-3f0a4de31c62"))
G2Symbol;
    // [ default ] interface IG2Symbol

struct __declspec(uuid("b2e73bd0-b965-4456-b9d0-8d11ea69d476"))
IG2Symbol : G2ComObject
{
    //
    // Property data
    //

    __declspec(property(get=GetItem,put=PutItem))
    _bstr_t Item;
    __declspec(property(get=GetUpperCase,put=PutUpperCase))
    VARIANT_BOOL UpperCase;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetItem ( );
    void PutItem (
        _bstr_t pVal );
    VARIANT_BOOL GetUpperCase ( );
    void PutUpperCase (
        VARIANT_BOOL pVal );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Item (
        BSTR * pVal ) = 0;
    virtual HRESULT __stdcall put_Item (
        BSTR pVal ) = 0;
    virtual HRESULT __stdcall get_UpperCase (
        VARIANT_BOOL * pVal ) = 0;
    virtual HRESULT __stdcall put_UpperCase (
        VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("9bb94100-e344-415f-9976-d2beb3da4b29"))
G2LAElement;
    // [ default ] interface IG2LAElement

struct __declspec(uuid("98a966ca-2d0b-4952-bd49-25b3bbee91f6"))
IG2LAElement : G2ComObject
{
    //
    // Property data
    //

    __declspec(property(get=GetItem))
    _variant_t Item;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetItem ( );
    _variant_t GetValue ( );
    void PutValue (
        const _variant_t & pVal );
    HRESULT Init (
        struct IG2ListOrArray * pLaw,
        long Idx );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Item (
        VARIANT * pVal ) = 0;
    virtual HRESULT __stdcall get_Value (
        VARIANT * pVal ) = 0;
    virtual HRESULT __stdcall put_Value (
        VARIANT pVal ) = 0;
    virtual HRESULT __stdcall raw_Init (
        struct IG2ListOrArray * pLaw,
        long Idx ) = 0;
};

struct __declspec(uuid("15dd1d07-37fd-4d16-9acb-bebc4ce25438"))
G2ItemRef;
    // [ default ] interface IG2ItemRef

struct __declspec(uuid("659e9603-1375-4225-bfd8-ddb4281855a6"))
G2ComConfigurator;
    // [ default ] interface IG2ComConfigurator

struct __declspec(uuid("56e2306b-4f30-4249-94b0-b3b9647dbc3a"))
IG2ComConfigurator : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetHighThroughput,put=PutHighThroughput))
    VARIANT_BOOL HighThroughput;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetHighThroughput ( );
    void PutHighThroughput (
        VARIANT_BOOL pVal );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_HighThroughput (
        VARIANT_BOOL * pVal ) = 0;
    virtual HRESULT __stdcall put_HighThroughput (
        VARIANT_BOOL pVal ) = 0;
};

//
// Named GUID constants initializations
//

extern "C" const GUID __declspec(selectany) LIBID_GensymAxl =
    {0xac4c85d1,0xb16c,0x11d1,{0xa7,0x18,0x00,0x60,0x08,0xc5,0xf9,0x33}};
extern "C" const GUID __declspec(selectany) DIID__G2Events =
    {0xf15b9434,0xb166,0x11d1,{0xa7,0x18,0x00,0x60,0x08,0xc5,0xf9,0x33}};
extern "C" const GUID __declspec(selectany) CLSID_G2Item =
    {0x65da1f96,0xda11,0x47fe,{0xb3,0xef,0x1c,0xe2,0x1c,0xdb,0x0e,0xd0}};
extern "C" const GUID __declspec(selectany) IID_G2ComObject =
    {0xfceb8041,0xef78,0x4be6,{0xad,0xc8,0x51,0xc1,0x73,0xf6,0x54,0x84}};
extern "C" const GUID __declspec(selectany) IID_IG2Item =
    {0xd4a49e08,0x2ada,0x49d2,{0xbb,0xcb,0x7f,0xdd,0x7e,0xbb,0x6d,0x86}};
extern "C" const GUID __declspec(selectany) IID_IG2Item2 =
    {0x0e22a2cd,0x4e8c,0x4f5d,{0xbe,0x79,0x39,0xd6,0xcc,0xc8,0x04,0xf3}};
extern "C" const GUID __declspec(selectany) IID_IG2Item3 =
    {0x159b27b6,0x6bb3,0x4317,{0xa5,0xe5,0xfd,0x55,0x00,0x1d,0x3e,0x9f}};
extern "C" const GUID __declspec(selectany) IID_IG2Item4 =
    {0xd8b90dc4,0x74bb,0x4775,{0x98,0x3c,0x02,0x13,0x7e,0x2e,0x28,0x3b}};
extern "C" const GUID __declspec(selectany) IID_IG2ItemRef =
    {0x3862dc96,0xaf87,0x48c9,{0x9c,0x14,0x0f,0x2d,0x5a,0x4b,0x72,0x50}};
extern "C" const GUID __declspec(selectany) IID_IG2Gateway =
    {0xa71acd10,0x3b6e,0x11d1,{0x8a,0xb3,0x00,0x60,0x97,0x03,0xe6,0x0f}};
extern "C" const GUID __declspec(selectany) IID_IG2Gateway2 =
    {0xc18d503e,0xc8a5,0x45c6,{0xa4,0x2f,0x10,0x0f,0x43,0x47,0xb3,0x67}};
extern "C" const GUID __declspec(selectany) IID_IG2Gateway3 =
    {0x43dd340a,0x7247,0x416a,{0x9d,0xb0,0x64,0xb1,0x5c,0xd4,0xbd,0x28}};
extern "C" const GUID __declspec(selectany) IID_IG2Gateway4 =
    {0x064bea68,0x090c,0x47fe,{0x8d,0x43,0x1b,0xf8,0x8f,0x5b,0xc4,0x7d}};
extern "C" const GUID __declspec(selectany) CLSID_G2Workspace =
    {0x4f6ff39f,0x793b,0x4bc5,{0x84,0x13,0x65,0x7f,0x7b,0xa9,0x9f,0x57}};
extern "C" const GUID __declspec(selectany) IID_IG2Workspace =
    {0x986f5307,0x690c,0x4ef3,{0x91,0x73,0x7a,0x2a,0xe4,0x01,0x45,0x90}};
extern "C" const GUID __declspec(selectany) CLSID_G2Window =
    {0x4e1a836d,0x1fea,0x4e83,{0x8f,0x2f,0xa2,0x12,0x04,0x40,0x62,0x22}};
extern "C" const GUID __declspec(selectany) IID_IG2Window =
    {0x2488bb94,0x3222,0x4d5d,{0x82,0x57,0x8d,0xd9,0x60,0x05,0x61,0xf5}};
extern "C" const GUID __declspec(selectany) CLSID_G2Gateway =
    {0xac4c85d0,0xb16c,0x11d1,{0xa7,0x18,0x00,0x60,0x08,0xc5,0xf9,0x33}};
extern "C" const GUID __declspec(selectany) CLSID_GatewayProp =
    {0x8aef2da3,0x471a,0x11d1,{0x8a,0xb5,0x00,0x60,0x97,0x03,0xe6,0x0f}};
extern "C" const GUID __declspec(selectany) CLSID_G2StructureEntry =
    {0x15fc7ccc,0xc179,0x49ba,{0xa6,0x8b,0x13,0xc2,0x0c,0x58,0x0d,0xc0}};
extern "C" const GUID __declspec(selectany) IID_IG2StructureEntry =
    {0xc4e20f9c,0x7ecc,0x4ee8,{0x8f,0xef,0x6a,0xb6,0xd3,0xd8,0x09,0x43}};
extern "C" const GUID __declspec(selectany) CLSID_G2Structure =
    {0xce90290f,0x2eae,0x49ef,{0x8b,0x5a,0xd5,0xff,0x6a,0xae,0x8c,0xe0}};
extern "C" const GUID __declspec(selectany) IID_IG2Structure =
    {0xa59a1dfb,0x3711,0x4893,{0xb3,0xf4,0xd9,0xfd,0x0b,0x82,0x4c,0x23}};
extern "C" const GUID __declspec(selectany) CLSID_G2Attribute =
    {0x738b47fa,0x2d36,0x40d2,{0x8d,0xc3,0x47,0xe9,0x77,0x17,0xe6,0x4b}};
extern "C" const GUID __declspec(selectany) IID_IG2Attribute =
    {0x45bb4fd7,0x576b,0x4672,{0x92,0x3e,0x15,0xe7,0xc1,0x3d,0x2c,0x76}};
extern "C" const GUID __declspec(selectany) CLSID_G2ListOrArray =
    {0x27f911c6,0xb864,0x4c85,{0xa7,0xfa,0xce,0x15,0x1b,0x60,0xf4,0xbf}};
extern "C" const GUID __declspec(selectany) IID_IG2ListOrArray =
    {0x4a80a9fd,0x41df,0x4b49,{0x87,0x40,0x13,0xc4,0x3e,0x35,0x0f,0x29}};
extern "C" const GUID __declspec(selectany) CLSID_G2Symbol =
    {0x3137f3e2,0x9860,0x4335,{0x90,0x7b,0x3f,0x0a,0x4d,0xe3,0x1c,0x62}};
extern "C" const GUID __declspec(selectany) IID_IG2Symbol =
    {0xb2e73bd0,0xb965,0x4456,{0xb9,0xd0,0x8d,0x11,0xea,0x69,0xd4,0x76}};
extern "C" const GUID __declspec(selectany) CLSID_G2LAElement =
    {0x9bb94100,0xe344,0x415f,{0x99,0x76,0xd2,0xbe,0xb3,0xda,0x4b,0x29}};
extern "C" const GUID __declspec(selectany) IID_IG2LAElement =
    {0x98a966ca,0x2d0b,0x4952,{0xbd,0x49,0x25,0xb3,0xbb,0xee,0x91,0xf6}};
extern "C" const GUID __declspec(selectany) CLSID_G2ItemRef =
    {0x15dd1d07,0x37fd,0x4d16,{0x9a,0xcb,0xbe,0xbc,0x4c,0xe2,0x54,0x38}};
extern "C" const GUID __declspec(selectany) CLSID_G2ComConfigurator =
    {0x659e9603,0x1375,0x4225,{0xbf,0xd8,0xdd,0xb4,0x28,0x18,0x55,0xa6}};
extern "C" const GUID __declspec(selectany) IID_IG2ComConfigurator =
    {0x56e2306b,0x4f30,0x4249,{0x94,0xb0,0xb3,0xb9,0x64,0x7d,0xbc,0x3a}};

//
// Wrapper method implementations
//

#include "G2Com.tli"

#pragma pack(pop)
