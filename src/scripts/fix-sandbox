#!/bin/csh -f

# Module fix-sandbox

# Copyright (c) 1986 - 2017 Gensym Corporation.
# All Rights Reserved.

# Judy Anderson (based on move-sandbox)

# This C-shell script is used to fix bt links when a sandbox has acquired an
# erroneous set of links.  This can happen when files are referred to by
# different names on different computers; to wit, sdev4 vs. the rest of the
# world.  Does not move any files -- just fixes links.

# This script takes two arguments.  The first is the name of the sandbox and the
# second is the desired link location of the new sandbox.  The names tmp and
# sandboxes* are treated specially in this script, as they are in make-sandbox.
# Tmp always means /tmp on the local machine and sandboxes* always means
# /gensym/sandboxes*.  The directory names to not need to have trailing /
# characters.

goto main

usage:

echo "Usage: fix-sandbox <sandbox-name> <location>"
echo "  where location  = sandboxes<n> | tmp | <dir>"
echo "  e.g. fix-sandbox jra /gensym/spare/sandboxes/jra"


exit 1

failed:

echo "Error: The last command failed with status ${last_status}."
exit $last_status

main:

# Process and check the arguments.

if ($#argv != 2) then
  echo "Error: Wrong number of arguments, $#argv supplied, 2 required."
  goto usage
endif

set sandbox_name = $1
set to_loc = $2

if ($to_loc =~ sandboxes*) then
  set to_dir = /gensym/$to_loc
else if ($to_loc == tmp) then
  set to_dir = /tmp
else if (-d $to_loc) then
  set to_dir = $to_loc
else
  echo "Error: $to_loc is not a supported location."
  echo "       The supported locations are sandboxes<n>, tmp, and existing directories."
  goto usage
endif

if !(-d $to_dir/$sandbox_name) then
  echo "Error: target sandbox dir $to_dir/$sandbox_name doesn't exist."
  goto usage
endif
# Make the new symbolic links.

echo "Moving /bt symbolic links."

foreach new_link (/bt/$sandbox_name /home/intelnt-mount/bt/$sandbox_name /home/alphant-mount/bt/$sandbox_name /home/vax-mount/bt/$sandbox_name /home/alpha-mount/bt/$sandbox_name)
  if ({ test -h $new_link }) then
    echo "  Removing old link $new_link ..."
    rm $new_link
    set last_status = $status
    if ($last_status != 0) goto failed
  endif

  echo "  Making link from $new_link ..."
  ln -s $to_dir/$sandbox_name $new_link
  set last_status = $status
  if ($last_status != 0) goto failed
end

# Exit

echo "Sandbox links fixed."
exit 0
