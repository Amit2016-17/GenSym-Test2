# Makefile for JGI Shareable Object Library
# Machine type: linux

#   This makefile is to be run in the object directory with a command
# such as "make -f $SRCBOX/java/mkfiles/<platform>-jgilib-o".
# The following environment variables must be set.
#     JAVA_HOME: needed for jdk jni include files
#     SRCBOX:    needed for .c and .h files
#     DSTBOX:    path for emitted objects and libraries
#     GSIBOX:    needed for gsi libraries
# The following files are required, which are created by javah.
#     $(H_DIR)/com_gensym_jgi_JGInterface.h
#     $(H_DIR)/com_gensym_jgi_GsiLoopThread.h

#------------------------------------------------
# Variables
#-----------------------
# Directory variables

C_DIR   = $(SRCBOX)/java/c
H_DIR   = $(SRCBOX)/java/include
EXE_DIR = $(DSTBOX)/javalink/lib
SPECIFIC = $(SRCBOX)/specific/linux

JAVAH = $(JAVA_HOME)/bin/javah
JAVAC = $(JAVA_HOME)/bin/javac
JAVAC_OPTIONS = -verbose
JAVAC_OPTIONS = 
JAVAH_OPTIONS = -jni -d $(H_DIR)
JAVAH_STUBS_OPTIONS = -d $(C_DIR) -stubs
PACKAGE_PREFIX = com.gensym.jgi.
PP = com_gensym_jgi_
BT_JAVA = ${SRCBOX}/java
JAVA_DIR      = ${BT_JAVA}/com/gensym/jgi

#-----------------------
# Flag variables

CCFLAGS = -shared -g -DNEW_CLASS_MAPPING -I$(GSIBOX)\
  -I$(JAVA_HOME)/include -I$(JAVA_HOME)/include/linux -I$(SRCBOX)/java/include

#-----------------------
# File variables

GSI_LIBS = $(GSIBOX)/libgsi.a $(GSIBOX)/libtcp.a $(GSIBOX)/libgsec.a $(GSIBOX)/librtl.a $(SPECIFIC)/libssl.a $(SPECIFIC)/libcrypto.a

H_FILES = $(GSIBOX)/gsi_main.h $(H_DIR)/jni_gi.h $(H_DIR)/jgi_gsi_options.h \
  $(GSIBOX)/gsi_misc.h $(H_DIR)/jgi_info.h \
  $(H_DIR)/com_gensym_jgi_JGInterface.h $(H_DIR)/com_gensym_jgi_GsiLoopThread.h

O_FILES = $(GSIBOX)/gsi_misc.o jni_gi.o jni_gi_gsiconv.o jni_gi_init.o \
  jni_gi_javaconv.o jni_gi_utils.o

#------------------------------------------------
# Targets

$(EXE_DIR)/libJgiInterface.so : $(O_FILES) $(GSI_LIBS)
	ld -o $(EXE_DIR)/libJgiInterface.so -G $(O_FILES) $(GSI_LIBS) -lpthread -lm -lnsl

$(H_DIR)/$(PP)JGInterface.h : $(JAVA_DIR)/JGInterface.class
	$(JAVAH) $(JAVAH_OPTIONS) $(PACKAGE_PREFIX)JGInterface
	@ touch $(H_DIR)/$(PP)JGInterface.h

$(H_DIR)/$(PP)GsiLoopThread.h : $(JAVA_DIR)/GsiLoopThread.class
	$(JAVAH) $(JAVAH_OPTIONS) $(PACKAGE_PREFIX)GsiLoopThread
	@ touch $(H_DIR)/$(PP)GsiLoopThread.h

jni_gi.o : $(C_DIR)/jni_gi.c $(H_FILES)
	gcc -c $(CCFLAGS) $(C_DIR)/jni_gi.c -o jni_gi.o

jni_gi_gsiconv.o : $(C_DIR)/jni_gi_gsiconv.c $(H_FILES)
	gcc -c $(CCFLAGS) $(C_DIR)/jni_gi_gsiconv.c -o jni_gi_gsiconv.o

jni_gi_init.o : $(C_DIR)/jni_gi_init.c $(H_FILES)
	gcc -c $(CCFLAGS) $(C_DIR)/jni_gi_init.c -o jni_gi_init.o

jni_gi_javaconv.o : $(C_DIR)/jni_gi_javaconv.c $(H_FILES)
	gcc -c $(CCFLAGS) $(C_DIR)/jni_gi_javaconv.c -o jni_gi_javaconv.o
 
jni_gi_utils.o : $(C_DIR)/jni_gi_utils.c $(H_FILES)
	gcc -c $(CCFLAGS) $(C_DIR)/jni_gi_utils.c -o jni_gi_utils.o

#------------------------------------------------
# Cleanup

clean :
	rm -f $(EXE_DIR)/libJgiInterface.so *.o
