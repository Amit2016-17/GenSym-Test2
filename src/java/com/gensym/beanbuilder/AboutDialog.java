/*
	A basic extension of the java.awt.Dialog class
 */
package com.gensym.beanbuilder;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dialog;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Frame;
import java.awt.Point;
import java.awt.Rectangle;
import java.util.Locale;

import com.gensym.message.Resource;
public class AboutDialog extends Dialog {

	private static Resource i18nSettings =
            Resource.getBundle("com.gensym.beanbuilder.text.AboutDlg", Locale.getDefault() );

	public AboutDialog(Frame parent, boolean modal)
	{

		super(parent, modal);

		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.

		//{{INIT_CONTROLS
		setLayout(null);
		setVisible(false);
		setSize(insets().left + insets().right + 337,insets().top + insets().bottom + 202);
		setBackground(java.awt.Color.lightGray);
		productLabel = new java.awt.Label("G2BeanBuilder");
		productLabel.setBounds(insets().left + 15,insets().top + 21,130,14);
		productLabel.setFont(new Font("DialogInput", Font.PLAIN, 10));
		productLabel.setBackground(new Color(-16728386));
		add(productLabel);
		aboutDialogOkButton = new java.awt.Button();
		aboutDialogOkButton.setBounds(insets().left + 131,insets().top + 170,87,25);
		add(aboutDialogOkButton);
		imageDisplay1 = new com.gensym.beanbuilder.ImageDisplay();
		try {
			imageDisplay1.setFileName("settings1.jpg");
		}
		catch(java.beans.PropertyVetoException e) { }
		imageDisplay1.setBounds(insets().left + 13,insets().top + 12,203,151);
		add(imageDisplay1);
		versionLabel = new java.awt.Label("Version:");
		versionLabel.setBounds(insets().left + 218,insets().top + 48,74,27);
		versionLabel.setFont(new Font("Dialog", Font.BOLD|Font.ITALIC, 12));
		add(versionLabel);
		versionNumberLabel = new java.awt.Label("1.0");
		versionNumberLabel.setBounds(insets().left + 232,insets().top + 81,71,27);
		add(versionNumberLabel);
		setTitle("About");
		//}}

		//{{REGISTER_LISTENERS
		SymWindow aSymWindow = new SymWindow();
		this.addWindowListener(aSymWindow);
		SymAction lSymAction = new SymAction();
		aboutDialogOkButton.addActionListener(lSymAction);
		SymMouse aSymMouse = new SymMouse();

		//}}

	}

	public AboutDialog(Frame parent, String title, boolean modal)
	{
		this(parent, modal);
		setTitle(title);
	}

	@Override
	public void addNotify()
	{
	    // Record the size of the window prior to calling parents addNotify.
	    Dimension d = getSize();

		super.addNotify();

	    // Only do this once.
		if (fComponentsAdjusted)
			return;

		// Adjust components according to the insets
		setSize(insets().left + insets().right + getSize().width, insets().top + insets().bottom + getSize().height);
		Component components[] = getComponents();
		for (int i = 0; i < components.length; i++)
		{
			Point p = components[i].getLocation();
			p.translate(insets().left, insets().top);
			components[i].setLocation(p);
		}

        // Used for addNotify check.
		fComponentsAdjusted = true;
	}

	@Override
	public synchronized void show()
	{   setResizable(false);
		Rectangle bounds = getParent().bounds();
		Rectangle abounds = bounds();

		move(bounds.x + (bounds.width - abounds.width)/ 2,
			 bounds.y + (bounds.height - abounds.height)/2);
		aboutDialogOkButton.setLabel(i18nSettings.getString("okay"));
		versionLabel.setText(i18nSettings.getString("version"));
		setTitle(i18nSettings.getString("about"));
		super.show();
	}

	//{{DECLARE_CONTROLS
	java.awt.Label productLabel;
	java.awt.Button aboutDialogOkButton;
	com.gensym.beanbuilder.ImageDisplay imageDisplay1;
	java.awt.Label versionLabel;
	java.awt.Label versionNumberLabel;
	//}}

    // Used for addNotify redundency check.
	boolean fComponentsAdjusted = false;

	class SymWindow extends java.awt.event.WindowAdapter
	{
		@Override
		public void windowClosing(java.awt.event.WindowEvent event)
		{
			Object object = event.getSource();
			if (object.equals(AboutDialog.this))
				AboutDialog_WindowClosing(event);
		}
	}

	void AboutDialog_WindowClosing(java.awt.event.WindowEvent event)
	{
        hide();
        //     dispose();
	}

	class SymAction implements java.awt.event.ActionListener
	{
		@Override
		public void actionPerformed(java.awt.event.ActionEvent event)
		{
			Object object = event.getSource();
			if (object.equals(aboutDialogOkButton))
				okButton_Clicked(event);
		}
	}

	void okButton_Clicked(java.awt.event.ActionEvent event)
	{
		//{{CONNECTION
		// Clicked from okButton Hide the Dialog
                hide();
                //dispose();
		//}}
	}

	class SymMouse extends java.awt.event.MouseAdapter
	{
		@Override
		public void mouseClicked(java.awt.event.MouseEvent event)
		{
			Object object = event.getSource();

		}

		@Override
		public void mousePressed(java.awt.event.MouseEvent event)
		{
			Object object = event.getSource();

		}
	}


}
