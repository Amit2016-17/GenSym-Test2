package com.gensym.beanbuilder;
import java.awt.Component;
import java.awt.Dialog;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Frame;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.net.URL;
import java.util.Locale;

import com.gensym.message.Resource;

public class ConfirmDialog extends Dialog
{
	private static Resource i18nSettings =
        Resource.getBundle("com.gensym.beanbuilder.text.ConfirmDlg", Locale.getDefault() );

	public ConfirmDialog(Frame parent, String title, String message, URL iconURL)
	{
		super(parent, title , true);

		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		setLayout(null);
		setVisible(false);
		setSize(insets().left + insets().right + 453,insets().top + insets().bottom + 151);
		setBackground(java.awt.Color.lightGray);
		quitDialogNoButton = new java.awt.Button();
		quitDialogNoButton.setLabel("  No  ");
		quitDialogNoButton.setBounds(insets().left + 265,insets().top + 110,60,25);
		quitDialogNoButton.setFont(new Font("Dialog", Font.PLAIN, 12));
		add(quitDialogNoButton);
		quitDialogYesButton = new java.awt.Button();
		quitDialogYesButton.setLabel(" Yes ");
		quitDialogYesButton.setBounds(insets().left + 150,insets().top + 111,60,25);
		quitDialogYesButton.setFont(new Font("Dialog", Font.PLAIN, 12));
		add(quitDialogYesButton);
		label1 = new java.awt.Label("");
		label1.setBounds(insets().left + 101,insets().top + 31,317,50);
		label1.setFont(new Font("Dialog", Font.BOLD, 12));
		add(label1);
		imageDisplay1 = new com.gensym.beanbuilder.ImageDisplay();
		try {
			imageDisplay1.setFileName("q64.jpg");
		}
		catch(java.beans.PropertyVetoException e) { }
		imageDisplay1.setBounds(insets().left + 12,insets().top + 27,66,67);
		add(imageDisplay1);
		setTitle("Confirm");
		//}}

		label1.setText(message);
/*
		if (iconURL != null)
		{
			ImageViewer img = new ImageViewer(iconURL);
			add(img);
		}

*/
		//{{REGISTER_LISTENERS
		SymAction lSymAction = new SymAction();
		quitDialogNoButton.addActionListener(lSymAction);
		quitDialogYesButton.addActionListener(lSymAction);
		//}}
	}

	public ConfirmDialog(Frame parent)
	{
		this(parent, i18nSettings.getString("confirm"), "Event", null);
	}

	// Add a constructor for Interactions (ignoring modal)
	public ConfirmDialog(Frame parent, boolean modal)
	{
		this(parent);
	}

	// Add a constructor for Interactions (ignoring modal)
	public ConfirmDialog(Frame parent, String message, boolean modal)
	{
		this(parent, i18nSettings.getString("confirm"), message, null);
	}



	@Override
	public void addNotify()
	{
	    // Record the size of the window prior to calling parents addNotify.
	    Dimension d = getSize();

		super.addNotify();

		if (fComponentsAdjusted)
			return;

		// Adjust components according to the insets
		setSize(insets().left + insets().right + d.width, insets().top + insets().bottom + d.height);
		Component components[] = getComponents();
		for (int i = 0; i < components.length; i++)
		{
			Point p = components[i].getLocation();
			p.translate(insets().left, insets().top);
			components[i].setLocation(p);
		}
		fComponentsAdjusted = true;
	}

    // Used for addNotify check.
	boolean fComponentsAdjusted = false;

	//{{DECLARE_CONTROLS
	java.awt.Button quitDialogNoButton;
	java.awt.Button quitDialogYesButton;
	java.awt.Label label1;
	com.gensym.beanbuilder.ImageDisplay imageDisplay1;
	//}}

	class SymAction implements java.awt.event.ActionListener
	{
		@Override
		public void actionPerformed(java.awt.event.ActionEvent event)
		{
			Object object = event.getSource();
			if (object.equals(quitDialogNoButton))
				quitDialogNoButton_Action(event);
			else if (object.equals(quitDialogYesButton))
				quitDialogYesButton_Action(event);
		}
	}

    /**
     * Makes this component visible.
     * <p>
     * This is a standard Java AWT method which gets called to show this
     * component. If this component was invisible due to a previous hide()
     * call it makes this component visible again.
     */
    @Override
    public synchronized void show() {
        Rectangle bounds = getParent().bounds();
        Rectangle abounds = bounds();

        move(bounds.x + (bounds.width - abounds.width) / 2,
             bounds.y + (bounds.height - abounds.height) /2);
        quitDialogNoButton.setLabel(i18nSettings.getString("no"));
        quitDialogYesButton.setLabel(i18nSettings.getString("yes"));
        this.setTitle(i18nSettings.getString("confirm"));
        super.show();
    }
	class SymWindow extends java.awt.event.WindowAdapter
	{
		@Override
		public void windowClosing(java.awt.event.WindowEvent event)
		{
			Object object = event.getSource();
			if (object.equals(ConfirmDialog.this))
				ConfirmDialog_WindowClosing(event);
		}
	}

	void ConfirmDialog_WindowClosing(java.awt.event.WindowEvent event)
	{
           hide();
           //dispose();
	}
	void quitDialogNoButton_Action(java.awt.event.ActionEvent event)
	{
		 hide();
		 //dispose();
	}

	void quitDialogYesButton_Action(java.awt.event.ActionEvent event)
	{
	   hide();
    	Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(new WindowEvent((java.awt.Window)getParent(), WindowEvent.WINDOW_CLOSING));

	}
}

