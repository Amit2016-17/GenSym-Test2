;;; -*- Mode: Lisp; Package: TIMPL; Syntax: Common-Lisp -*-

(in-package "TUTIL")

(himpl:note-rcs-revision
 "$Source: //gensym/ab-repos/chestnut/src/trans/lisp/reserved.lisp,v $"
 "$Revision: 1.1 $"
 "$Date: 2006/02/28 21:59:11 $")

; This is a list of the names that the translator must avoid using for
; Lisp entities.
; It doesn't include reserved words belonging to the C language itself;
; those are listed elsewhere in the translator.

; If one of these ever needs to occur as a variable or function in a
; Lisp expression manipulated by the translator, it should have an
; entry made for it in symbols.lisp, and should be removed from this
; file.

; Eventually, the entries in this table should be scoped as
; global or local conflicts, so that variable names which have
; the same name as system functions don't have to be remapped.
; That's why the entries are lists.

(defparameter *reserved-name-table*
  '("Object"

    "TRUE"
    "FALSE"

    "UNBOUND_MARKER" "UNBOUND"

    "VALUES_0" "VALUES_1" "VALUES_2" "VALUES_3" "VALUES_4"
    "VALUES_5" "VALUES_6" "VALUES_7" "VALUES_8" "VALUES_9"
    "VALUES_10" "VALUES_11" "VALUES_12" "VALUES_13" "VALUES_14"
    "VALUES_15" "VALUES_16" "VALUES_17" "VALUES_18" "VALUES_19"
    "VALUES_20"
    "NTH_VALUE"

    ;; Obsolete but retained temporararily for compatibility 
    ;;    "GET_VALUES_2" "GET_VALUES_3"
    ;;    "GET_VALUES_4" "GET_VALUES_5" "GET_VALUES_6" "GET_VALUES_7"
    ;;    "GET_VALUES_8" "GET_VALUES_9" "GET_VALUES_10" "GET_VALUES_11"
    ;;    "GET_VALUES_12" "GET_VALUES_13" "GET_VALUES_14" "GET_VALUES_15"
    ;;    "GET_VALUES_16" "GET_VALUES_17" "GET_VALUES_18" "GET_VALUES_19"
    ;;    "GET_VALUES_20"
    ;;    "STORE_VALUE"
    ;;    "STORE_VALUES"
    ;;    "RETURN_VALUE"
    ;;    "RETURN_VALUES"
    ;;    "RETURN_STORED_VALUES"
    ;;    "DECLARE_DYNAMIC_STATE"  ;Capitalize?
    ;;    "SAVE_DYNAMIC_STATE"
    ;;    "RESTORE_DYNAMIC_STATE"
    ;;    "DECLARE_PROTECT"  ;Capitalize?

    "MVS_2" "MVS_3"
    "MVS_4" "MVS_5" "MVS_6" "MVS_7"
    "MVS_8" "MVS_9" "MVS_10" "MVS_11"
    "MVS_12" "MVS_13" "MVS_14" "MVS_15"
    "MVS_16" "MVS_17" "MVS_18" "MVS_19"
    "MVS_20"
    "Declare_stack_pointer"
    "SAVE_STACK"
    "RESTORE_STACK"

    "n"  ; Until new varargs emitter code installed

    "Declare_special"
    "PUSH_SPECIAL"
    "POP_SPECIAL"
    "SET_SYMBOL_VALUE_LOCATION"

    ;; Declare_protect(n) and the PROTECT_LOCALS macros may be reinstated
    ;; to provide greater implementation flexibility.
    "Declare_protect"
    "PROTECT_LOCALS"
    "UNPROTECT_LOCALS"
    "PROTECT_1"
    "PROTECT_2"
    "PROTECT_3"
    "PROTECT_4"
    "PROTECT_5"
    "PROTECT_6"
    "PROTECT_7"
    "PROTECT_8"
    "PROTECT_9"
    "PROTECT_10"
    "PROTECTI_1"
    "PROTECTI_2"
    "PROTECTI_3"
    "PROTECTI_4"
    "PROTECTI_5"
    "PROTECTI_6"
    "PROTECTI_7"
    "PROTECTI_8"
    "PROTECTI_9"
    "PROTECTI_10"
    "PROTECT_GLOBAL"

    "Declare_catch"
    "PUSH_CATCH"
    "POP_CATCH"

    "PUSH_UNWIND_PROTECT"
    "POP_UNWIND_PROTECT"
    "CONTINUE_UNWINDING"

    "PUSH_PROGV"
    "POP_PROGV"

    "Declare_area" "XDeclare_area"	; temporary Medfly hack
    "Declare_frontier" "XDeclare_frontier" ; temporary Medfly hack
    "PUSH_AREA"
    "PUSH_LOCAL_ALLOCATION"
    "Static_area"
    "Dynamic_area"
    "Local_area"

    "Declare_varargs"
    "INIT_ARGS"
    "REQUIRED_ARG"
    "SAVE_ARGS"

    "MAKE_FUNCTION"
    "STATIC_FUNCTION"

    "FIND_BINDING"
    "NEW_BINDING"
    "BINDING_OF"
    "ADD_BINDING"

    ;; Generated by dumper:  initial symbol name table
    ;; Type is char**; this is a table of symbol name tables.
    ;; It's only relevant if symbols are dumped statically.
    "Initial_symbol_names"

    ;; Functions generated by write-header-files without passing through
    ;; name mapper

    ;; Names to support implementation of structures

    "Structure_object"
    "STRUCTURE_FIELD"
    "STRUCTURE_OBJECT_TYPEP"
    "STRUCTURE_OBJECT_COMPLEX_TYPEP"
    "NAMED_LISTP"
    "NAMED_SIMPLE_VECTOR_P"

    ;; Temporary hack to replace STORE_VALUES
    "result"

    ;; Declare hidden variables used by macros.

    "Declare_slot_value"
    "Declare_method_rest"

    ;; Macros used in generic function calls.
    "GENERIC_FUNCTION_CALL_START"
    "GENERIC_FUNCTION_CALL_ARG"
    "GENERIC_FUNCTION_CALL"
    "DEFINE_VARIADIC_GENERIC_FUNCTION"

    "GENERIC_FUNCTION_CALL_1"
    "GENERIC_FUNCTION_CALL_2"
    "GENERIC_FUNCTION_CALL_3"
    "GENERIC_FUNCTION_CALL_4"
    "GENERIC_FUNCTION_CALL_5"
    "GENERIC_FUNCTION_CALL_6"
    "GENERIC_FUNCTION_CALL_7"
    "GENERIC_FUNCTION_CALL_8"
    "GENERIC_FUNCTION_CALL_9"
    "GENERIC_FUNCTION_CALL_10"

    ;; Macros used in building static constants

    "CONSTANT_COMPILED_FUNCTION"
    "CONSTANT_DOUBLE_FLOAT"
    "CONSTANT_BIGNUM"
    "CONSTANT_RATIO"
    "CONSTANT_STRING"
    "CONSTANT_VECTOR"
    "CONSTANT_ARRAY"
    "CONSTANT_CONS"



    ;; Name conflicts due to macros defined in standard include files:

    ;; <stdio.h>
    "NULL" "FILE" "EOF" "stdin" "stdout" "stderr"
    "getchar" "putchar" "feor" "ferror" "fileno"

    ;; <varargs.h>
    "va_dcl" "va_start" "va_end" "va_alist" "va_arg"

    ;; <setjmp.h>
    "jmp_buf" "setjmp" "longjmp" "sigjmp_buf" "sigsetjmp" "siglongjmp"

    ;; <ctype.h>
    "isalpha" "isupper" "islower"	;many others


    ;; Name conflicts due to the C/Un*x RTL 
    ;; (this list is potentially endless!).
    ;; These names are all actually available for use as static or local
    ;; identifiers or cpp macros; they just can't be externs.
    ;; Actually, the ones that are Common Lisp functions should all have
    ;; explicit :entry-name items in symbols.lisp, so that they'll end up
    ;; being called lread, lmax, etc. instead of read_1, max_1, etc.

    "abs"
    ;;"exp" "log" "sqrt" 
    ;;"sin" "cos" "tan" "asin" "acos" "atan"
    "sinh" "cosh" "tanh" "asinh" "acosh" "atanh"
    "floor" "ffloor" "truncate" "ftruncate" 
    "open" "close" "read" "write" 
    "sleep" 
    "times"
    "remove" "delete"			;VMS
    "complex"				;Microsoft C
    "listen"				;Gensym conflict?
    "max" "min"				;Because Jeff says so

    "exit"

    "getc" "putc"			;many others

    ;; Plus all the rest of volumes 2 and 3 of arbitrary Unix manuals....
    ;; Complete this list by consulting the Posix documentation(?).

    ;; see the entry for -Uname in the man pages for cc
    "sun" "unix" "sparc"

    "ibm" "vax"
    ))

(mapc #'add-c-reserved-name *reserved-name-table*)
