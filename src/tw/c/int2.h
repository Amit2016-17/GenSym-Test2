/* int2.h -- Header File for int2.c
 * Copyright (c) 1986 - 2017 Gensym Corporation.  All Rights Reserved.
 */


/* Symbol Definitions */
extern Object Qerror;
extern Object Qread;
extern Object Qwrite;

extern Object Pclos;
extern Object Pclos_run;
extern Object Pclosx;
extern Object Pcl;
extern Object Pcl_user;
extern Object Pkeyword;
extern Object Ptrun;
extern Object Ptx;

/* function declarations */

#ifdef USE_PROTOTYPES

extern Object abort_for_icp(void);
extern Object abort_g2(int,...);
extern Object all_messages_processed_qm(Object,Object,Object);
extern Object all_remote_connections_restricted_p(void);
extern Object allocate_byte_vector_16(Object);
extern Object call_or_schedule_handle_queued_icp_messages(Object,Object);
extern Object cancel_and_reclaim_scheduled_queue_element_1(Object);
extern Object continue_reading_from_icp_socket(Object);
extern Object copy_icp_buffer(Object);
extern Object copy_icp_buffer_chain(Object);
extern Object copy_out_current_wide_string(void);
extern Object current_icp_read_task_resumable_p(void);
extern Object debug_out_of_synch(Object,Object,Object,Object,Object,Object);
extern Object emit_icp_read_trace(Object,Object,Object,Object,Object,Object,Object,Object,Object,Object);
extern Object emit_icp_write_trace(Object,Object,Object,Object,Object,Object,Object,Object,Object,Object);
extern Object end_icp_message_group(void);
extern Object end_icp_message_series_if_any(void);
extern Object enqueue_next_icp_buffer_if_any(Object);
extern Object enqueue_read_event(Object,Object);
extern Object enqueue_write_event(Object,Object);
extern Object ensure_next_icp_byte(void);
extern Object ensure_next_icp_message_series(void);
extern Object ensure_remote_icp_version_info(Object,Object);
extern Object execute_icp_write_callbacks(Object,Object);
extern Object finalize_and_reclaim_icp_socket(Object);
extern Object fixnum_time_interval(Object);
extern Object flush_and_shutdown_icp_socket(Object);
extern Object flush_icp_output_ports(void);
extern Object future_task_schedule_2(Object);
extern Object gensym_cons_1(Object,Object);
extern Object get_forbidden_listener_clients_if_any(void);
extern Object get_icp_read_buffer(void);
extern Object get_icp_write_buffer(void);
extern Object handle_icp_acknowledge_shutdown(void);
extern Object handle_icp_messages(Object);
extern Object handle_queued_icp_messages(Object);
extern Object handle_queued_icp_messages_task(Object);
extern Object handle_unclogged_connection_if_necessary(Object);
extern Object icp_connection_can_process_messages_qm(Object);
extern Object icp_error_internal(Object,Object,Object,Object,Object);
extern Object icp_error_message_string(Object,Object,Object,Object,Object);
extern Object icp_out_of_synch(int,...);
extern Object icp_output_port_flushed_qm(Object);
extern Object icp_socket_description(Object);
extern Object icp_socket_is_for_ui_client_interface_p(Object);
extern Object item_remotely_callable_p(Object);
extern Object item_remotely_modifiable_p(Object);
extern Object item_remotely_visible_p(Object);
extern Object kill_current_icp_read_task(void);
extern Object make_icp_buffer_internal_1(Object);
extern Object make_permanent_queue_element_structure_internal(void);
extern Object make_permanent_schedule_task_structure_internal(void);
extern Object make_variable_fill_icp_buffer(void);
extern Object maybe_finish_current_icp_read_task(void);
extern Object memq_function(Object,Object);
extern Object network_access_allowed_p(int,...);
extern Object next_icp_message_group(void);
extern Object notify_user_at_console(int,...);
extern Object peek_icp_byte(void);
extern Object peek_icp_byte_if_any(void);
extern Object print_icp_buffer_byte_contents(Object);
extern Object print_icp_buffer_contents(Object);
extern Object process_end_of_message_group(Object,Object);
extern Object process_next_icp_message_group_if_ready(Object);
extern Object read_icp_byte(void);
extern Object read_icp_byte_if_any(void);
extern Object read_icp_byte_or_message_group_end(void);
extern Object read_icp_skip_to_message_group_end(void);
extern Object read_icp_suspend(void);
extern Object ready_for_next_icp_message_group(Object);
extern Object receive_next_icp_buffer_if_any(Object);
extern Object reclaim_icp_buffer(Object);
extern Object reclaim_schedule_task_args(Object);
extern Object reclaim_text_string(Object);
extern Object record_system_variable(Object,Object,Object,Object,Object,Object,Object);
extern Object remote_inform_restricted_p(void);
extern Object replace_format_using_equivalent_font(Object);
extern Object reset_counters_for_all_icp_sockets(void);
extern Object restore_icp_index_to_original_state(void);
extern Object resume_icp_task_1(Object);
extern Object schedule_processing_for_inhibited_messages(void);
extern Object send_i_am_alive_if_necessary(Object,Object);
extern Object send_icp_message_group_id(Object,Object);
extern Object shutdown_icp_socket_connection(int,...);
extern Object start_icp_message_series(void);
extern Object start_next_message_series(void);
extern Object start_writing_icp_message(Object);
extern Object stop_filling_icp_buffer_at_end_of_icp_message_group(void);
extern Object tformat(int,...);
extern Object time_slice_expired_p(void);
extern Object transmit_completed_icp_message_group(void);
extern Object transmit_icp_output_if_ready(Object,Object);
extern Object transmit_next_localnet_icp_buffer(Object);
extern Object transmit_next_network_icp_buffer(Object);
extern Object twrite_icp_error(int,...);
extern Object twrite_icp_socket_connection_name(Object);
extern Object update_i_am_alive_info_at_end_of_message_group(Object);
extern Object update_icp_connection_clogged_p(Object,Object);
extern Object wide_string_to_gensym_string(Object);
extern Object write_get_new_buffer(void);
extern Object write_icp_byte(Object);
extern Object write_icp_maybe_suspend(void);

#else

extern Object abort_for_icp();
extern Object abort_g2();
extern Object all_messages_processed_qm();
extern Object all_remote_connections_restricted_p();
extern Object allocate_byte_vector_16();
extern Object call_or_schedule_handle_queued_icp_messages();
extern Object cancel_and_reclaim_scheduled_queue_element_1();
extern Object continue_reading_from_icp_socket();
extern Object copy_icp_buffer();
extern Object copy_icp_buffer_chain();
extern Object copy_out_current_wide_string();
extern Object current_icp_read_task_resumable_p();
extern Object debug_out_of_synch();
extern Object emit_icp_read_trace();
extern Object emit_icp_write_trace();
extern Object end_icp_message_group();
extern Object end_icp_message_series_if_any();
extern Object enqueue_next_icp_buffer_if_any();
extern Object enqueue_read_event();
extern Object enqueue_write_event();
extern Object ensure_next_icp_byte();
extern Object ensure_next_icp_message_series();
extern Object ensure_remote_icp_version_info();
extern Object execute_icp_write_callbacks();
extern Object finalize_and_reclaim_icp_socket();
extern Object fixnum_time_interval();
extern Object flush_and_shutdown_icp_socket();
extern Object flush_icp_output_ports();
extern Object future_task_schedule_2();
extern Object gensym_cons_1();
extern Object get_forbidden_listener_clients_if_any();
extern Object get_icp_read_buffer();
extern Object get_icp_write_buffer();
extern Object handle_icp_acknowledge_shutdown();
extern Object handle_icp_messages();
extern Object handle_queued_icp_messages();
extern Object handle_queued_icp_messages_task();
extern Object handle_unclogged_connection_if_necessary();
extern Object icp_connection_can_process_messages_qm();
extern Object icp_error_internal();
extern Object icp_error_message_string();
extern Object icp_out_of_synch();
extern Object icp_output_port_flushed_qm();
extern Object icp_socket_description();
extern Object icp_socket_is_for_ui_client_interface_p();
extern Object item_remotely_callable_p();
extern Object item_remotely_modifiable_p();
extern Object item_remotely_visible_p();
extern Object kill_current_icp_read_task();
extern Object make_icp_buffer_internal_1();
extern Object make_permanent_queue_element_structure_internal();
extern Object make_permanent_schedule_task_structure_internal();
extern Object make_variable_fill_icp_buffer();
extern Object maybe_finish_current_icp_read_task();
extern Object memq_function();
extern Object network_access_allowed_p();
extern Object next_icp_message_group();
extern Object notify_user_at_console();
extern Object peek_icp_byte();
extern Object peek_icp_byte_if_any();
extern Object print_icp_buffer_byte_contents();
extern Object print_icp_buffer_contents();
extern Object process_end_of_message_group();
extern Object process_next_icp_message_group_if_ready();
extern Object read_icp_byte();
extern Object read_icp_byte_if_any();
extern Object read_icp_byte_or_message_group_end();
extern Object read_icp_skip_to_message_group_end();
extern Object read_icp_suspend();
extern Object ready_for_next_icp_message_group();
extern Object receive_next_icp_buffer_if_any();
extern Object reclaim_icp_buffer();
extern Object reclaim_schedule_task_args();
extern Object reclaim_text_string();
extern Object record_system_variable();
extern Object remote_inform_restricted_p();
extern Object replace_format_using_equivalent_font();
extern Object reset_counters_for_all_icp_sockets();
extern Object restore_icp_index_to_original_state();
extern Object resume_icp_task_1();
extern Object schedule_processing_for_inhibited_messages();
extern Object send_i_am_alive_if_necessary();
extern Object send_icp_message_group_id();
extern Object shutdown_icp_socket_connection();
extern Object start_icp_message_series();
extern Object start_next_message_series();
extern Object start_writing_icp_message();
extern Object stop_filling_icp_buffer_at_end_of_icp_message_group();
extern Object tformat();
extern Object time_slice_expired_p();
extern Object transmit_completed_icp_message_group();
extern Object transmit_icp_output_if_ready();
extern Object transmit_next_localnet_icp_buffer();
extern Object transmit_next_network_icp_buffer();
extern Object twrite_icp_error();
extern Object twrite_icp_socket_connection_name();
extern Object update_i_am_alive_info_at_end_of_message_group();
extern Object update_icp_connection_clogged_p();
extern Object wide_string_to_gensym_string();
extern Object write_get_new_buffer();
extern Object write_icp_byte();
extern Object write_icp_maybe_suspend();

#endif

/* variables/constants */
extern Object Abort_for_icp_catcher_qm;
extern Object Active_icp_sockets;
extern Object At_end_of_icp_message_block_qm;
extern Object At_end_of_icp_message_group_qm;
extern Object Available_gensym_conses;
extern Object Backtrace_stack_for_internal_error;
extern Object Chain_of_available_queue_elements;
extern Object Chain_of_available_schedule_tasks;
extern Object Current_g2_time;
extern Object Current_icp_buffer;
extern Object Current_icp_port;
extern Object Current_icp_socket;
extern Object Current_read_icp_byte_position;
extern Object Current_real_time;
extern Object Current_resumable_icp_read_task;
extern Object Current_schedule_task;
extern Object Current_standard_icp_object_index_space;
extern Object Current_system_name;
extern Object Current_task_queue_vector;
extern Object Current_temporary_icp_object_index_space;
extern Object Current_twriting_output_type;
extern Object Current_wide_string;
extern Object Current_wide_string_list;
extern Object Current_write_icp_byte_position;
extern Object Debug_out_of_synch;
extern Object Deferred_task_queue_vector;
extern Object Disable_resumability;
extern Object Do_icp_flow_control_qm;
extern Object During_ffi_call_qm;
extern Object Fill_pointer_for_current_wide_string;
extern Object Handle_ui_client_interface_messages_immediately_p;
extern Object Handling_solitary_i_am_alive_qm;
#define Highest_system_priority FIX((SI_Long)0L)
extern Object Icp_buffer_of_start_of_message_series_qm;
extern Object Icp_buffers_for_message_group;
extern Object Icp_byte_position_of_start_of_message_series_qm;
extern Object Icp_connection_awaiting_acknowledgement;
extern Object Icp_connection_closed;
extern Object Icp_connection_running;
extern Object Icp_error_suspend_p;
extern Object Icp_message_handler_array;
extern Object Icp_message_handler_name_array;
extern Object Icp_message_too_long_warning;
extern Object Icp_message_trace_stream_qm;
extern Object Icp_output_ports_to_flush;
extern Object Icp_read_trace_cutoff_level_qm;
extern Object Icp_socket_for_handle_icp_messages;
extern Object Icp_socket_index;
extern Object Icp_socket_transacting_message_group;
extern Object Icp_sockets_waiting_for_icp_message_processing;
extern Object Icp_suspend;
extern Object Icp_write_trace_cutoff_level_qm;
extern Object Index_of_top_of_backtrace_stack;
extern Object Inhibit_icp_message_processing;
extern Object Inhibit_icp_message_processing_enabled;
extern Object Localnet_queued_icp_buffer_limit;
#define Lowest_system_priority FIX((SI_Long)11L)
extern Object Maximum_index_in_backtrace_stack_for_internal_error;
#define Minimum_message_series_size_before_beginning_new_series FIX((SI_Long)20000L)
#define Minimum_message_series_size_before_suspending FIX((SI_Long)8000L)
extern Object Negative_shutdown_interval_for_disallowed_icp_connection;
extern Object Number_of_icp_bytes_for_message_series;
extern Object Number_of_icp_bytes_in_message_group;
extern Object Number_of_icp_bytes_left_in_current_buffer;
extern Object Number_of_icp_bytes_left_in_message_series;
extern Object Number_of_icp_bytes_ready_to_read;
extern Object Number_of_icp_bytes_to_fill_buffer;
extern Object Priority_of_icp_control_messages;
extern Object Priority_of_icp_message_service;
extern Object Priority_of_next_task;
extern Object Priority_of_rpc_service;
extern Object Refused_icp_listener_connections;
extern Object Resumable_icp_read_ignore_p;
extern Object Resumable_icp_state;
extern Object Resumable_priority_of_gsi_data_service;
extern Object Resumable_priority_of_gsi_rpc_service;
extern Object Saved_initial_status;
extern Object Shutdown_interval_for_disallowed_icp_connection;
extern Object Shutdown_interval_for_disallowed_icp_connection_in_seconds;
#define Size_of_basic_backtrace_information FIX((SI_Long)3L)
extern Object Structure_being_reclaimed;
extern Object System_is_running;
extern Object Total_length_of_current_wide_string;
extern Object With_icp_buffer_coelescing_scope_qm;
extern Object Writing_icp_message_group;
extern Object Writing_resumable_icp_messages_p;
