SHELL = /bin/sh
PRODUCT = g2
ODIR = o-mt
O2DIR = o
PLATFORM = linux64
CDIR = $(SRCBOX)/SymScale/c
C2DIR = $(SRCBOX)/$(PRODUCT)/c2
EXTDIR = $(DSTBOX)/ext/$(ODIR)
FNTDIR = $(DSTBOX)/fnt/$(O2DIR)
GSIDIR = $(DSTBOX)/gsi/$(O2DIR)
JPEGDIR = $(DSTBOX)/jpeg/$(O2DIR)
PNGDIR = $(DSTBOX)/libpng/$(O2DIR)
MFDIR = $(DSTBOX)/$(PRODUCT)/$(ODIR)
RTHDIR = $(SRCBOX)/rtl/c
RTLDIR = $(DSTBOX)/rtl/$(ODIR)
SCRIPTSDIR = $(SRCBOX)/scripts
SPFCDIR = $(SRCBOX)/specific/$(PLATFORM)
XMLDIR = $(DSTBOX)/xml/$(O2DIR)
COMDIR = $(SRCBOX)/common/c/include
CC_FLAGS = -g -Wimplicit -DNDEBUG -I$(COMDIR) -DPACKAGING_G2_ENTERPRISE \
	-DSI_SUPPORT_THREAD=1
RTHFILES = $(RTHDIR)/c-ifuns.h $(RTHDIR)/c-sdefs.h \
  $(RTHDIR)/config.h $(RTHDIR)/core.h $(RTHDIR)/externs.h $(RTHDIR)/ffi.h \
  $(RTHDIR)/gensym.h $(RTHDIR)/ifuns.h $(RTHDIR)/initvars.h \
  $(RTHDIR)/inline.h $(RTHDIR)/instance.h $(RTHDIR)/kernel.h \
  $(RTHDIR)/librtl.h $(RTHDIR)/lisplib.h $(RTHDIR)/longname.h \
  $(RTHDIR)/object.h $(RTHDIR)/smcompat.h $(RTHDIR)/specific.h \
  $(RTHDIR)/svarargs.h $(RTHDIR)/uconfig.h $(RTHDIR)/values.h \
  $(RTHDIR)/varkey.h

all : _mfenter SymScale _mfexit

_mfenter : 
	@- $(SCRIPTSDIR)/errsweep -init

_mfexit : 
	@- $(SCRIPTSDIR)/errsweep -finish

SymScale : $(EXTDIR)/libcprim.a $(FNTDIR)/libfnt.a \
  $(JPEGDIR)/libjpeg.a $(XMLDIR)/liblsxml.a $(RTLDIR)/librtl.a \
  StatisticalProcedures.o CountHistoryDatapoints.o smlt.o actvte.o alphbt.o arrays.o atrxpt.o attrs.o basics.o \
  books.o boxes.o btstrp.o cells.o chars.o chars2.o chglog.o chnng.o chrts1.o \
  clocks.o cmds0.o cmds1.o cmds2.o cmpl1.o cmpl2.o cmptls.o cnclde.o cnct1.o \
  cnct2.o cnct3.o cnct3a.o cnct4.o cnct5.o cntnntlxtnsn.o cntrls.o cycles.o debug.o delta.o \
  dfntns.o dlogs.o dom.o draw.o dsplys.o edit1.o edit2.o entts.o eval.o evt.o \
  evt-g2.o expln.o f-keys.o fclts.o flprse.o flsp.o fltrs.o fnctns.o fntfls.o \
  fonts.o frms1.o frms2.o frms2a.o frms2b.o frms3.o frms4.o frms5.o frmts.o \
  g2-gsi.o g2bpl.o g2cnfg.o g2ds.o g2dsnp.o g2fnl.o g2frgn.o g2mtrs.o g2pts.o g2rpc1.o \
  g2rpc2.o g2rpc3.o gbmap.o gbmapr.o gfi.o gfi-sb.o glbscs.o gram0.o gram1.o \
  gram1a.o gram2.o gram3.o gram4.o gram4a.o gram5.o gram6a.o gram6b.o \
  gram6c.o gram7.o graphs.o grphdf.o grphs1.o grphs2.o grphtl.o gscmn.o \
  gspan.o hb72.o hbrw14.o hbrw18.o hbrw24.o hfep1.o hfep2.o hm14.o hm18.o \
  hm24.o hshtbl.o hstrs.o icons.o icons1.o icons2.o icons3.o icons4.o \
  icons5.o instll.o int0.o int1.o int2.o int3a.o int3b.o int4.o intrp.o is2022.o \
  is8859.o java1.o java2.o java3.o jismap.o kbld1.o kbld2.o kbmrge.o kbsv1.o \
  kbsv2.o kbsv3.o kbsv4.o kfep1.o kfep2.o kfep3.o ksmap2.o kybrds.o kydfs.o \
  launch.o lexer.o lists.o lngge.o load.o loop.o lspimg.o lttrs.o main.o \
  media.o mem-sp.o menus.o mice.o mods.o moves.o names.o natvtw.o ntrrr.o \
  ntvnt.o ntwrks.o nwmns.o nwrls.o nwtbls.o os-mem.o os-set.o osfrgn.o \
  osrrr.o ostme.o panes.o parse.o parse2.o parts.o pccmp.o pcdbg.o pcgrm.o \
  pcnst.o pcnst2.o pctls.o places.o player.o priqus.o prmtvs.o prntng.o ps.o \
  pshdr.o ptfms.o pthnms.o qrs.o rings.o rltns.o roles.o rpcmn1.o rpcmn2.o \
  rpcmn3.o rsrcs.o rules.o run.o sax.o schdle.o sets.o slots.o slvc14.o slvc18.o \
  slvc24.o smlt1.o smlt2.o smlt3.o smlt5.o smrtsgnlxtnsn.o sock1.o sock2.o sqncs1.o sqncs2.o \
  sqncs3.o stkcmp.o stkcts.o stkkrn.o stknst.o stktls.o stkvl1.o stkvl2.o \
  strms.o symtab.o syscns.o systm.o tables.o telesb.o thai14.o thai18.o \
  thai24.o times.o tlsrvr.o token.o tran.o trnscd.o trvs.o types.o uncde.o \
  userfuns.o userinit.o usersyms.o utlts0.o utlts1.o utlts2.o utlts3.o \
  utlts4.o vrbls.o vw-def.o vw-g2.o vwmsg1.o vws.o wbsvcs.o win1.o win2.o \
  win3.o win3a.o win4.o wrkstn.o wrmbt.o
	@- if [ -f SymScale ] ; then rm -f SymScale ; fi
	@- $(SCRIPTSDIR)/errsweep SymScale
	gcc -o SymScale -rdynamic -L/usr/X11R6/lib main.o symtab.o userfuns.o userinit.o \
  usersyms.o names.o load.o btstrp.o systm.o delta.o loop.o g2pts.o glbscs.o \
  osfrgn.o basics.o ostme.o os-set.o os-mem.o prmtvs.o chars.o jismap.o \
  ksmap2.o gbmap.o gbmapr.o chars2.o kybrds.o kydfs.o utlts0.o utlts1.o \
  utlts2.o lttrs.o uncde.o is2022.o trnscd.o is8859.o alphbt.o token.o \
  utlts3.o utlts4.o times.o f-keys.o osrrr.o ptfms.o launch.o pthnms.o \
  flprse.o strms.o ps.o schdle.o clocks.o ntwrks.o int0.o int1.o ntrrr.o \
  ntvnt.o int2.o int3a.o int3b.o int4.o intrp.o gscmn.o win1.o win2.o win3.o win3a.o \
  win4.o lspimg.o mice.o fonts.o icons.o hb72.o hm14.o hm18.o hm24.o slvc14.o \
  slvc18.o slvc24.o hbrw14.o hbrw18.o hbrw24.o thai14.o thai18.o thai24.o \
  parse.o parse2.o frms1.o types.o frms2.o frms2a.o frms2b.o frms3.o frms4.o \
  frms5.o panes.o draw.o entts.o places.o vw-def.o mods.o debug.o pshdr.o \
  prntng.o cnct1.o cnct2.o cnct3.o cnct3a.o cnct4.o cnct5.o cntnntlxtnsn.o dfntns.o rltns.o \
  frmts.o sqncs1.o sqncs2.o sqncs3.o boxes.o lngge.o tables.o telesb.o \
  dlogs.o natvtw.o wrkstn.o books.o menus.o nwmns.o fclts.o kfep1.o kfep2.o \
  kfep3.o hfep1.o hfep2.o edit1.o edit2.o rings.o moves.o run.o kbmrge.o \
  kbld1.o kbld2.o kbsv1.o kbsv2.o kbsv3.o kbsv4.o wrmbt.o fntfls.o cmptls.o \
  cmpl1.o cmpl2.o sets.o slots.o lists.o arrays.o hshtbl.o priqus.o vrbls.o hstrs.o \
  roles.o chnng.o eval.o rules.o nwrls.o fnctns.o cells.o pcgrm.o rpcmn1.o \
  rpcmn2.o rpcmn3.o pctls.o pccmp.o pcdbg.o chglog.o flsp.o mem-sp.o g2rpc1.o \
  g2rpc2.o g2rpc3.o expln.o parts.o dsplys.o grphs1.o grphs2.o grphtl.o \
  grphdf.o graphs.o chrts1.o nwtbls.o instll.o fltrs.o actvte.o atrxpt.o \
  cycles.o smlt1.o smlt2.o smlt3.o smlt5.o smrtsgnlxtnsn.o lexer.o sax.o dom.o cnclde.o \
  stktls.o stknst.o stkcmp.o stkvl1.o stkvl2.o stkcts.o stkkrn.o pcnst.o \
  pcnst2.o gram0.o gram1.o gram1a.o gram2.o gram3.o gram4.o gram4a.o gram5.o \
  gram6a.o gram6b.o gram6c.o gram7.o qrs.o g2frgn.o gfi-sb.o attrs.o gfi.o \
  g2-gsi.o gspan.o g2ds.o g2dsnp.o vws.o cntrls.o cmds0.o cmds1.o cmds2.o \
  vwmsg1.o vw-g2.o media.o trvs.o tlsrvr.o icons1.o icons2.o icons3.o \
  icons4.o icons5.o sock1.o sock2.o wbsvcs.o g2bpl.o g2cnfg.o player.o g2mtrs.o \
  rsrcs.o evt.o evt-g2.o java1.o java2.o java3.o syscns.o tran.o g2fnl.o \
  smlt.o StatisticalProcedures.o CountHistoryDatapoints.o \
  $(FNTDIR)/libfnt.a $(EXTDIR)/libcprim.a $(JPEGDIR)/libjpeg.a $(PNGDIR)/libpng.a \
  $(RTLDIR)/librtl.a $(XMLDIR)/liblsxml.a -lxml2 -lX11 $(SPFCDIR)/libssl.a $(SPFCDIR)/libcrypto.a -lm -ldl -lpthread -lz
	@- if [ -f current.log ]; then rm -f current.log; fi

smlt.o : $(C2DIR)/NativeKBext/smlt.c $(RTHFILES)
	@- if [ -f smlt.o ] ; then rm -f smlt.o ; fi
	@- $(SCRIPTSDIR)/errsweep smlt.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) $(C2DIR)/NativeKBext/smlt.c
	@- if [ -f current.log ]; then rm -f current.log; fi

StatisticalProcedures.o : $(C2DIR)/NativeKBext/Specific/Continental/StatisticalProcedures.c $(RTHFILES)
	@- if [ -f StatisticalProcedures.o ] ; then rm -f StatisticalProcedures.o ; fi
	@- $(SCRIPTSDIR)/errsweep StatisticalProcedures.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) $(C2DIR)/NativeKBext/Specific/Continental/StatisticalProcedures.c
	@- if [ -f current.log ]; then rm -f current.log; fi

CountHistoryDatapoints.o : $(C2DIR)/NativeKBext/Specific/SmartSignal/CountHistoryDatapoints.c $(RTHFILES)
	@- if [ -f CountHistoryDatapoints.o ] ; then rm -f CountHistoryDatapoints.o ; fi
	@- $(SCRIPTSDIR)/errsweep CountHistoryDatapoints.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) $(C2DIR)/NativeKBext/Specific/SmartSignal/CountHistoryDatapoints.c
	@- if [ -f current.log ]; then rm -f current.log; fi

actvte.o : $(CDIR)/actvte.c $(CDIR)/actvte.h $(RTHFILES)
	@- if [ -f actvte.o ] ; then rm -f actvte.o ; fi
	@- $(SCRIPTSDIR)/errsweep actvte.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) $(CDIR)/actvte.c
	@- if [ -f current.log ]; then rm -f current.log; fi

alphbt.o : $(CDIR)/alphbt.c $(CDIR)/alphbt.h $(RTHFILES)
	@- if [ -f alphbt.o ] ; then rm -f alphbt.o ; fi
	@- $(SCRIPTSDIR)/errsweep alphbt.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/alphbt.c
	@- if [ -f current.log ]; then rm -f current.log; fi

arrays.o : $(CDIR)/arrays.c $(CDIR)/arrays.h $(RTHFILES)
	@- if [ -f arrays.o ] ; then rm -f arrays.o ; fi
	@- $(SCRIPTSDIR)/errsweep arrays.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/arrays.c
	@- if [ -f current.log ]; then rm -f current.log; fi

atrxpt.o : $(CDIR)/atrxpt.c $(CDIR)/atrxpt.h $(RTHFILES)
	@- if [ -f atrxpt.o ] ; then rm -f atrxpt.o ; fi
	@- $(SCRIPTSDIR)/errsweep atrxpt.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/atrxpt.c
	@- if [ -f current.log ]; then rm -f current.log; fi

attrs.o : $(CDIR)/attrs.c $(CDIR)/attrs.h $(RTHFILES)
	@- if [ -f attrs.o ] ; then rm -f attrs.o ; fi
	@- $(SCRIPTSDIR)/errsweep attrs.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/attrs.c
	@- if [ -f current.log ]; then rm -f current.log; fi

basics.o : $(CDIR)/basics.c $(CDIR)/basics.h $(RTHFILES)
	@- if [ -f basics.o ] ; then rm -f basics.o ; fi
	@- $(SCRIPTSDIR)/errsweep basics.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/basics.c
	@- if [ -f current.log ]; then rm -f current.log; fi

books.o : $(CDIR)/books.c $(CDIR)/books.h $(RTHFILES)
	@- if [ -f books.o ] ; then rm -f books.o ; fi
	@- $(SCRIPTSDIR)/errsweep books.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/books.c
	@- if [ -f current.log ]; then rm -f current.log; fi

boxes.o : $(CDIR)/boxes.c $(CDIR)/boxes.h $(RTHFILES)
	@- if [ -f boxes.o ] ; then rm -f boxes.o ; fi
	@- $(SCRIPTSDIR)/errsweep boxes.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/boxes.c
	@- if [ -f current.log ]; then rm -f current.log; fi

btstrp.o : $(CDIR)/btstrp.c $(CDIR)/btstrp.h $(RTHFILES)
	@- if [ -f btstrp.o ] ; then rm -f btstrp.o ; fi
	@- $(SCRIPTSDIR)/errsweep btstrp.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/btstrp.c
	@- if [ -f current.log ]; then rm -f current.log; fi

cells.o : $(CDIR)/cells.c $(CDIR)/cells.h $(RTHFILES)
	@- if [ -f cells.o ] ; then rm -f cells.o ; fi
	@- $(SCRIPTSDIR)/errsweep cells.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/cells.c
	@- if [ -f current.log ]; then rm -f current.log; fi

chars.o : $(CDIR)/chars.c $(CDIR)/chars.h $(RTHFILES)
	@- if [ -f chars.o ] ; then rm -f chars.o ; fi
	@- $(SCRIPTSDIR)/errsweep chars.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/chars.c
	@- if [ -f current.log ]; then rm -f current.log; fi

chars2.o : $(CDIR)/chars2.c $(CDIR)/chars2.h $(RTHFILES)
	@- if [ -f chars2.o ] ; then rm -f chars2.o ; fi
	@- $(SCRIPTSDIR)/errsweep chars2.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/chars2.c
	@- if [ -f current.log ]; then rm -f current.log; fi

chglog.o : $(CDIR)/chglog.c $(CDIR)/chglog.h $(RTHFILES)
	@- if [ -f chglog.o ] ; then rm -f chglog.o ; fi
	@- $(SCRIPTSDIR)/errsweep chglog.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/chglog.c
	@- if [ -f current.log ]; then rm -f current.log; fi

chnng.o : $(CDIR)/chnng.c $(CDIR)/chnng.h $(RTHFILES)
	@- if [ -f chnng.o ] ; then rm -f chnng.o ; fi
	@- $(SCRIPTSDIR)/errsweep chnng.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/chnng.c
	@- if [ -f current.log ]; then rm -f current.log; fi

chrts1.o : $(CDIR)/chrts1.c $(CDIR)/chrts1.h $(RTHFILES)
	@- if [ -f chrts1.o ] ; then rm -f chrts1.o ; fi
	@- $(SCRIPTSDIR)/errsweep chrts1.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/chrts1.c
	@- if [ -f current.log ]; then rm -f current.log; fi

clocks.o : $(CDIR)/clocks.c $(CDIR)/clocks.h $(RTHFILES)
	@- if [ -f clocks.o ] ; then rm -f clocks.o ; fi
	@- $(SCRIPTSDIR)/errsweep clocks.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/clocks.c
	@- if [ -f current.log ]; then rm -f current.log; fi

cmds0.o : $(CDIR)/cmds0.c $(CDIR)/cmds0.h $(RTHFILES)
	@- if [ -f cmds0.o ] ; then rm -f cmds0.o ; fi
	@- $(SCRIPTSDIR)/errsweep cmds0.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/cmds0.c
	@- if [ -f current.log ]; then rm -f current.log; fi

cmds1.o : $(CDIR)/cmds1.c $(CDIR)/cmds1.h $(RTHFILES)
	@- if [ -f cmds1.o ] ; then rm -f cmds1.o ; fi
	@- $(SCRIPTSDIR)/errsweep cmds1.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/cmds1.c
	@- if [ -f current.log ]; then rm -f current.log; fi

cmds2.o : $(CDIR)/cmds2.c $(CDIR)/cmds2.h $(RTHFILES)
	@- if [ -f cmds2.o ] ; then rm -f cmds2.o ; fi
	@- $(SCRIPTSDIR)/errsweep cmds2.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/cmds2.c
	@- if [ -f current.log ]; then rm -f current.log; fi

cmpl1.o : $(CDIR)/cmpl1.c $(CDIR)/cmpl1.h $(RTHFILES)
	@- if [ -f cmpl1.o ] ; then rm -f cmpl1.o ; fi
	@- $(SCRIPTSDIR)/errsweep cmpl1.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/cmpl1.c
	@- if [ -f current.log ]; then rm -f current.log; fi

cmpl2.o : $(CDIR)/cmpl2.c $(CDIR)/cmpl2.h $(RTHFILES)
	@- if [ -f cmpl2.o ] ; then rm -f cmpl2.o ; fi
	@- $(SCRIPTSDIR)/errsweep cmpl2.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/cmpl2.c
	@- if [ -f current.log ]; then rm -f current.log; fi

cmptls.o : $(CDIR)/cmptls.c $(CDIR)/cmptls.h $(RTHFILES)
	@- if [ -f cmptls.o ] ; then rm -f cmptls.o ; fi
	@- $(SCRIPTSDIR)/errsweep cmptls.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/cmptls.c
	@- if [ -f current.log ]; then rm -f current.log; fi

cnclde.o : $(CDIR)/cnclde.c $(CDIR)/cnclde.h $(RTHFILES)
	@- if [ -f cnclde.o ] ; then rm -f cnclde.o ; fi
	@- $(SCRIPTSDIR)/errsweep cnclde.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/cnclde.c
	@- if [ -f current.log ]; then rm -f current.log; fi

cnct1.o : $(CDIR)/cnct1.c $(CDIR)/cnct1.h $(RTHFILES)
	@- if [ -f cnct1.o ] ; then rm -f cnct1.o ; fi
	@- $(SCRIPTSDIR)/errsweep cnct1.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/cnct1.c
	@- if [ -f current.log ]; then rm -f current.log; fi

cnct2.o : $(CDIR)/cnct2.c $(CDIR)/cnct2.h $(RTHFILES)
	@- if [ -f cnct2.o ] ; then rm -f cnct2.o ; fi
	@- $(SCRIPTSDIR)/errsweep cnct2.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/cnct2.c
	@- if [ -f current.log ]; then rm -f current.log; fi

cnct3.o : $(CDIR)/cnct3.c $(CDIR)/cnct3.h $(RTHFILES)
	@- if [ -f cnct3.o ] ; then rm -f cnct3.o ; fi
	@- $(SCRIPTSDIR)/errsweep cnct3.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/cnct3.c
	@- if [ -f current.log ]; then rm -f current.log; fi

cnct3a.o : $(CDIR)/cnct3a.c $(CDIR)/cnct3a.h $(RTHFILES)
	@- if [ -f cnct3a.o ] ; then rm -f cnct3a.o ; fi
	@- $(SCRIPTSDIR)/errsweep cnct3a.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/cnct3a.c
	@- if [ -f current.log ]; then rm -f current.log; fi

cnct4.o : $(CDIR)/cnct4.c $(CDIR)/cnct4.h $(RTHFILES)
	@- if [ -f cnct4.o ] ; then rm -f cnct4.o ; fi
	@- $(SCRIPTSDIR)/errsweep cnct4.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/cnct4.c
	@- if [ -f current.log ]; then rm -f current.log; fi

cnct5.o : $(CDIR)/cnct5.c $(CDIR)/cnct5.h $(RTHFILES)
	@- if [ -f cnct5.o ] ; then rm -f cnct5.o ; fi
	@- $(SCRIPTSDIR)/errsweep cnct5.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/cnct5.c
	@- if [ -f current.log ]; then rm -f current.log; fi

cntnntlxtnsn.o : $(CDIR)/cntnntlxtnsn.c $(CDIR)/cntnntlxtnsn.h $(RTHFILES)
	@- if [ -f cntnntlxtnsn.o ] ; then rm -f cntnntlxtnsn.o ; fi
	@- $(SCRIPTSDIR)/errsweep cntnntlxtnsn.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/cntnntlxtnsn.c
	@- if [ -f current.log ]; then rm -f current.log; fi

cntrls.o : $(CDIR)/cntrls.c $(CDIR)/cntrls.h $(RTHFILES)
	@- if [ -f cntrls.o ] ; then rm -f cntrls.o ; fi
	@- $(SCRIPTSDIR)/errsweep cntrls.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/cntrls.c
	@- if [ -f current.log ]; then rm -f current.log; fi

cycles.o : $(CDIR)/cycles.c $(CDIR)/cycles.h $(RTHFILES)
	@- if [ -f cycles.o ] ; then rm -f cycles.o ; fi
	@- $(SCRIPTSDIR)/errsweep cycles.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/cycles.c
	@- if [ -f current.log ]; then rm -f current.log; fi

debug.o : $(CDIR)/debug.c $(CDIR)/debug.h $(RTHFILES)
	@- if [ -f debug.o ] ; then rm -f debug.o ; fi
	@- $(SCRIPTSDIR)/errsweep debug.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/debug.c
	@- if [ -f current.log ]; then rm -f current.log; fi

delta.o : $(CDIR)/delta.c $(CDIR)/delta.h $(RTHFILES)
	@- if [ -f delta.o ] ; then rm -f delta.o ; fi
	@- $(SCRIPTSDIR)/errsweep delta.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/delta.c
	@- if [ -f current.log ]; then rm -f current.log; fi

dfntns.o : $(CDIR)/dfntns.c $(CDIR)/dfntns.h $(RTHFILES)
	@- if [ -f dfntns.o ] ; then rm -f dfntns.o ; fi
	@- $(SCRIPTSDIR)/errsweep dfntns.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/dfntns.c
	@- if [ -f current.log ]; then rm -f current.log; fi

dlogs.o : $(CDIR)/dlogs.c $(CDIR)/dlogs.h $(RTHFILES)
	@- if [ -f dlogs.o ] ; then rm -f dlogs.o ; fi
	@- $(SCRIPTSDIR)/errsweep dlogs.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/dlogs.c
	@- if [ -f current.log ]; then rm -f current.log; fi

dom.o : $(CDIR)/dom.c $(CDIR)/dom.h $(RTHFILES)
	@- if [ -f dom.o ] ; then rm -f dom.o ; fi
	@- $(SCRIPTSDIR)/errsweep dom.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/dom.c
	@- if [ -f current.log ]; then rm -f current.log; fi

draw.o : $(CDIR)/draw.c $(CDIR)/draw.h $(RTHFILES)
	@- if [ -f draw.o ] ; then rm -f draw.o ; fi
	@- $(SCRIPTSDIR)/errsweep draw.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/draw.c
	@- if [ -f current.log ]; then rm -f current.log; fi

dsplys.o : $(CDIR)/dsplys.c $(CDIR)/dsplys.h $(RTHFILES)
	@- if [ -f dsplys.o ] ; then rm -f dsplys.o ; fi
	@- $(SCRIPTSDIR)/errsweep dsplys.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/dsplys.c
	@- if [ -f current.log ]; then rm -f current.log; fi

edit1.o : $(CDIR)/edit1.c $(CDIR)/edit1.h $(RTHFILES)
	@- if [ -f edit1.o ] ; then rm -f edit1.o ; fi
	@- $(SCRIPTSDIR)/errsweep edit1.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/edit1.c
	@- if [ -f current.log ]; then rm -f current.log; fi

edit2.o : $(CDIR)/edit2.c $(CDIR)/edit2.h $(RTHFILES)
	@- if [ -f edit2.o ] ; then rm -f edit2.o ; fi
	@- $(SCRIPTSDIR)/errsweep edit2.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/edit2.c
	@- if [ -f current.log ]; then rm -f current.log; fi

entts.o : $(CDIR)/entts.c $(CDIR)/entts.h $(RTHFILES)
	@- if [ -f entts.o ] ; then rm -f entts.o ; fi
	@- $(SCRIPTSDIR)/errsweep entts.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/entts.c
	@- if [ -f current.log ]; then rm -f current.log; fi

eval.o : $(CDIR)/eval.c $(CDIR)/eval.h $(RTHFILES)
	@- if [ -f eval.o ] ; then rm -f eval.o ; fi
	@- $(SCRIPTSDIR)/errsweep eval.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/eval.c
	@- if [ -f current.log ]; then rm -f current.log; fi

evt.o : $(CDIR)/evt.c $(CDIR)/evt.h $(RTHFILES)
	@- if [ -f evt.o ] ; then rm -f evt.o ; fi
	@- $(SCRIPTSDIR)/errsweep evt.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/evt.c
	@- if [ -f current.log ]; then rm -f current.log; fi

evt-g2.o : $(CDIR)/evt-g2.c $(CDIR)/evt-g2.h $(RTHFILES)
	@- if [ -f evt-g2.o ] ; then rm -f evt-g2.o ; fi
	@- $(SCRIPTSDIR)/errsweep evt-g2.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/evt-g2.c
	@- if [ -f current.log ]; then rm -f current.log; fi

expln.o : $(CDIR)/expln.c $(CDIR)/expln.h $(RTHFILES)
	@- if [ -f expln.o ] ; then rm -f expln.o ; fi
	@- $(SCRIPTSDIR)/errsweep expln.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/expln.c
	@- if [ -f current.log ]; then rm -f current.log; fi

f-keys.o : $(CDIR)/f-keys.c $(CDIR)/f-keys.h $(RTHFILES)
	@- if [ -f f-keys.o ] ; then rm -f f-keys.o ; fi
	@- $(SCRIPTSDIR)/errsweep f-keys.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/f-keys.c
	@- if [ -f current.log ]; then rm -f current.log; fi

fclts.o : $(CDIR)/fclts.c $(CDIR)/fclts.h $(RTHFILES)
	@- if [ -f fclts.o ] ; then rm -f fclts.o ; fi
	@- $(SCRIPTSDIR)/errsweep fclts.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/fclts.c
	@- if [ -f current.log ]; then rm -f current.log; fi

flprse.o : $(CDIR)/flprse.c $(CDIR)/flprse.h $(RTHFILES)
	@- if [ -f flprse.o ] ; then rm -f flprse.o ; fi
	@- $(SCRIPTSDIR)/errsweep flprse.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/flprse.c
	@- if [ -f current.log ]; then rm -f current.log; fi

flsp.o : $(CDIR)/flsp.c $(CDIR)/flsp.h $(RTHFILES)
	@- if [ -f flsp.o ] ; then rm -f flsp.o ; fi
	@- $(SCRIPTSDIR)/errsweep flsp.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/flsp.c
	@- if [ -f current.log ]; then rm -f current.log; fi

fltrs.o : $(CDIR)/fltrs.c $(CDIR)/fltrs.h $(RTHFILES)
	@- if [ -f fltrs.o ] ; then rm -f fltrs.o ; fi
	@- $(SCRIPTSDIR)/errsweep fltrs.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/fltrs.c
	@- if [ -f current.log ]; then rm -f current.log; fi

fnctns.o : $(CDIR)/fnctns.c $(CDIR)/fnctns.h $(RTHFILES)
	@- if [ -f fnctns.o ] ; then rm -f fnctns.o ; fi
	@- $(SCRIPTSDIR)/errsweep fnctns.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/fnctns.c
	@- if [ -f current.log ]; then rm -f current.log; fi

fntfls.o : $(CDIR)/fntfls.c $(CDIR)/fntfls.h $(RTHFILES)
	@- if [ -f fntfls.o ] ; then rm -f fntfls.o ; fi
	@- $(SCRIPTSDIR)/errsweep fntfls.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/fntfls.c
	@- if [ -f current.log ]; then rm -f current.log; fi

fonts.o : $(CDIR)/fonts.c $(CDIR)/fonts.h $(RTHFILES)
	@- if [ -f fonts.o ] ; then rm -f fonts.o ; fi
	@- $(SCRIPTSDIR)/errsweep fonts.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/fonts.c
	@- if [ -f current.log ]; then rm -f current.log; fi

frms1.o : $(CDIR)/frms1.c $(CDIR)/frms1.h $(RTHFILES)
	@- if [ -f frms1.o ] ; then rm -f frms1.o ; fi
	@- $(SCRIPTSDIR)/errsweep frms1.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/frms1.c
	@- if [ -f current.log ]; then rm -f current.log; fi

frms2.o : $(CDIR)/frms2.c $(CDIR)/frms2.h $(RTHFILES)
	@- if [ -f frms2.o ] ; then rm -f frms2.o ; fi
	@- $(SCRIPTSDIR)/errsweep frms2.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/frms2.c
	@- if [ -f current.log ]; then rm -f current.log; fi

frms2a.o : $(CDIR)/frms2a.c $(CDIR)/frms2a.h $(RTHFILES)
	@- if [ -f frms2a.o ] ; then rm -f frms2a.o ; fi
	@- $(SCRIPTSDIR)/errsweep frms2a.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/frms2a.c
	@- if [ -f current.log ]; then rm -f current.log; fi

frms2b.o : $(CDIR)/frms2b.c $(CDIR)/frms2b.h $(RTHFILES)
	@- if [ -f frms2b.o ] ; then rm -f frms2b.o ; fi
	@- $(SCRIPTSDIR)/errsweep frms2b.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/frms2b.c
	@- if [ -f current.log ]; then rm -f current.log; fi

frms3.o : $(CDIR)/frms3.c $(CDIR)/frms3.h $(RTHFILES)
	@- if [ -f frms3.o ] ; then rm -f frms3.o ; fi
	@- $(SCRIPTSDIR)/errsweep frms3.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/frms3.c
	@- if [ -f current.log ]; then rm -f current.log; fi

frms4.o : $(CDIR)/frms4.c $(CDIR)/frms4.h $(RTHFILES)
	@- if [ -f frms4.o ] ; then rm -f frms4.o ; fi
	@- $(SCRIPTSDIR)/errsweep frms4.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/frms4.c
	@- if [ -f current.log ]; then rm -f current.log; fi

frms5.o : $(CDIR)/frms5.c $(CDIR)/frms5.h $(RTHFILES)
	@- if [ -f frms5.o ] ; then rm -f frms5.o ; fi
	@- $(SCRIPTSDIR)/errsweep frms5.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/frms5.c
	@- if [ -f current.log ]; then rm -f current.log; fi

frmts.o : $(CDIR)/frmts.c $(CDIR)/frmts.h $(RTHFILES)
	@- if [ -f frmts.o ] ; then rm -f frmts.o ; fi
	@- $(SCRIPTSDIR)/errsweep frmts.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/frmts.c
	@- if [ -f current.log ]; then rm -f current.log; fi

g2-gsi.o : $(CDIR)/g2-gsi.c $(CDIR)/g2-gsi.h $(RTHFILES)
	@- if [ -f g2-gsi.o ] ; then rm -f g2-gsi.o ; fi
	@- $(SCRIPTSDIR)/errsweep g2-gsi.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/g2-gsi.c
	@- if [ -f current.log ]; then rm -f current.log; fi

g2bpl.o : $(CDIR)/g2bpl.c $(CDIR)/g2bpl.h $(RTHFILES)
	@- if [ -f g2bpl.o ] ; then rm -f g2bpl.o ; fi
	@- $(SCRIPTSDIR)/errsweep g2bpl.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/g2bpl.c
	@- if [ -f current.log ]; then rm -f current.log; fi

g2cnfg.o : $(CDIR)/g2cnfg.c $(CDIR)/g2cnfg.h $(RTHFILES)
	@- if [ -f g2cnfg.o ] ; then rm -f g2cnfg.o ; fi
	@- $(SCRIPTSDIR)/errsweep g2cnfg.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/g2cnfg.c
	@- if [ -f current.log ]; then rm -f current.log; fi

g2ds.o : $(CDIR)/g2ds.c $(CDIR)/g2ds.h $(RTHFILES)
	@- if [ -f g2ds.o ] ; then rm -f g2ds.o ; fi
	@- $(SCRIPTSDIR)/errsweep g2ds.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/g2ds.c
	@- if [ -f current.log ]; then rm -f current.log; fi

g2dsnp.o : $(CDIR)/g2dsnp.c $(CDIR)/g2dsnp.h $(RTHFILES)
	@- if [ -f g2dsnp.o ] ; then rm -f g2dsnp.o ; fi
	@- $(SCRIPTSDIR)/errsweep g2dsnp.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/g2dsnp.c
	@- if [ -f current.log ]; then rm -f current.log; fi

g2fnl.o : $(CDIR)/g2fnl.c $(CDIR)/g2fnl.h $(RTHFILES)
	@- if [ -f g2fnl.o ] ; then rm -f g2fnl.o ; fi
	@- $(SCRIPTSDIR)/errsweep g2fnl.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/g2fnl.c
	@- if [ -f current.log ]; then rm -f current.log; fi

g2frgn.o : $(CDIR)/g2frgn.c $(CDIR)/g2frgn.h $(RTHFILES)
	@- if [ -f g2frgn.o ] ; then rm -f g2frgn.o ; fi
	@- $(SCRIPTSDIR)/errsweep g2frgn.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/g2frgn.c
	@- if [ -f current.log ]; then rm -f current.log; fi

g2mtrs.o : $(CDIR)/g2mtrs.c $(CDIR)/g2mtrs.h $(RTHFILES)
	@- if [ -f g2mtrs.o ] ; then rm -f g2mtrs.o ; fi
	@- $(SCRIPTSDIR)/errsweep g2mtrs.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/g2mtrs.c
	@- if [ -f current.log ]; then rm -f current.log; fi

g2pts.o : $(CDIR)/g2pts.c $(CDIR)/g2pts.h $(RTHFILES)
	@- if [ -f g2pts.o ] ; then rm -f g2pts.o ; fi
	@- $(SCRIPTSDIR)/errsweep g2pts.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/g2pts.c
	@- if [ -f current.log ]; then rm -f current.log; fi

g2rpc1.o : $(CDIR)/g2rpc1.c $(CDIR)/g2rpc1.h $(RTHFILES)
	@- if [ -f g2rpc1.o ] ; then rm -f g2rpc1.o ; fi
	@- $(SCRIPTSDIR)/errsweep g2rpc1.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/g2rpc1.c
	@- if [ -f current.log ]; then rm -f current.log; fi

g2rpc2.o : $(CDIR)/g2rpc2.c $(CDIR)/g2rpc2.h $(RTHFILES)
	@- if [ -f g2rpc2.o ] ; then rm -f g2rpc2.o ; fi
	@- $(SCRIPTSDIR)/errsweep g2rpc2.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/g2rpc2.c
	@- if [ -f current.log ]; then rm -f current.log; fi

g2rpc3.o : $(CDIR)/g2rpc3.c $(CDIR)/g2rpc3.h $(RTHFILES)
	@- if [ -f g2rpc3.o ] ; then rm -f g2rpc3.o ; fi
	@- $(SCRIPTSDIR)/errsweep g2rpc3.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/g2rpc3.c
	@- if [ -f current.log ]; then rm -f current.log; fi

gbmap.o : $(CDIR)/gbmap.c $(CDIR)/gbmap.h $(RTHFILES)
	@- if [ -f gbmap.o ] ; then rm -f gbmap.o ; fi
	@- $(SCRIPTSDIR)/errsweep gbmap.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/gbmap.c
	@- if [ -f current.log ]; then rm -f current.log; fi

gbmapr.o : $(CDIR)/gbmapr.c $(CDIR)/gbmapr.h $(RTHFILES)
	@- if [ -f gbmapr.o ] ; then rm -f gbmapr.o ; fi
	@- $(SCRIPTSDIR)/errsweep gbmapr.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/gbmapr.c
	@- if [ -f current.log ]; then rm -f current.log; fi

gfi.o : $(CDIR)/gfi.c $(CDIR)/gfi.h $(RTHFILES)
	@- if [ -f gfi.o ] ; then rm -f gfi.o ; fi
	@- $(SCRIPTSDIR)/errsweep gfi.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/gfi.c
	@- if [ -f current.log ]; then rm -f current.log; fi

gfi-sb.o : $(CDIR)/gfi-sb.c $(CDIR)/gfi-sb.h $(RTHFILES)
	@- if [ -f gfi-sb.o ] ; then rm -f gfi-sb.o ; fi
	@- $(SCRIPTSDIR)/errsweep gfi-sb.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/gfi-sb.c
	@- if [ -f current.log ]; then rm -f current.log; fi

glbscs.o : $(CDIR)/glbscs.c $(CDIR)/glbscs.h $(RTHFILES)
	@- if [ -f glbscs.o ] ; then rm -f glbscs.o ; fi
	@- $(SCRIPTSDIR)/errsweep glbscs.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/glbscs.c
	@- if [ -f current.log ]; then rm -f current.log; fi

gram0.o : $(CDIR)/gram0.c $(CDIR)/gram0.h $(RTHFILES)
	@- if [ -f gram0.o ] ; then rm -f gram0.o ; fi
	@- $(SCRIPTSDIR)/errsweep gram0.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/gram0.c
	@- if [ -f current.log ]; then rm -f current.log; fi

gram1.o : $(CDIR)/gram1.c $(CDIR)/gram1.h $(RTHFILES)
	@- if [ -f gram1.o ] ; then rm -f gram1.o ; fi
	@- $(SCRIPTSDIR)/errsweep gram1.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/gram1.c
	@- if [ -f current.log ]; then rm -f current.log; fi

gram1a.o : $(CDIR)/gram1a.c $(CDIR)/gram1a.h $(RTHFILES)
	@- if [ -f gram1a.o ] ; then rm -f gram1a.o ; fi
	@- $(SCRIPTSDIR)/errsweep gram1a.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/gram1a.c
	@- if [ -f current.log ]; then rm -f current.log; fi

gram2.o : $(CDIR)/gram2.c $(CDIR)/gram2.h $(RTHFILES)
	@- if [ -f gram2.o ] ; then rm -f gram2.o ; fi
	@- $(SCRIPTSDIR)/errsweep gram2.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/gram2.c
	@- if [ -f current.log ]; then rm -f current.log; fi

gram3.o : $(CDIR)/gram3.c $(CDIR)/gram3.h $(RTHFILES)
	@- if [ -f gram3.o ] ; then rm -f gram3.o ; fi
	@- $(SCRIPTSDIR)/errsweep gram3.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/gram3.c
	@- if [ -f current.log ]; then rm -f current.log; fi

gram4.o : $(CDIR)/gram4.c $(CDIR)/gram4.h $(RTHFILES)
	@- if [ -f gram4.o ] ; then rm -f gram4.o ; fi
	@- $(SCRIPTSDIR)/errsweep gram4.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/gram4.c
	@- if [ -f current.log ]; then rm -f current.log; fi

gram4a.o : $(CDIR)/gram4a.c $(CDIR)/gram4a.h $(RTHFILES)
	@- if [ -f gram4a.o ] ; then rm -f gram4a.o ; fi
	@- $(SCRIPTSDIR)/errsweep gram4a.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/gram4a.c
	@- if [ -f current.log ]; then rm -f current.log; fi

gram5.o : $(CDIR)/gram5.c $(CDIR)/gram5.h $(RTHFILES)
	@- if [ -f gram5.o ] ; then rm -f gram5.o ; fi
	@- $(SCRIPTSDIR)/errsweep gram5.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/gram5.c
	@- if [ -f current.log ]; then rm -f current.log; fi

gram6a.o : $(CDIR)/gram6a.c $(CDIR)/gram6a.h $(RTHFILES)
	@- if [ -f gram6a.o ] ; then rm -f gram6a.o ; fi
	@- $(SCRIPTSDIR)/errsweep gram6a.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/gram6a.c
	@- if [ -f current.log ]; then rm -f current.log; fi

gram6b.o : $(CDIR)/gram6b.c $(CDIR)/gram6b.h $(RTHFILES)
	@- if [ -f gram6b.o ] ; then rm -f gram6b.o ; fi
	@- $(SCRIPTSDIR)/errsweep gram6b.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/gram6b.c
	@- if [ -f current.log ]; then rm -f current.log; fi

gram6c.o : $(CDIR)/gram6c.c $(CDIR)/gram6c.h $(RTHFILES)
	@- if [ -f gram6c.o ] ; then rm -f gram6c.o ; fi
	@- $(SCRIPTSDIR)/errsweep gram6c.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/gram6c.c
	@- if [ -f current.log ]; then rm -f current.log; fi

gram7.o : $(CDIR)/gram7.c $(CDIR)/gram7.h $(RTHFILES)
	@- if [ -f gram7.o ] ; then rm -f gram7.o ; fi
	@- $(SCRIPTSDIR)/errsweep gram7.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/gram7.c
	@- if [ -f current.log ]; then rm -f current.log; fi

graphs.o : $(CDIR)/graphs.c $(CDIR)/graphs.h $(RTHFILES)
	@- if [ -f graphs.o ] ; then rm -f graphs.o ; fi
	@- $(SCRIPTSDIR)/errsweep graphs.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/graphs.c
	@- if [ -f current.log ]; then rm -f current.log; fi

grphdf.o : $(CDIR)/grphdf.c $(CDIR)/grphdf.h $(RTHFILES)
	@- if [ -f grphdf.o ] ; then rm -f grphdf.o ; fi
	@- $(SCRIPTSDIR)/errsweep grphdf.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/grphdf.c
	@- if [ -f current.log ]; then rm -f current.log; fi

grphs1.o : $(CDIR)/grphs1.c $(CDIR)/grphs1.h $(RTHFILES)
	@- if [ -f grphs1.o ] ; then rm -f grphs1.o ; fi
	@- $(SCRIPTSDIR)/errsweep grphs1.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/grphs1.c
	@- if [ -f current.log ]; then rm -f current.log; fi

grphs2.o : $(CDIR)/grphs2.c $(CDIR)/grphs2.h $(RTHFILES)
	@- if [ -f grphs2.o ] ; then rm -f grphs2.o ; fi
	@- $(SCRIPTSDIR)/errsweep grphs2.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/grphs2.c
	@- if [ -f current.log ]; then rm -f current.log; fi

grphtl.o : $(CDIR)/grphtl.c $(CDIR)/grphtl.h $(RTHFILES)
	@- if [ -f grphtl.o ] ; then rm -f grphtl.o ; fi
	@- $(SCRIPTSDIR)/errsweep grphtl.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/grphtl.c
	@- if [ -f current.log ]; then rm -f current.log; fi

gscmn.o : $(CDIR)/gscmn.c $(CDIR)/gscmn.h $(RTHFILES)
	@- if [ -f gscmn.o ] ; then rm -f gscmn.o ; fi
	@- $(SCRIPTSDIR)/errsweep gscmn.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/gscmn.c
	@- if [ -f current.log ]; then rm -f current.log; fi

gspan.o : $(CDIR)/gspan.c $(CDIR)/gspan.h $(RTHFILES)
	@- if [ -f gspan.o ] ; then rm -f gspan.o ; fi
	@- $(SCRIPTSDIR)/errsweep gspan.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/gspan.c
	@- if [ -f current.log ]; then rm -f current.log; fi

hb72.o : $(CDIR)/hb72.c $(CDIR)/hb72.h $(RTHFILES)
	@- if [ -f hb72.o ] ; then rm -f hb72.o ; fi
	@- $(SCRIPTSDIR)/errsweep hb72.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/hb72.c
	@- if [ -f current.log ]; then rm -f current.log; fi

hbrw14.o : $(CDIR)/hbrw14.c $(CDIR)/hbrw14.h $(RTHFILES)
	@- if [ -f hbrw14.o ] ; then rm -f hbrw14.o ; fi
	@- $(SCRIPTSDIR)/errsweep hbrw14.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/hbrw14.c
	@- if [ -f current.log ]; then rm -f current.log; fi

hbrw18.o : $(CDIR)/hbrw18.c $(CDIR)/hbrw18.h $(RTHFILES)
	@- if [ -f hbrw18.o ] ; then rm -f hbrw18.o ; fi
	@- $(SCRIPTSDIR)/errsweep hbrw18.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/hbrw18.c
	@- if [ -f current.log ]; then rm -f current.log; fi

hbrw24.o : $(CDIR)/hbrw24.c $(CDIR)/hbrw24.h $(RTHFILES)
	@- if [ -f hbrw24.o ] ; then rm -f hbrw24.o ; fi
	@- $(SCRIPTSDIR)/errsweep hbrw24.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/hbrw24.c
	@- if [ -f current.log ]; then rm -f current.log; fi

hfep1.o : $(CDIR)/hfep1.c $(CDIR)/hfep1.h $(RTHFILES)
	@- if [ -f hfep1.o ] ; then rm -f hfep1.o ; fi
	@- $(SCRIPTSDIR)/errsweep hfep1.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/hfep1.c
	@- if [ -f current.log ]; then rm -f current.log; fi

hfep2.o : $(CDIR)/hfep2.c $(CDIR)/hfep2.h $(RTHFILES)
	@- if [ -f hfep2.o ] ; then rm -f hfep2.o ; fi
	@- $(SCRIPTSDIR)/errsweep hfep2.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/hfep2.c
	@- if [ -f current.log ]; then rm -f current.log; fi

hm14.o : $(CDIR)/hm14.c $(CDIR)/hm14.h $(RTHFILES)
	@- if [ -f hm14.o ] ; then rm -f hm14.o ; fi
	@- $(SCRIPTSDIR)/errsweep hm14.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/hm14.c
	@- if [ -f current.log ]; then rm -f current.log; fi

hm18.o : $(CDIR)/hm18.c $(CDIR)/hm18.h $(RTHFILES)
	@- if [ -f hm18.o ] ; then rm -f hm18.o ; fi
	@- $(SCRIPTSDIR)/errsweep hm18.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/hm18.c
	@- if [ -f current.log ]; then rm -f current.log; fi

hm24.o : $(CDIR)/hm24.c $(CDIR)/hm24.h $(RTHFILES)
	@- if [ -f hm24.o ] ; then rm -f hm24.o ; fi
	@- $(SCRIPTSDIR)/errsweep hm24.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/hm24.c
	@- if [ -f current.log ]; then rm -f current.log; fi

hshtbl.o : $(CDIR)/hshtbl.c $(CDIR)/hshtbl.h $(RTHFILES)
	@- if [ -f hshtbl.o ] ; then rm -f hshtbl.o ; fi
	@- $(SCRIPTSDIR)/errsweep hshtbl.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/hshtbl.c
	@- if [ -f current.log ]; then rm -f current.log; fi

hstrs.o : $(CDIR)/hstrs.c $(CDIR)/hstrs.h $(RTHFILES)
	@- if [ -f hstrs.o ] ; then rm -f hstrs.o ; fi
	@- $(SCRIPTSDIR)/errsweep hstrs.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/hstrs.c
	@- if [ -f current.log ]; then rm -f current.log; fi

icons.o : $(CDIR)/icons.c $(CDIR)/icons.h $(RTHFILES)
	@- if [ -f icons.o ] ; then rm -f icons.o ; fi
	@- $(SCRIPTSDIR)/errsweep icons.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/icons.c
	@- if [ -f current.log ]; then rm -f current.log; fi

icons1.o : $(CDIR)/icons1.c $(CDIR)/icons1.h $(RTHFILES)
	@- if [ -f icons1.o ] ; then rm -f icons1.o ; fi
	@- $(SCRIPTSDIR)/errsweep icons1.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/icons1.c
	@- if [ -f current.log ]; then rm -f current.log; fi

icons2.o : $(CDIR)/icons2.c $(CDIR)/icons2.h $(RTHFILES)
	@- if [ -f icons2.o ] ; then rm -f icons2.o ; fi
	@- $(SCRIPTSDIR)/errsweep icons2.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/icons2.c
	@- if [ -f current.log ]; then rm -f current.log; fi

icons3.o : $(CDIR)/icons3.c $(CDIR)/icons3.h $(RTHFILES)
	@- if [ -f icons3.o ] ; then rm -f icons3.o ; fi
	@- $(SCRIPTSDIR)/errsweep icons3.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/icons3.c
	@- if [ -f current.log ]; then rm -f current.log; fi

icons4.o : $(CDIR)/icons4.c $(CDIR)/icons4.h $(RTHFILES)
	@- if [ -f icons4.o ] ; then rm -f icons4.o ; fi
	@- $(SCRIPTSDIR)/errsweep icons4.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/icons4.c
	@- if [ -f current.log ]; then rm -f current.log; fi

icons5.o : $(CDIR)/icons5.c $(CDIR)/icons5.h $(RTHFILES)
	@- if [ -f icons5.o ] ; then rm -f icons5.o ; fi
	@- $(SCRIPTSDIR)/errsweep icons5.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/icons5.c
	@- if [ -f current.log ]; then rm -f current.log; fi

instll.o : $(CDIR)/instll.c $(CDIR)/instll.h $(RTHFILES)
	@- if [ -f instll.o ] ; then rm -f instll.o ; fi
	@- $(SCRIPTSDIR)/errsweep instll.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/instll.c
	@- if [ -f current.log ]; then rm -f current.log; fi

int0.o : $(CDIR)/int0.c $(CDIR)/int0.h $(RTHFILES)
	@- if [ -f int0.o ] ; then rm -f int0.o ; fi
	@- $(SCRIPTSDIR)/errsweep int0.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/int0.c
	@- if [ -f current.log ]; then rm -f current.log; fi

int1.o : $(CDIR)/int1.c $(CDIR)/int1.h $(RTHFILES)
	@- if [ -f int1.o ] ; then rm -f int1.o ; fi
	@- $(SCRIPTSDIR)/errsweep int1.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/int1.c
	@- if [ -f current.log ]; then rm -f current.log; fi

int2.o : $(CDIR)/int2.c $(CDIR)/int2.h $(RTHFILES)
	@- if [ -f int2.o ] ; then rm -f int2.o ; fi
	@- $(SCRIPTSDIR)/errsweep int2.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/int2.c
	@- if [ -f current.log ]; then rm -f current.log; fi

int3a.o : $(CDIR)/int3a.c $(CDIR)/int3a.h $(RTHFILES)
	@- if [ -f int3a.o ] ; then rm -f int3a.o ; fi
	@- $(SCRIPTSDIR)/errsweep int3a.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/int3a.c
	@- if [ -f current.log ]; then rm -f current.log; fi

int3b.o : $(CDIR)/int3b.c $(CDIR)/int3b.h $(RTHFILES)
	@- if [ -f int3b.o ] ; then rm -f int3b.o ; fi
	@- $(SCRIPTSDIR)/errsweep int3b.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/int3b.c
	@- if [ -f current.log ]; then rm -f current.log; fi

int4.o : $(CDIR)/int4.c $(CDIR)/int4.h $(RTHFILES)
	@- if [ -f int4.o ] ; then rm -f int4.o ; fi
	@- $(SCRIPTSDIR)/errsweep int4.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/int4.c
	@- if [ -f current.log ]; then rm -f current.log; fi

intrp.o : $(CDIR)/intrp.c $(CDIR)/intrp.h $(RTHFILES)
	@- if [ -f intrp.o ] ; then rm -f intrp.o ; fi
	@- $(SCRIPTSDIR)/errsweep intrp.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/intrp.c
	@- if [ -f current.log ]; then rm -f current.log; fi

is2022.o : $(CDIR)/is2022.c $(CDIR)/is2022.h $(RTHFILES)
	@- if [ -f is2022.o ] ; then rm -f is2022.o ; fi
	@- $(SCRIPTSDIR)/errsweep is2022.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/is2022.c
	@- if [ -f current.log ]; then rm -f current.log; fi

is8859.o : $(CDIR)/is8859.c $(CDIR)/is8859.h $(RTHFILES)
	@- if [ -f is8859.o ] ; then rm -f is8859.o ; fi
	@- $(SCRIPTSDIR)/errsweep is8859.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/is8859.c
	@- if [ -f current.log ]; then rm -f current.log; fi

java1.o : $(CDIR)/java1.c $(CDIR)/java1.h $(RTHFILES)
	@- if [ -f java1.o ] ; then rm -f java1.o ; fi
	@- $(SCRIPTSDIR)/errsweep java1.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/java1.c
	@- if [ -f current.log ]; then rm -f current.log; fi

java2.o : $(CDIR)/java2.c $(CDIR)/java2.h $(RTHFILES)
	@- if [ -f java2.o ] ; then rm -f java2.o ; fi
	@- $(SCRIPTSDIR)/errsweep java2.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/java2.c
	@- if [ -f current.log ]; then rm -f current.log; fi

java3.o : $(CDIR)/java3.c $(CDIR)/java3.h $(RTHFILES)
	@- if [ -f java3.o ] ; then rm -f java3.o ; fi
	@- $(SCRIPTSDIR)/errsweep java3.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/java3.c
	@- if [ -f current.log ]; then rm -f current.log; fi

jismap.o : $(CDIR)/jismap.c $(CDIR)/jismap.h $(RTHFILES)
	@- if [ -f jismap.o ] ; then rm -f jismap.o ; fi
	@- $(SCRIPTSDIR)/errsweep jismap.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/jismap.c
	@- if [ -f current.log ]; then rm -f current.log; fi

kbld1.o : $(CDIR)/kbld1.c $(CDIR)/kbld1.h $(RTHFILES)
	@- if [ -f kbld1.o ] ; then rm -f kbld1.o ; fi
	@- $(SCRIPTSDIR)/errsweep kbld1.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/kbld1.c
	@- if [ -f current.log ]; then rm -f current.log; fi

kbld2.o : $(CDIR)/kbld2.c $(CDIR)/kbld2.h $(RTHFILES)
	@- if [ -f kbld2.o ] ; then rm -f kbld2.o ; fi
	@- $(SCRIPTSDIR)/errsweep kbld2.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/kbld2.c
	@- if [ -f current.log ]; then rm -f current.log; fi

kbmrge.o : $(CDIR)/kbmrge.c $(CDIR)/kbmrge.h $(RTHFILES)
	@- if [ -f kbmrge.o ] ; then rm -f kbmrge.o ; fi
	@- $(SCRIPTSDIR)/errsweep kbmrge.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/kbmrge.c
	@- if [ -f current.log ]; then rm -f current.log; fi

kbsv1.o : $(CDIR)/kbsv1.c $(CDIR)/kbsv1.h $(RTHFILES)
	@- if [ -f kbsv1.o ] ; then rm -f kbsv1.o ; fi
	@- $(SCRIPTSDIR)/errsweep kbsv1.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/kbsv1.c
	@- if [ -f current.log ]; then rm -f current.log; fi

kbsv2.o : $(CDIR)/kbsv2.c $(CDIR)/kbsv2.h $(RTHFILES)
	@- if [ -f kbsv2.o ] ; then rm -f kbsv2.o ; fi
	@- $(SCRIPTSDIR)/errsweep kbsv2.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/kbsv2.c
	@- if [ -f current.log ]; then rm -f current.log; fi

kbsv3.o : $(CDIR)/kbsv3.c $(CDIR)/kbsv3.h $(RTHFILES)
	@- if [ -f kbsv3.o ] ; then rm -f kbsv3.o ; fi
	@- $(SCRIPTSDIR)/errsweep kbsv3.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/kbsv3.c
	@- if [ -f current.log ]; then rm -f current.log; fi

kbsv4.o : $(CDIR)/kbsv4.c $(CDIR)/kbsv4.h $(RTHFILES)
	@- if [ -f kbsv4.o ] ; then rm -f kbsv4.o ; fi
	@- $(SCRIPTSDIR)/errsweep kbsv4.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/kbsv4.c
	@- if [ -f current.log ]; then rm -f current.log; fi

kfep1.o : $(CDIR)/kfep1.c $(CDIR)/kfep1.h $(RTHFILES)
	@- if [ -f kfep1.o ] ; then rm -f kfep1.o ; fi
	@- $(SCRIPTSDIR)/errsweep kfep1.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/kfep1.c
	@- if [ -f current.log ]; then rm -f current.log; fi

kfep2.o : $(CDIR)/kfep2.c $(CDIR)/kfep2.h $(RTHFILES)
	@- if [ -f kfep2.o ] ; then rm -f kfep2.o ; fi
	@- $(SCRIPTSDIR)/errsweep kfep2.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/kfep2.c
	@- if [ -f current.log ]; then rm -f current.log; fi

kfep3.o : $(CDIR)/kfep3.c $(CDIR)/kfep3.h $(RTHFILES)
	@- if [ -f kfep3.o ] ; then rm -f kfep3.o ; fi
	@- $(SCRIPTSDIR)/errsweep kfep3.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/kfep3.c
	@- if [ -f current.log ]; then rm -f current.log; fi

ksmap2.o : $(CDIR)/ksmap2.c $(CDIR)/ksmap2.h $(RTHFILES)
	@- if [ -f ksmap2.o ] ; then rm -f ksmap2.o ; fi
	@- $(SCRIPTSDIR)/errsweep ksmap2.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/ksmap2.c
	@- if [ -f current.log ]; then rm -f current.log; fi

kybrds.o : $(CDIR)/kybrds.c $(CDIR)/kybrds.h $(RTHFILES)
	@- if [ -f kybrds.o ] ; then rm -f kybrds.o ; fi
	@- $(SCRIPTSDIR)/errsweep kybrds.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/kybrds.c
	@- if [ -f current.log ]; then rm -f current.log; fi

kydfs.o : $(CDIR)/kydfs.c $(CDIR)/kydfs.h $(RTHFILES)
	@- if [ -f kydfs.o ] ; then rm -f kydfs.o ; fi
	@- $(SCRIPTSDIR)/errsweep kydfs.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/kydfs.c
	@- if [ -f current.log ]; then rm -f current.log; fi

launch.o : $(CDIR)/launch.c $(CDIR)/launch.h $(RTHFILES)
	@- if [ -f launch.o ] ; then rm -f launch.o ; fi
	@- $(SCRIPTSDIR)/errsweep launch.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/launch.c
	@- if [ -f current.log ]; then rm -f current.log; fi

lexer.o : $(CDIR)/lexer.c $(CDIR)/lexer.h $(RTHFILES)
	@- if [ -f lexer.o ] ; then rm -f lexer.o ; fi
	@- $(SCRIPTSDIR)/errsweep lexer.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/lexer.c
	@- if [ -f current.log ]; then rm -f current.log; fi

lists.o : $(CDIR)/lists.c $(CDIR)/lists.h $(RTHFILES)
	@- if [ -f lists.o ] ; then rm -f lists.o ; fi
	@- $(SCRIPTSDIR)/errsweep lists.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/lists.c
	@- if [ -f current.log ]; then rm -f current.log; fi

lngge.o : $(CDIR)/lngge.c $(CDIR)/lngge.h $(RTHFILES)
	@- if [ -f lngge.o ] ; then rm -f lngge.o ; fi
	@- $(SCRIPTSDIR)/errsweep lngge.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/lngge.c
	@- if [ -f current.log ]; then rm -f current.log; fi

load.o : $(CDIR)/load.c $(CDIR)/load.h $(RTHFILES)
	@- if [ -f load.o ] ; then rm -f load.o ; fi
	@- $(SCRIPTSDIR)/errsweep load.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/load.c
	@- if [ -f current.log ]; then rm -f current.log; fi

loop.o : $(CDIR)/loop.c $(CDIR)/loop.h $(RTHFILES)
	@- if [ -f loop.o ] ; then rm -f loop.o ; fi
	@- $(SCRIPTSDIR)/errsweep loop.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/loop.c
	@- if [ -f current.log ]; then rm -f current.log; fi

lspimg.o : $(CDIR)/lspimg.c $(CDIR)/lspimg.h $(RTHFILES)
	@- if [ -f lspimg.o ] ; then rm -f lspimg.o ; fi
	@- $(SCRIPTSDIR)/errsweep lspimg.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/lspimg.c
	@- if [ -f current.log ]; then rm -f current.log; fi

lttrs.o : $(CDIR)/lttrs.c $(CDIR)/lttrs.h $(RTHFILES)
	@- if [ -f lttrs.o ] ; then rm -f lttrs.o ; fi
	@- $(SCRIPTSDIR)/errsweep lttrs.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/lttrs.c
	@- if [ -f current.log ]; then rm -f current.log; fi

main.o : $(CDIR)/main.c $(CDIR)/main.h $(RTHFILES)
	@- if [ -f main.o ] ; then rm -f main.o ; fi
	@- $(SCRIPTSDIR)/errsweep main.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/main.c
	@- if [ -f current.log ]; then rm -f current.log; fi

media.o : $(CDIR)/media.c $(CDIR)/media.h $(RTHFILES)
	@- if [ -f media.o ] ; then rm -f media.o ; fi
	@- $(SCRIPTSDIR)/errsweep media.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/media.c
	@- if [ -f current.log ]; then rm -f current.log; fi

mem-sp.o : $(CDIR)/mem-sp.c $(CDIR)/mem-sp.h $(RTHFILES)
	@- if [ -f mem-sp.o ] ; then rm -f mem-sp.o ; fi
	@- $(SCRIPTSDIR)/errsweep mem-sp.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/mem-sp.c
	@- if [ -f current.log ]; then rm -f current.log; fi

menus.o : $(CDIR)/menus.c $(CDIR)/menus.h $(RTHFILES)
	@- if [ -f menus.o ] ; then rm -f menus.o ; fi
	@- $(SCRIPTSDIR)/errsweep menus.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/menus.c
	@- if [ -f current.log ]; then rm -f current.log; fi

mice.o : $(CDIR)/mice.c $(CDIR)/mice.h $(RTHFILES)
	@- if [ -f mice.o ] ; then rm -f mice.o ; fi
	@- $(SCRIPTSDIR)/errsweep mice.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/mice.c
	@- if [ -f current.log ]; then rm -f current.log; fi

mods.o : $(CDIR)/mods.c $(CDIR)/mods.h $(RTHFILES)
	@- if [ -f mods.o ] ; then rm -f mods.o ; fi
	@- $(SCRIPTSDIR)/errsweep mods.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/mods.c
	@- if [ -f current.log ]; then rm -f current.log; fi

moves.o : $(CDIR)/moves.c $(CDIR)/moves.h $(RTHFILES)
	@- if [ -f moves.o ] ; then rm -f moves.o ; fi
	@- $(SCRIPTSDIR)/errsweep moves.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/moves.c
	@- if [ -f current.log ]; then rm -f current.log; fi

names.o : $(CDIR)/names.c $(CDIR)/names.h $(RTHFILES)
	@- if [ -f names.o ] ; then rm -f names.o ; fi
	@- $(SCRIPTSDIR)/errsweep names.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/names.c
	@- if [ -f current.log ]; then rm -f current.log; fi

natvtw.o : $(CDIR)/natvtw.c $(CDIR)/natvtw.h $(RTHFILES)
	@- if [ -f natvtw.o ] ; then rm -f natvtw.o ; fi
	@- $(SCRIPTSDIR)/errsweep natvtw.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/natvtw.c
	@- if [ -f current.log ]; then rm -f current.log; fi

ntrrr.o : $(CDIR)/ntrrr.c $(CDIR)/ntrrr.h $(RTHFILES)
	@- if [ -f ntrrr.o ] ; then rm -f ntrrr.o ; fi
	@- $(SCRIPTSDIR)/errsweep ntrrr.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/ntrrr.c
	@- if [ -f current.log ]; then rm -f current.log; fi

ntvnt.o : $(CDIR)/ntvnt.c $(CDIR)/ntvnt.h $(RTHFILES)
	@- if [ -f ntvnt.o ] ; then rm -f ntvnt.o ; fi
	@- $(SCRIPTSDIR)/errsweep ntvnt.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/ntvnt.c
	@- if [ -f current.log ]; then rm -f current.log; fi

ntwrks.o : $(CDIR)/ntwrks.c $(CDIR)/ntwrks.h $(RTHFILES)
	@- if [ -f ntwrks.o ] ; then rm -f ntwrks.o ; fi
	@- $(SCRIPTSDIR)/errsweep ntwrks.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/ntwrks.c
	@- if [ -f current.log ]; then rm -f current.log; fi

nwmns.o : $(CDIR)/nwmns.c $(CDIR)/nwmns.h $(RTHFILES)
	@- if [ -f nwmns.o ] ; then rm -f nwmns.o ; fi
	@- $(SCRIPTSDIR)/errsweep nwmns.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/nwmns.c
	@- if [ -f current.log ]; then rm -f current.log; fi

nwrls.o : $(CDIR)/nwrls.c $(CDIR)/nwrls.h $(RTHFILES)
	@- if [ -f nwrls.o ] ; then rm -f nwrls.o ; fi
	@- $(SCRIPTSDIR)/errsweep nwrls.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/nwrls.c
	@- if [ -f current.log ]; then rm -f current.log; fi

nwtbls.o : $(CDIR)/nwtbls.c $(CDIR)/nwtbls.h $(RTHFILES)
	@- if [ -f nwtbls.o ] ; then rm -f nwtbls.o ; fi
	@- $(SCRIPTSDIR)/errsweep nwtbls.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/nwtbls.c
	@- if [ -f current.log ]; then rm -f current.log; fi

os-mem.o : $(CDIR)/os-mem.c $(CDIR)/os-mem.h $(RTHFILES)
	@- if [ -f os-mem.o ] ; then rm -f os-mem.o ; fi
	@- $(SCRIPTSDIR)/errsweep os-mem.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/os-mem.c
	@- if [ -f current.log ]; then rm -f current.log; fi

os-set.o : $(CDIR)/os-set.c $(CDIR)/os-set.h $(RTHFILES)
	@- if [ -f os-set.o ] ; then rm -f os-set.o ; fi
	@- $(SCRIPTSDIR)/errsweep os-set.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/os-set.c
	@- if [ -f current.log ]; then rm -f current.log; fi

osfrgn.o : $(CDIR)/osfrgn.c $(CDIR)/osfrgn.h $(RTHFILES)
	@- if [ -f osfrgn.o ] ; then rm -f osfrgn.o ; fi
	@- $(SCRIPTSDIR)/errsweep osfrgn.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/osfrgn.c
	@- if [ -f current.log ]; then rm -f current.log; fi

osrrr.o : $(CDIR)/osrrr.c $(CDIR)/osrrr.h $(RTHFILES)
	@- if [ -f osrrr.o ] ; then rm -f osrrr.o ; fi
	@- $(SCRIPTSDIR)/errsweep osrrr.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/osrrr.c
	@- if [ -f current.log ]; then rm -f current.log; fi

ostme.o : $(CDIR)/ostme.c $(CDIR)/ostme.h $(RTHFILES)
	@- if [ -f ostme.o ] ; then rm -f ostme.o ; fi
	@- $(SCRIPTSDIR)/errsweep ostme.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/ostme.c
	@- if [ -f current.log ]; then rm -f current.log; fi

panes.o : $(CDIR)/panes.c $(CDIR)/panes.h $(RTHFILES)
	@- if [ -f panes.o ] ; then rm -f panes.o ; fi
	@- $(SCRIPTSDIR)/errsweep panes.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/panes.c
	@- if [ -f current.log ]; then rm -f current.log; fi

parse.o : $(CDIR)/parse.c $(CDIR)/parse.h $(RTHFILES)
	@- if [ -f parse.o ] ; then rm -f parse.o ; fi
	@- $(SCRIPTSDIR)/errsweep parse.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/parse.c
	@- if [ -f current.log ]; then rm -f current.log; fi

parse2.o : $(CDIR)/parse2.c $(CDIR)/parse2.h $(RTHFILES)
	@- if [ -f parse2.o ] ; then rm -f parse2.o ; fi
	@- $(SCRIPTSDIR)/errsweep parse2.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/parse2.c
	@- if [ -f current.log ]; then rm -f current.log; fi

parts.o : $(CDIR)/parts.c $(CDIR)/parts.h $(RTHFILES)
	@- if [ -f parts.o ] ; then rm -f parts.o ; fi
	@- $(SCRIPTSDIR)/errsweep parts.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/parts.c
	@- if [ -f current.log ]; then rm -f current.log; fi

pccmp.o : $(CDIR)/pccmp.c $(CDIR)/pccmp.h $(RTHFILES)
	@- if [ -f pccmp.o ] ; then rm -f pccmp.o ; fi
	@- $(SCRIPTSDIR)/errsweep pccmp.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/pccmp.c
	@- if [ -f current.log ]; then rm -f current.log; fi

pcdbg.o : $(CDIR)/pcdbg.c $(CDIR)/pcdbg.h $(RTHFILES)
	@- if [ -f pcdbg.o ] ; then rm -f pcdbg.o ; fi
	@- $(SCRIPTSDIR)/errsweep pcdbg.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/pcdbg.c
	@- if [ -f current.log ]; then rm -f current.log; fi

pcgrm.o : $(CDIR)/pcgrm.c $(CDIR)/pcgrm.h $(RTHFILES)
	@- if [ -f pcgrm.o ] ; then rm -f pcgrm.o ; fi
	@- $(SCRIPTSDIR)/errsweep pcgrm.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/pcgrm.c
	@- if [ -f current.log ]; then rm -f current.log; fi

pcnst.o : $(CDIR)/pcnst.c $(CDIR)/pcnst.h $(RTHFILES)
	@- if [ -f pcnst.o ] ; then rm -f pcnst.o ; fi
	@- $(SCRIPTSDIR)/errsweep pcnst.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/pcnst.c
	@- if [ -f current.log ]; then rm -f current.log; fi

pcnst2.o : $(CDIR)/pcnst2.c $(CDIR)/pcnst2.h $(RTHFILES)
	@- if [ -f pcnst2.o ] ; then rm -f pcnst2.o ; fi
	@- $(SCRIPTSDIR)/errsweep pcnst2.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/pcnst2.c
	@- if [ -f current.log ]; then rm -f current.log; fi

pctls.o : $(CDIR)/pctls.c $(CDIR)/pctls.h $(RTHFILES)
	@- if [ -f pctls.o ] ; then rm -f pctls.o ; fi
	@- $(SCRIPTSDIR)/errsweep pctls.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/pctls.c
	@- if [ -f current.log ]; then rm -f current.log; fi

places.o : $(CDIR)/places.c $(CDIR)/places.h $(RTHFILES)
	@- if [ -f places.o ] ; then rm -f places.o ; fi
	@- $(SCRIPTSDIR)/errsweep places.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/places.c
	@- if [ -f current.log ]; then rm -f current.log; fi

player.o : $(CDIR)/player.c $(CDIR)/player.h $(RTHFILES)
	@- if [ -f player.o ] ; then rm -f player.o ; fi
	@- $(SCRIPTSDIR)/errsweep player.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/player.c
	@- if [ -f current.log ]; then rm -f current.log; fi

priqus.o : $(CDIR)/priqus.c $(CDIR)/priqus.h $(RTHFILES)
	@- if [ -f priqus.o ] ; then rm -f priqus.o ; fi
	@- $(SCRIPTSDIR)/errsweep priqus.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/priqus.c
	@- if [ -f current.log ]; then rm -f current.log; fi

prmtvs.o : $(CDIR)/prmtvs.c $(CDIR)/prmtvs.h $(RTHFILES)
	@- if [ -f prmtvs.o ] ; then rm -f prmtvs.o ; fi
	@- $(SCRIPTSDIR)/errsweep prmtvs.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/prmtvs.c
	@- if [ -f current.log ]; then rm -f current.log; fi

prntng.o : $(CDIR)/prntng.c $(CDIR)/prntng.h $(RTHFILES)
	@- if [ -f prntng.o ] ; then rm -f prntng.o ; fi
	@- $(SCRIPTSDIR)/errsweep prntng.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/prntng.c
	@- if [ -f current.log ]; then rm -f current.log; fi

ps.o : $(CDIR)/ps.c $(CDIR)/ps.h $(RTHFILES)
	@- if [ -f ps.o ] ; then rm -f ps.o ; fi
	@- $(SCRIPTSDIR)/errsweep ps.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/ps.c
	@- if [ -f current.log ]; then rm -f current.log; fi

pshdr.o : $(CDIR)/pshdr.c $(CDIR)/pshdr.h $(RTHFILES)
	@- if [ -f pshdr.o ] ; then rm -f pshdr.o ; fi
	@- $(SCRIPTSDIR)/errsweep pshdr.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/pshdr.c
	@- if [ -f current.log ]; then rm -f current.log; fi

ptfms.o : $(CDIR)/ptfms.c $(CDIR)/ptfms.h $(RTHFILES)
	@- if [ -f ptfms.o ] ; then rm -f ptfms.o ; fi
	@- $(SCRIPTSDIR)/errsweep ptfms.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/ptfms.c
	@- if [ -f current.log ]; then rm -f current.log; fi

pthnms.o : $(CDIR)/pthnms.c $(CDIR)/pthnms.h $(RTHFILES)
	@- if [ -f pthnms.o ] ; then rm -f pthnms.o ; fi
	@- $(SCRIPTSDIR)/errsweep pthnms.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/pthnms.c
	@- if [ -f current.log ]; then rm -f current.log; fi

qrs.o : $(CDIR)/qrs.c $(CDIR)/qrs.h $(RTHFILES)
	@- if [ -f qrs.o ] ; then rm -f qrs.o ; fi
	@- $(SCRIPTSDIR)/errsweep qrs.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/qrs.c
	@- if [ -f current.log ]; then rm -f current.log; fi

rings.o : $(CDIR)/rings.c $(CDIR)/rings.h $(RTHFILES)
	@- if [ -f rings.o ] ; then rm -f rings.o ; fi
	@- $(SCRIPTSDIR)/errsweep rings.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/rings.c
	@- if [ -f current.log ]; then rm -f current.log; fi

rltns.o : $(CDIR)/rltns.c $(CDIR)/rltns.h $(RTHFILES)
	@- if [ -f rltns.o ] ; then rm -f rltns.o ; fi
	@- $(SCRIPTSDIR)/errsweep rltns.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/rltns.c
	@- if [ -f current.log ]; then rm -f current.log; fi

roles.o : $(CDIR)/roles.c $(CDIR)/roles.h $(RTHFILES)
	@- if [ -f roles.o ] ; then rm -f roles.o ; fi
	@- $(SCRIPTSDIR)/errsweep roles.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/roles.c
	@- if [ -f current.log ]; then rm -f current.log; fi

rpcmn1.o : $(CDIR)/rpcmn1.c $(CDIR)/rpcmn1.h $(RTHFILES)
	@- if [ -f rpcmn1.o ] ; then rm -f rpcmn1.o ; fi
	@- $(SCRIPTSDIR)/errsweep rpcmn1.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/rpcmn1.c
	@- if [ -f current.log ]; then rm -f current.log; fi

rpcmn2.o : $(CDIR)/rpcmn2.c $(CDIR)/rpcmn2.h $(RTHFILES)
	@- if [ -f rpcmn2.o ] ; then rm -f rpcmn2.o ; fi
	@- $(SCRIPTSDIR)/errsweep rpcmn2.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/rpcmn2.c
	@- if [ -f current.log ]; then rm -f current.log; fi

rpcmn3.o : $(CDIR)/rpcmn3.c $(CDIR)/rpcmn3.h $(RTHFILES)
	@- if [ -f rpcmn3.o ] ; then rm -f rpcmn3.o ; fi
	@- $(SCRIPTSDIR)/errsweep rpcmn3.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/rpcmn3.c
	@- if [ -f current.log ]; then rm -f current.log; fi

rsrcs.o : $(CDIR)/rsrcs.c $(CDIR)/rsrcs.h $(RTHFILES)
	@- if [ -f rsrcs.o ] ; then rm -f rsrcs.o ; fi
	@- $(SCRIPTSDIR)/errsweep rsrcs.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/rsrcs.c
	@- if [ -f current.log ]; then rm -f current.log; fi

rules.o : $(CDIR)/rules.c $(CDIR)/rules.h $(RTHFILES)
	@- if [ -f rules.o ] ; then rm -f rules.o ; fi
	@- $(SCRIPTSDIR)/errsweep rules.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/rules.c
	@- if [ -f current.log ]; then rm -f current.log; fi

run.o : $(CDIR)/run.c $(CDIR)/run.h $(RTHFILES)
	@- if [ -f run.o ] ; then rm -f run.o ; fi
	@- $(SCRIPTSDIR)/errsweep run.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/run.c
	@- if [ -f current.log ]; then rm -f current.log; fi

sax.o : $(CDIR)/sax.c $(CDIR)/sax.h $(RTHFILES)
	@- if [ -f sax.o ] ; then rm -f sax.o ; fi
	@- $(SCRIPTSDIR)/errsweep sax.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/sax.c
	@- if [ -f current.log ]; then rm -f current.log; fi

schdle.o : $(CDIR)/schdle.c $(CDIR)/schdle.h $(RTHFILES)
	@- if [ -f schdle.o ] ; then rm -f schdle.o ; fi
	@- $(SCRIPTSDIR)/errsweep schdle.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/schdle.c
	@- if [ -f current.log ]; then rm -f current.log; fi

sets.o : $(CDIR)/sets.c $(CDIR)/sets.h $(RTHFILES)
	@- if [ -f sets.o ] ; then rm -f sets.o ; fi
	@- $(SCRIPTSDIR)/errsweep sets.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/sets.c
	@- if [ -f current.log ]; then rm -f current.log; fi

slots.o : $(CDIR)/slots.c $(CDIR)/slots.h $(RTHFILES)
	@- if [ -f slots.o ] ; then rm -f slots.o ; fi
	@- $(SCRIPTSDIR)/errsweep slots.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/slots.c
	@- if [ -f current.log ]; then rm -f current.log; fi

slvc14.o : $(CDIR)/slvc14.c $(CDIR)/slvc14.h $(RTHFILES)
	@- if [ -f slvc14.o ] ; then rm -f slvc14.o ; fi
	@- $(SCRIPTSDIR)/errsweep slvc14.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/slvc14.c
	@- if [ -f current.log ]; then rm -f current.log; fi

slvc18.o : $(CDIR)/slvc18.c $(CDIR)/slvc18.h $(RTHFILES)
	@- if [ -f slvc18.o ] ; then rm -f slvc18.o ; fi
	@- $(SCRIPTSDIR)/errsweep slvc18.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/slvc18.c
	@- if [ -f current.log ]; then rm -f current.log; fi

slvc24.o : $(CDIR)/slvc24.c $(CDIR)/slvc24.h $(RTHFILES)
	@- if [ -f slvc24.o ] ; then rm -f slvc24.o ; fi
	@- $(SCRIPTSDIR)/errsweep slvc24.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/slvc24.c
	@- if [ -f current.log ]; then rm -f current.log; fi

smlt1.o : $(CDIR)/smlt1.c $(CDIR)/smlt1.h $(RTHFILES)
	@- if [ -f smlt1.o ] ; then rm -f smlt1.o ; fi
	@- $(SCRIPTSDIR)/errsweep smlt1.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/smlt1.c
	@- if [ -f current.log ]; then rm -f current.log; fi

smlt2.o : $(CDIR)/smlt2.c $(CDIR)/smlt2.h $(RTHFILES)
	@- if [ -f smlt2.o ] ; then rm -f smlt2.o ; fi
	@- $(SCRIPTSDIR)/errsweep smlt2.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/smlt2.c
	@- if [ -f current.log ]; then rm -f current.log; fi

smlt3.o : $(CDIR)/smlt3.c $(CDIR)/smlt3.h $(RTHFILES)
	@- if [ -f smlt3.o ] ; then rm -f smlt3.o ; fi
	@- $(SCRIPTSDIR)/errsweep smlt3.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/smlt3.c
	@- if [ -f current.log ]; then rm -f current.log; fi

smlt5.o : $(CDIR)/smlt5.c $(CDIR)/smlt5.h $(RTHFILES)
	@- if [ -f smlt5.o ] ; then rm -f smlt5.o ; fi
	@- $(SCRIPTSDIR)/errsweep smlt5.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/smlt5.c
	@- if [ -f current.log ]; then rm -f current.log; fi

smrtsgnlxtnsn.o : $(CDIR)/smrtsgnlxtnsn.c $(CDIR)/smrtsgnlxtnsn.h $(RTHFILES)
	@- if [ -f smrtsgnlxtnsn.o ] ; then rm -f smrtsgnlxtnsn.o ; fi
	@- $(SCRIPTSDIR)/errsweep smrtsgnlxtnsn.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/smrtsgnlxtnsn.c
	@- if [ -f current.log ]; then rm -f current.log; fi

sock1.o : $(CDIR)/sock1.c $(CDIR)/sock1.h $(RTHFILES)
	@- if [ -f sock1.o ] ; then rm -f sock1.o ; fi
	@- $(SCRIPTSDIR)/errsweep sock1.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/sock1.c
	@- if [ -f current.log ]; then rm -f current.log; fi

sock2.o : $(CDIR)/sock2.c $(CDIR)/sock2.h $(RTHFILES)
	@- if [ -f sock2.o ] ; then rm -f sock2.o ; fi
	@- $(SCRIPTSDIR)/errsweep sock2.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/sock2.c
	@- if [ -f current.log ]; then rm -f current.log; fi

sqncs1.o : $(CDIR)/sqncs1.c $(CDIR)/sqncs1.h $(RTHFILES)
	@- if [ -f sqncs1.o ] ; then rm -f sqncs1.o ; fi
	@- $(SCRIPTSDIR)/errsweep sqncs1.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/sqncs1.c
	@- if [ -f current.log ]; then rm -f current.log; fi

sqncs2.o : $(CDIR)/sqncs2.c $(CDIR)/sqncs2.h $(RTHFILES)
	@- if [ -f sqncs2.o ] ; then rm -f sqncs2.o ; fi
	@- $(SCRIPTSDIR)/errsweep sqncs2.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/sqncs2.c
	@- if [ -f current.log ]; then rm -f current.log; fi

sqncs3.o : $(CDIR)/sqncs3.c $(CDIR)/sqncs3.h $(RTHFILES)
	@- if [ -f sqncs3.o ] ; then rm -f sqncs3.o ; fi
	@- $(SCRIPTSDIR)/errsweep sqncs3.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/sqncs3.c
	@- if [ -f current.log ]; then rm -f current.log; fi

stkcmp.o : $(CDIR)/stkcmp.c $(CDIR)/stkcmp.h $(RTHFILES)
	@- if [ -f stkcmp.o ] ; then rm -f stkcmp.o ; fi
	@- $(SCRIPTSDIR)/errsweep stkcmp.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/stkcmp.c
	@- if [ -f current.log ]; then rm -f current.log; fi

stkcts.o : $(CDIR)/stkcts.c $(CDIR)/stkcts.h $(RTHFILES)
	@- if [ -f stkcts.o ] ; then rm -f stkcts.o ; fi
	@- $(SCRIPTSDIR)/errsweep stkcts.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/stkcts.c
	@- if [ -f current.log ]; then rm -f current.log; fi

stkkrn.o : $(CDIR)/stkkrn.c $(CDIR)/stkkrn.h $(RTHFILES)
	@- if [ -f stkkrn.o ] ; then rm -f stkkrn.o ; fi
	@- $(SCRIPTSDIR)/errsweep stkkrn.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/stkkrn.c
	@- if [ -f current.log ]; then rm -f current.log; fi

stknst.o : $(CDIR)/stknst.c $(CDIR)/stknst.h $(RTHFILES)
	@- if [ -f stknst.o ] ; then rm -f stknst.o ; fi
	@- $(SCRIPTSDIR)/errsweep stknst.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/stknst.c
	@- if [ -f current.log ]; then rm -f current.log; fi

stktls.o : $(CDIR)/stktls.c $(CDIR)/stktls.h $(RTHFILES)
	@- if [ -f stktls.o ] ; then rm -f stktls.o ; fi
	@- $(SCRIPTSDIR)/errsweep stktls.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/stktls.c
	@- if [ -f current.log ]; then rm -f current.log; fi

stkvl1.o : $(CDIR)/stkvl1.c $(CDIR)/stkvl1.h $(RTHFILES)
	@- if [ -f stkvl1.o ] ; then rm -f stkvl1.o ; fi
	@- $(SCRIPTSDIR)/errsweep stkvl1.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/stkvl1.c
	@- if [ -f current.log ]; then rm -f current.log; fi

stkvl2.o : $(CDIR)/stkvl2.c $(CDIR)/stkvl2.h $(RTHFILES)
	@- if [ -f stkvl2.o ] ; then rm -f stkvl2.o ; fi
	@- $(SCRIPTSDIR)/errsweep stkvl2.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/stkvl2.c
	@- if [ -f current.log ]; then rm -f current.log; fi

strms.o : $(CDIR)/strms.c $(CDIR)/strms.h $(RTHFILES)
	@- if [ -f strms.o ] ; then rm -f strms.o ; fi
	@- $(SCRIPTSDIR)/errsweep strms.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/strms.c
	@- if [ -f current.log ]; then rm -f current.log; fi

symtab.o : $(CDIR)/symtab.c $(CDIR)/symtab.h $(RTHFILES)
	@- if [ -f symtab.o ] ; then rm -f symtab.o ; fi
	@- $(SCRIPTSDIR)/errsweep symtab.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/symtab.c
	@- if [ -f current.log ]; then rm -f current.log; fi

syscns.o : $(CDIR)/syscns.c $(CDIR)/syscns.h $(RTHFILES)
	@- if [ -f syscns.o ] ; then rm -f syscns.o ; fi
	@- $(SCRIPTSDIR)/errsweep syscns.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/syscns.c
	@- if [ -f current.log ]; then rm -f current.log; fi

systm.o : $(CDIR)/systm.c $(CDIR)/systm.h $(RTHFILES)
	@- if [ -f systm.o ] ; then rm -f systm.o ; fi
	@- $(SCRIPTSDIR)/errsweep systm.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/systm.c
	@- if [ -f current.log ]; then rm -f current.log; fi

tables.o : $(CDIR)/tables.c $(CDIR)/tables.h $(RTHFILES)
	@- if [ -f tables.o ] ; then rm -f tables.o ; fi
	@- $(SCRIPTSDIR)/errsweep tables.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/tables.c
	@- if [ -f current.log ]; then rm -f current.log; fi

telesb.o : $(CDIR)/telesb.c $(CDIR)/telesb.h $(RTHFILES)
	@- if [ -f telesb.o ] ; then rm -f telesb.o ; fi
	@- $(SCRIPTSDIR)/errsweep telesb.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/telesb.c
	@- if [ -f current.log ]; then rm -f current.log; fi

thai14.o : $(CDIR)/thai14.c $(CDIR)/thai14.h $(RTHFILES)
	@- if [ -f thai14.o ] ; then rm -f thai14.o ; fi
	@- $(SCRIPTSDIR)/errsweep thai14.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/thai14.c
	@- if [ -f current.log ]; then rm -f current.log; fi

thai18.o : $(CDIR)/thai18.c $(CDIR)/thai18.h $(RTHFILES)
	@- if [ -f thai18.o ] ; then rm -f thai18.o ; fi
	@- $(SCRIPTSDIR)/errsweep thai18.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/thai18.c
	@- if [ -f current.log ]; then rm -f current.log; fi

thai24.o : $(CDIR)/thai24.c $(CDIR)/thai24.h $(RTHFILES)
	@- if [ -f thai24.o ] ; then rm -f thai24.o ; fi
	@- $(SCRIPTSDIR)/errsweep thai24.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/thai24.c
	@- if [ -f current.log ]; then rm -f current.log; fi

times.o : $(CDIR)/times.c $(CDIR)/times.h $(RTHFILES)
	@- if [ -f times.o ] ; then rm -f times.o ; fi
	@- $(SCRIPTSDIR)/errsweep times.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/times.c
	@- if [ -f current.log ]; then rm -f current.log; fi

tlsrvr.o : $(CDIR)/tlsrvr.c $(CDIR)/tlsrvr.h $(RTHFILES)
	@- if [ -f tlsrvr.o ] ; then rm -f tlsrvr.o ; fi
	@- $(SCRIPTSDIR)/errsweep tlsrvr.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/tlsrvr.c
	@- if [ -f current.log ]; then rm -f current.log; fi

token.o : $(CDIR)/token.c $(CDIR)/token.h $(RTHFILES)
	@- if [ -f token.o ] ; then rm -f token.o ; fi
	@- $(SCRIPTSDIR)/errsweep token.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/token.c
	@- if [ -f current.log ]; then rm -f current.log; fi

tran.o : $(CDIR)/tran.c $(CDIR)/tran.h $(RTHFILES)
	@- if [ -f tran.o ] ; then rm -f tran.o ; fi
	@- $(SCRIPTSDIR)/errsweep tran.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/tran.c
	@- if [ -f current.log ]; then rm -f current.log; fi

trnscd.o : $(CDIR)/trnscd.c $(CDIR)/trnscd.h $(RTHFILES)
	@- if [ -f trnscd.o ] ; then rm -f trnscd.o ; fi
	@- $(SCRIPTSDIR)/errsweep trnscd.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/trnscd.c
	@- if [ -f current.log ]; then rm -f current.log; fi

trvs.o : $(CDIR)/trvs.c $(CDIR)/trvs.h $(RTHFILES)
	@- if [ -f trvs.o ] ; then rm -f trvs.o ; fi
	@- $(SCRIPTSDIR)/errsweep trvs.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/trvs.c
	@- if [ -f current.log ]; then rm -f current.log; fi

types.o : $(CDIR)/types.c $(CDIR)/types.h $(RTHFILES)
	@- if [ -f types.o ] ; then rm -f types.o ; fi
	@- $(SCRIPTSDIR)/errsweep types.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/types.c
	@- if [ -f current.log ]; then rm -f current.log; fi

uncde.o : $(CDIR)/uncde.c $(CDIR)/uncde.h $(RTHFILES)
	@- if [ -f uncde.o ] ; then rm -f uncde.o ; fi
	@- $(SCRIPTSDIR)/errsweep uncde.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/uncde.c
	@- if [ -f current.log ]; then rm -f current.log; fi

userfuns.o : $(CDIR)/userfuns.c $(CDIR)/userfuns.h $(RTHFILES)
	@- if [ -f userfuns.o ] ; then rm -f userfuns.o ; fi
	@- $(SCRIPTSDIR)/errsweep userfuns.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/userfuns.c
	@- if [ -f current.log ]; then rm -f current.log; fi

userinit.o : $(CDIR)/userinit.c $(CDIR)/userinit.h $(RTHFILES)
	@- if [ -f userinit.o ] ; then rm -f userinit.o ; fi
	@- $(SCRIPTSDIR)/errsweep userinit.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/userinit.c
	@- if [ -f current.log ]; then rm -f current.log; fi

usersyms.o : $(CDIR)/usersyms.c $(CDIR)/usersyms.h $(RTHFILES)
	@- if [ -f usersyms.o ] ; then rm -f usersyms.o ; fi
	@- $(SCRIPTSDIR)/errsweep usersyms.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/usersyms.c
	@- if [ -f current.log ]; then rm -f current.log; fi

utlts0.o : $(CDIR)/utlts0.c $(CDIR)/utlts0.h $(RTHFILES)
	@- if [ -f utlts0.o ] ; then rm -f utlts0.o ; fi
	@- $(SCRIPTSDIR)/errsweep utlts0.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/utlts0.c
	@- if [ -f current.log ]; then rm -f current.log; fi

utlts1.o : $(CDIR)/utlts1.c $(CDIR)/utlts1.h $(RTHFILES)
	@- if [ -f utlts1.o ] ; then rm -f utlts1.o ; fi
	@- $(SCRIPTSDIR)/errsweep utlts1.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/utlts1.c
	@- if [ -f current.log ]; then rm -f current.log; fi

utlts2.o : $(CDIR)/utlts2.c $(CDIR)/utlts2.h $(RTHFILES)
	@- if [ -f utlts2.o ] ; then rm -f utlts2.o ; fi
	@- $(SCRIPTSDIR)/errsweep utlts2.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/utlts2.c
	@- if [ -f current.log ]; then rm -f current.log; fi

utlts3.o : $(CDIR)/utlts3.c $(CDIR)/utlts3.h $(RTHFILES)
	@- if [ -f utlts3.o ] ; then rm -f utlts3.o ; fi
	@- $(SCRIPTSDIR)/errsweep utlts3.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/utlts3.c
	@- if [ -f current.log ]; then rm -f current.log; fi

utlts4.o : $(CDIR)/utlts4.c $(CDIR)/utlts4.h $(RTHFILES)
	@- if [ -f utlts4.o ] ; then rm -f utlts4.o ; fi
	@- $(SCRIPTSDIR)/errsweep utlts4.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/utlts4.c
	@- if [ -f current.log ]; then rm -f current.log; fi

vrbls.o : $(CDIR)/vrbls.c $(CDIR)/vrbls.h $(RTHFILES)
	@- if [ -f vrbls.o ] ; then rm -f vrbls.o ; fi
	@- $(SCRIPTSDIR)/errsweep vrbls.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/vrbls.c
	@- if [ -f current.log ]; then rm -f current.log; fi

vw-def.o : $(CDIR)/vw-def.c $(CDIR)/vw-def.h $(RTHFILES)
	@- if [ -f vw-def.o ] ; then rm -f vw-def.o ; fi
	@- $(SCRIPTSDIR)/errsweep vw-def.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/vw-def.c
	@- if [ -f current.log ]; then rm -f current.log; fi

vw-g2.o : $(CDIR)/vw-g2.c $(CDIR)/vw-g2.h $(RTHFILES)
	@- if [ -f vw-g2.o ] ; then rm -f vw-g2.o ; fi
	@- $(SCRIPTSDIR)/errsweep vw-g2.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/vw-g2.c
	@- if [ -f current.log ]; then rm -f current.log; fi

vwmsg1.o : $(CDIR)/vwmsg1.c $(CDIR)/vwmsg1.h $(RTHFILES)
	@- if [ -f vwmsg1.o ] ; then rm -f vwmsg1.o ; fi
	@- $(SCRIPTSDIR)/errsweep vwmsg1.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/vwmsg1.c
	@- if [ -f current.log ]; then rm -f current.log; fi

vws.o : $(CDIR)/vws.c $(CDIR)/vws.h $(RTHFILES)
	@- if [ -f vws.o ] ; then rm -f vws.o ; fi
	@- $(SCRIPTSDIR)/errsweep vws.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/vws.c
	@- if [ -f current.log ]; then rm -f current.log; fi

wbsvcs.o : $(CDIR)/wbsvcs.c $(CDIR)/wbsvcs.h $(RTHFILES)
	@- if [ -f wbsvcs.o ] ; then rm -f wbsvcs.o ; fi
	@- $(SCRIPTSDIR)/errsweep wbsvcs.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/wbsvcs.c
	@- if [ -f current.log ]; then rm -f current.log; fi

win1.o : $(CDIR)/win1.c $(CDIR)/win1.h $(RTHFILES)
	@- if [ -f win1.o ] ; then rm -f win1.o ; fi
	@- $(SCRIPTSDIR)/errsweep win1.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/win1.c
	@- if [ -f current.log ]; then rm -f current.log; fi

win2.o : $(CDIR)/win2.c $(CDIR)/win2.h $(RTHFILES)
	@- if [ -f win2.o ] ; then rm -f win2.o ; fi
	@- $(SCRIPTSDIR)/errsweep win2.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/win2.c
	@- if [ -f current.log ]; then rm -f current.log; fi

win3.o : $(CDIR)/win3.c $(CDIR)/win3.h $(RTHFILES)
	@- if [ -f win3.o ] ; then rm -f win3.o ; fi
	@- $(SCRIPTSDIR)/errsweep win3.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/win3.c
	@- if [ -f current.log ]; then rm -f current.log; fi

win3a.o : $(CDIR)/win3a.c $(CDIR)/win3a.h $(RTHFILES)
	@- if [ -f win3a.o ] ; then rm -f win3a.o ; fi
	@- $(SCRIPTSDIR)/errsweep win3a.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/win3a.c
	@- if [ -f current.log ]; then rm -f current.log; fi

win4.o : $(CDIR)/win4.c $(CDIR)/win4.h $(RTHFILES)
	@- if [ -f win4.o ] ; then rm -f win4.o ; fi
	@- $(SCRIPTSDIR)/errsweep win4.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/win4.c
	@- if [ -f current.log ]; then rm -f current.log; fi

wrkstn.o : $(CDIR)/wrkstn.c $(CDIR)/wrkstn.h $(RTHFILES)
	@- if [ -f wrkstn.o ] ; then rm -f wrkstn.o ; fi
	@- $(SCRIPTSDIR)/errsweep wrkstn.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/wrkstn.c
	@- if [ -f current.log ]; then rm -f current.log; fi

wrmbt.o : $(CDIR)/wrmbt.c $(CDIR)/wrmbt.h $(RTHFILES)
	@- if [ -f wrmbt.o ] ; then rm -f wrmbt.o ; fi
	@- $(SCRIPTSDIR)/errsweep wrmbt.o
	$(CC) -c $(CC_FLAGS) -I$(CDIR) -I$(RTHDIR) -I- $(CDIR)/wrmbt.c
	@- if [ -f current.log ]; then rm -f current.log; fi

clean : 
	- rm -f *.[oa]
	- rm -f SymScale
