/* int4.h -- Header File for int4.c
 * Copyright (c) 1986 - 2017 Gensym Corporation.  All Rights Reserved.
 */


/* Symbol Definitions */
extern Object Kdefault;
extern Object Kend;
extern Object Qerror;
extern Object Qfirst;
extern Object Kkey;
extern Object Klocal;
extern Object Kstart;
extern Object Qunsigned_byte;

extern Object Pclos;
extern Object Pclos_run;
extern Object Pclosx;
extern Object Pcl;
extern Object Pcl_user;
extern Object Pkeyword;
extern Object Ptrun;
extern Object Ptx;

/* function declarations */

#ifdef USE_PROTOTYPES

extern Object acknowledge_shutdown(Object);
extern Object add_icp_message_handler(Object,Object);
extern Object add_network_info_to_title_if_appropriate(Object,Object);
extern Object add_to_active_icp_sockets(Object);
extern Object allocate_byte_vector_16(Object);
extern Object assq_function(Object,Object);
extern Object c_get_connection_pathname(Object,Object,Object);
extern Object c_get_network_listener(Object,Object,Object);
extern Object cancel_and_reclaim_scheduled_queue_element_1(Object);
extern Object close_and_disconnect_all_sockets(void);
extern Object close_and_disconnect_icp_socket_handle(Object);
extern Object copy_null_terminated_string_as_text_string(Object);
extern Object copy_out_current_wide_string(void);
extern Object copy_partial_text_string(Object,Object);
extern Object copy_text_string(Object);
extern Object copy_text_string_portion(Object,Object,Object);
extern Object deassign_index_in_index_space(Object,Object);
extern Object deregister_all_icp_connect_callbacks(Object);
extern Object deregister_corresponding_icp_object(Object,Object,Object,Object,Object);
extern Object deregister_item_with_handle_on_port(Object,Object,Object);
extern Object emit_icp_read_trace(Object,Object,Object,Object,Object,Object,Object,Object,Object,Object);
extern Object emit_icp_write_trace(Object,Object,Object,Object,Object,Object,Object,Object,Object,Object);
extern Object end_icp_message_group(void);
extern Object enqueue_reclaim_index_space_message(Object,Object,Object,Object,Object,Object,Object);
extern Object establish_g2_network_listeners(void);
extern Object extend_current_gensym_string(int,...);
extern Object fill_wide_string_1(Object,Object,Object,Object);
extern Object finalize_and_reclaim_icp_socket(Object);
extern Object flush_and_shutdown_icp_socket(Object);
extern Object flush_icp_output_ports(void);
extern Object frame_serial_number_to_item_table(Object);
extern Object future_task_schedule_2(Object);
extern Object gensym_cons_1(Object,Object);
extern Object gensym_list_3(Object,Object,Object);
extern Object get_accept_pathname(Object);
extern Object get_all_command_line_keyword_arguments(Object);
extern Object get_command_line_flag_argument(int,...);
extern Object get_command_line_keyword_argument_as_integer(int,...);
extern Object get_from_icp_port(Object,Object,Object);
extern Object get_local_host_addresses(void);
extern Object get_local_host_name(void);
extern Object get_network_listener(Object);
extern Object get_raw_network_info(void);
extern Object get_tcp_listener_port_number(Object);
extern Object get_tcpip_listener_specification(void);
extern Object get_unix_host_name(void);
extern Object getfq_function_no_default(Object,Object);
extern Object gethostname_1(Object,Object);
extern Object handle_icp_acknowledge_shutdown(void);
extern Object handle_icp_acknowledge_shutdown__body(void);
extern Object handle_icp_connect(Object);
extern Object handle_icp_shut_down_data_server(void);
extern Object handle_icp_shut_down_data_server__body(void);
extern Object icp_connection_being_shutdown_qm(Object);
extern Object icp_connection_in_progress_p(Object);
extern Object icp_connection_is_secure(Object);
extern Object icp_connection_loss_notifier(Object,Object);
extern Object icp_connection_open_p(Object);
extern Object icp_error_internal(Object,Object,Object,Object,Object);
extern Object icp_object_type_given_icp_object(Object,Object);
extern Object instantaneous_icp_reader_byte_count(void);
extern Object instantaneous_icp_writer_byte_count(void);
extern Object item_index_space(Object);
extern Object item_references_enabled_p(Object);
extern Object item_with_handle_index_space(Object);
extern Object lengthw(Object);
extern Object make_and_install_network_icp_socket(int,...);
extern Object make_and_install_network_listener(Object,Object);
extern Object make_icp_connection(int,...);
extern Object make_icp_socket(Object,Object,Object,Object,Object,Object,Object,Object,Object,Object);
extern Object make_localnet_connection(int,...);
extern Object make_localnet_socket(Object,Object,Object);
extern Object make_network_connection(int,...);
extern Object make_network_pathname(Object);
extern Object make_permanent_schedule_task_structure_internal(void);
extern Object memq_function(Object,Object);
extern Object network_connect(int,...);
extern Object note_item_deleted_from_frame_serial_number_table(Object);
extern Object notify_user_at_console(int,...);
extern Object notify_user_in_parent_window(int,...);
extern Object obtain_simple_gensym_string(Object);
extern Object parse_icp_schedule_tree(void);
extern Object read_number_for_gensym_environment_variable(Object);
extern Object reclaim_gensym_cons_1(Object);
extern Object reclaim_gensym_list_1(Object);
extern Object reclaim_gensym_string(Object);
extern Object reclaim_gensym_tree_with_text_strings(Object);
extern Object reclaim_icp_buffer(Object);
extern Object reclaim_icp_buffer_list(Object);
extern Object reclaim_icp_buffers_for_port(Object);
extern Object reclaim_icp_input_port(Object);
extern Object reclaim_icp_output_port(Object);
extern Object reclaim_icp_port(Object);
extern Object reclaim_icp_port_internal_1(Object);
extern Object reclaim_icp_socket(Object);
extern Object reclaim_icp_socket_internal_1(Object);
extern Object reclaim_index_space_location_and_corresponding_objects(Object,Object,Object,Object);
extern Object reclaim_network_addresses(Object);
extern Object reclaim_raw_network_info(Object,Object);
extern Object reclaim_schedule_task_args(Object);
extern Object reclaim_text_string(Object);
extern Object reclaim_wide_string(Object);
extern Object record_system_variable(Object,Object,Object,Object,Object,Object,Object);
extern Object register_gsi_connection_callbacks(Object,Object);
extern Object register_icp_accept_callback(Object,Object);
extern Object register_icp_connect_callback(Object,Object);
extern Object register_icp_connection_loss_callback(Object,Object);
extern Object register_icp_connection_loss_callback_function(Object,Object);
extern Object register_socket_to_handle(Object,Object);
extern Object remove_icp_object_from_index_space(Object,Object,Object,Object);
extern Object remove_icp_port_entries_from_icp_object(Object,Object,Object);
extern Object remove_icp_port_entries_from_icp_object_1(Object,Object,Object,Object,Object);
extern Object remove_icp_port_entries_from_icp_object_list(Object,Object,Object);
extern Object report_listener_info_to_parent_window(void);
extern Object resumable_icp_pop(void);
extern Object resumable_icp_push(Object);
extern Object secure_icp_requested_p(void);
extern Object secure_icp_string(int,...);
extern Object send_icp_acknowledge_deregister_corresponding_icp_object(Object,Object);
extern Object send_icp_acknowledge_shutdown(void);
extern Object send_icp_delete_icp_object_for_process(Object,Object);
extern Object send_icp_deregister_corresponding_icp_object(Object,Object);
extern Object send_icp_deregister_icp_objects(Object,Object,Object);
extern Object send_icp_deregister_original_icp_object(Object,Object);
extern Object send_icp_shut_down_data_server(void);
extern Object send_immediate_reclaim_index_space_message(Object,Object,Object,Object,Object,Object);
extern Object send_queued_reclaim_index_space_messages(Object);
extern Object send_reclaim_index_space_message_p(Object,Object,Object);
extern Object set_in_icp_port(Object,Object,Object,Object);
extern Object set_up_secure_icp(int,...);
extern Object set_window_title(Object,Object);
extern Object setup_network_connection_for_connect(int,...);
extern Object shut_down_ab_process(int,...);
extern Object shutdown_icp_socket_after_connect(Object);
extern Object shutdown_icp_socket_connection(int,...);
extern Object start_writing_icp_message(Object);
extern Object string_eq_w(Object,Object);
extern Object string_equalw(Object,Object);
extern Object sxhashw(Object);
extern Object symbol_name_text_string(Object);
extern Object text_string_parse_integer_function(Object,Object,Object,Object);
extern Object tformat(int,...);
extern Object tformat_text_string(int,...);
extern Object time_interval_elapsed_p(Object,Object);
extern Object time_out_icp_socket(Object,Object);
extern Object twrite_wide_character(Object);

#else

extern Object acknowledge_shutdown();
extern Object add_icp_message_handler();
extern Object add_network_info_to_title_if_appropriate();
extern Object add_to_active_icp_sockets();
extern Object allocate_byte_vector_16();
extern Object assq_function();
extern Object c_get_connection_pathname();
extern Object c_get_network_listener();
extern Object cancel_and_reclaim_scheduled_queue_element_1();
extern Object close_and_disconnect_all_sockets();
extern Object close_and_disconnect_icp_socket_handle();
extern Object copy_null_terminated_string_as_text_string();
extern Object copy_out_current_wide_string();
extern Object copy_partial_text_string();
extern Object copy_text_string();
extern Object copy_text_string_portion();
extern Object deassign_index_in_index_space();
extern Object deregister_all_icp_connect_callbacks();
extern Object deregister_corresponding_icp_object();
extern Object deregister_item_with_handle_on_port();
extern Object emit_icp_read_trace();
extern Object emit_icp_write_trace();
extern Object end_icp_message_group();
extern Object enqueue_reclaim_index_space_message();
extern Object establish_g2_network_listeners();
extern Object extend_current_gensym_string();
extern Object fill_wide_string_1();
extern Object finalize_and_reclaim_icp_socket();
extern Object flush_and_shutdown_icp_socket();
extern Object flush_icp_output_ports();
extern Object frame_serial_number_to_item_table();
extern Object future_task_schedule_2();
extern Object gensym_cons_1();
extern Object gensym_list_3();
extern Object get_accept_pathname();
extern Object get_all_command_line_keyword_arguments();
extern Object get_command_line_flag_argument();
extern Object get_command_line_keyword_argument_as_integer();
extern Object get_from_icp_port();
extern Object get_local_host_addresses();
extern Object get_local_host_name();
extern Object get_network_listener();
extern Object get_raw_network_info();
extern Object get_tcp_listener_port_number();
extern Object get_tcpip_listener_specification();
extern Object get_unix_host_name();
extern Object getfq_function_no_default();
extern Object gethostname_1();
extern Object handle_icp_acknowledge_shutdown();
extern Object handle_icp_acknowledge_shutdown__body();
extern Object handle_icp_connect();
extern Object handle_icp_shut_down_data_server();
extern Object handle_icp_shut_down_data_server__body();
extern Object icp_connection_being_shutdown_qm();
extern Object icp_connection_in_progress_p();
extern Object icp_connection_is_secure();
extern Object icp_connection_loss_notifier();
extern Object icp_connection_open_p();
extern Object icp_error_internal();
extern Object icp_object_type_given_icp_object();
extern Object instantaneous_icp_reader_byte_count();
extern Object instantaneous_icp_writer_byte_count();
extern Object item_index_space();
extern Object item_references_enabled_p();
extern Object item_with_handle_index_space();
extern Object lengthw();
extern Object make_and_install_network_icp_socket();
extern Object make_and_install_network_listener();
extern Object make_icp_connection();
extern Object make_icp_socket();
extern Object make_localnet_connection();
extern Object make_localnet_socket();
extern Object make_network_connection();
extern Object make_network_pathname();
extern Object make_permanent_schedule_task_structure_internal();
extern Object memq_function();
extern Object network_connect();
extern Object note_item_deleted_from_frame_serial_number_table();
extern Object notify_user_at_console();
extern Object notify_user_in_parent_window();
extern Object obtain_simple_gensym_string();
extern Object parse_icp_schedule_tree();
extern Object read_number_for_gensym_environment_variable();
extern Object reclaim_gensym_cons_1();
extern Object reclaim_gensym_list_1();
extern Object reclaim_gensym_string();
extern Object reclaim_gensym_tree_with_text_strings();
extern Object reclaim_icp_buffer();
extern Object reclaim_icp_buffer_list();
extern Object reclaim_icp_buffers_for_port();
extern Object reclaim_icp_input_port();
extern Object reclaim_icp_output_port();
extern Object reclaim_icp_port();
extern Object reclaim_icp_port_internal_1();
extern Object reclaim_icp_socket();
extern Object reclaim_icp_socket_internal_1();
extern Object reclaim_index_space_location_and_corresponding_objects();
extern Object reclaim_network_addresses();
extern Object reclaim_raw_network_info();
extern Object reclaim_schedule_task_args();
extern Object reclaim_text_string();
extern Object reclaim_wide_string();
extern Object record_system_variable();
extern Object register_gsi_connection_callbacks();
extern Object register_icp_accept_callback();
extern Object register_icp_connect_callback();
extern Object register_icp_connection_loss_callback();
extern Object register_icp_connection_loss_callback_function();
extern Object register_socket_to_handle();
extern Object remove_icp_object_from_index_space();
extern Object remove_icp_port_entries_from_icp_object();
extern Object remove_icp_port_entries_from_icp_object_1();
extern Object remove_icp_port_entries_from_icp_object_list();
extern Object report_listener_info_to_parent_window();
extern Object resumable_icp_pop();
extern Object resumable_icp_push();
extern Object secure_icp_requested_p();
extern Object secure_icp_string();
extern Object send_icp_acknowledge_deregister_corresponding_icp_object();
extern Object send_icp_acknowledge_shutdown();
extern Object send_icp_delete_icp_object_for_process();
extern Object send_icp_deregister_corresponding_icp_object();
extern Object send_icp_deregister_icp_objects();
extern Object send_icp_deregister_original_icp_object();
extern Object send_icp_shut_down_data_server();
extern Object send_immediate_reclaim_index_space_message();
extern Object send_queued_reclaim_index_space_messages();
extern Object send_reclaim_index_space_message_p();
extern Object set_in_icp_port();
extern Object set_up_secure_icp();
extern Object set_window_title();
extern Object setup_network_connection_for_connect();
extern Object shut_down_ab_process();
extern Object shutdown_icp_socket_after_connect();
extern Object shutdown_icp_socket_connection();
extern Object start_writing_icp_message();
extern Object string_eq_w();
extern Object string_equalw();
extern Object sxhashw();
extern Object symbol_name_text_string();
extern Object text_string_parse_integer_function();
extern Object tformat();
extern Object tformat_text_string();
extern Object time_interval_elapsed_p();
extern Object time_out_icp_socket();
extern Object twrite_wide_character();

#endif

/* variables/constants */
extern Object Abort_for_icp_catcher_qm;
extern Object Active_icp_sockets;
extern Object Backtrace_stack_for_internal_error;
extern Object Cache_icp_semantics_graph;
extern Object Chain_of_available_schedule_tasks;
extern Object Check_icp_handshaking_p;
extern Object Command_line_arguments;
extern Object Current_gensym_string;
extern Object Current_icp_buffer;
extern Object Current_icp_port;
extern Object Current_icp_read_trace_level;
extern Object Current_icp_socket;
extern Object Current_icp_write_trace_level;
extern Object Current_real_time;
extern Object Current_schedule_task;
extern Object Current_system_name;
extern Object Current_twriting_output_type;
extern Object Current_wide_string;
extern Object Current_wide_string_list;
extern Object Current_write_icp_byte_position;
extern Object Delete_corresponding_object_qm;
extern Object Deregister_and_register_item_p;
extern Object Deregister_but_do_not_remove_from_table_p;
extern Object Deregister_corresponding_object_qm;
extern Object Disable_resumability;
extern Object Enqueue_reclaim_index_space_message_interval;
extern Object Fill_pointer_for_current_gensym_string;
extern Object Fill_pointer_for_current_wide_string;
#define G2_product_tag FIX((SI_Long)1L)
extern Object Generic_listener_initialized_qm;
extern Object Gensym_environment_variable_buffer;
extern Object Gsi_throw_to_run_loop_may_be_harmful_p;
extern Object Icp_buffer_of_start_of_message_series_qm;
extern Object Icp_buffers_for_message_group;
extern Object Icp_byte_position_of_start_of_message_series_qm;
extern Object Icp_connection_awaiting_acknowledgement;
extern Object Icp_connection_closed;
extern Object Icp_connection_connect_in_progress;
extern Object Icp_connection_failed_tag;
extern Object Icp_connection_running;
extern Object Icp_connection_succeeded_tag;
extern Object Icp_handshake_registry;
extern Object Icp_noop_network_code_accessed;
extern Object Icp_port_for_reclaim;
extern Object Icp_read_trace_cutoff_level_qm;
extern Object Icp_socket_for_reclaim_qm;
extern Object Icp_socket_listening;
extern Object Icp_socket_shutdown_handshake_timeout;
extern Object Icp_socket_transacting_message_group;
extern Object Icp_suspend;
extern Object Icp_write_trace_cutoff_level_qm;
extern Object In_recursive_gsi_context;
extern Object Index_of_top_of_backtrace_stack;
extern Object Inhibit_corresponding_icp_object_making;
extern Object Listed_continuation_servers;
extern Object Maximum_index_in_backtrace_stack_for_internal_error;
extern Object Number_of_icp_bytes_for_message_series;
extern Object Number_of_icp_bytes_in_message_group;
extern Object Number_of_icp_bytes_to_fill_buffer;
extern Object Profiling_enabled_qm;
extern Object Resumable_icp_state;
extern Object Secure_icp_default_p;
#define Size_of_basic_backtrace_information FIX((SI_Long)3L)
extern Object Structure_being_reclaimed;
extern Object System_window;
extern Object System_window_title_and_info_text_string_qm;
extern Object Tcp_listener_port_number;
extern Object Total_length_of_current_gensym_string;
extern Object Total_length_of_current_wide_string;
#define Use_no_network_protocols FIX((SI_Long)-1L)
#define Use_tcpip_protocol_only FIX((SI_Long)13L)
extern Object Writing_icp_message_group;
