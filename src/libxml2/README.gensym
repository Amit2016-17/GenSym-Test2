Updating, Configuring, Building, and Installing Libxml2 at Gensym
=================================================================

Libxml2 is the XML C parser and toolkit developed for the Gnome project.
It is free software (MIT license) available from http://xmlsoft.org/.
G2 uses it for SAX parsing and G2GL import/export.  In order to ensure
that G2 uses the same version and configuration on each platform, we build
libxml2 from source using consistent configuration options and statically link
it into G2.

Rather than rebuilding libxml2 every time G2 is built, though, libxml2 is only
built once per platform and then checked into CVS in the platform-specific
directory (e.g. specific/sparcsol).  Periodically we download an up-to-date
version of the libxml2 source and rebuild the libraries.  This document
describes this process.


Getting New Source
------------------

The source code is available from ftp://xmlsoft.org/ as
libxml2-<version>.tar.gz.  Check this code into the libxml2 directory.  You
should probably do "cvs remove" for files that no longer exist.  Note that some
files that are included in the source tarball are re-generated by the build
process; these should probably not be put into CVS.  (As of version 2.6.19,
these are libxml2.spec, include/libxml/xmlversion.h, and python/setup.py.)  You
will probably also want to update the .cvsignore files to ignore generated files
(and to not ignore files that no longer exist).

As a rule, we should not modify the downloaded source, but sometimes it may be
necessary, e.g. to fix a bug.  If possible, use a patch from their current CVS
tree:  http://cvs.gnome.org/viewcvs/libxml2/

The header files (include/libxml/*.h) need to also be checked into the
xml/libxml directory; old header files should be removed from here too.


Configuration
-------------

By default, libxml2 tries to include ZLIB and iconv if they exist.  ZLIB handles
compressed files; iconv handles character encoding conversion.  These both exist
on Solaris (ZLIB is libz.a, and iconv is part of libc.a), but do not exist by
default on Windows.  For now, we configure libxml2 to use neither of these.
Instead, we configure libxml2 to support ISO8859X character conversion, which is
a useful subset of iconv that is handled directly by libxml2.

Unix:

  Libxml2 depends on the pthreads (POSIX threads) library by default, in order
  to be thread-safe.  Since G2 is currently single-threaded, we disable this
  option, rather than linking with the pthreads library.  (Note that if this is
  not disabled in libxml2, G2 will successfully link without pthreads, but will
  crash at runtime when using I/O in libxml2!)

  % ./configure --without-threads --without-zlib --without-iconv --with-iso8859x --disable-shared

  (Note: on some machines, this might use gcc when we'd rather use cc.  In
  particular, gcc on our Tru64 machine, estonia, is broken as of 6/24/05.  In
  this case set CC=cc, e.g. with "env".)

Windows:

  We also disable threads, but we still have to use the /MT compile switch to
  link against the threadsafe library, LIBCMT.LIB, or else "errno" won't be
  found when linking G2.  (This overrides the default /MD switch, which links
  against MSVCRT.LIB, which only works when making DLLs.)

  % cd win32
  % cscript configure.js threads=no zlib=no iconv=yes iso8859x=yes cruntime=/MT

The configuration process generates the xmlversion.h header file (in
include/libxml).  It should be almost identical on each platform, so just check
the Unix version into xml/libxml for now instead of the platform-specific
directory.  (As of version 2.6.19, the only differences are
LIBXML_MODULE_EXTENSION and LIBXML_VERSION_EXTRA; neither of these affect G2.)


Building
--------

Unix:

  The configure script sets everything up for you, so all you have do is:

  % make


Windows:

  You may have to set up some environment variables.  The vcvars32.bat file from
  Microsoft Visual Studio will set up your PATH, INCLUDE, and LIB properly.
  Then, in order to just build the static library:

  % nmake libxmla


Installing
----------

Copy the static library into the platform-specific directory and check it into
CVS.

Unix:

  % cp .libs/libxml2.a $SRCBOX/specific/$MACHINE

Windows:

  % copy bin.msvc\libxml2_a.lib %SRCBOX%\specific\intelnt


Cleaning up
-----------

If you're doing multiple builds in the same sandbox, you'll want to remove all
the generated files before moving to the next platform.

Unix:

  % make distclean

Windows:

  % nmake distclean

---

GENSYMCID-453: Fix all LSB compatibility issues of the Gensym Linux bundle

Chun Tian (binghe)
Glority Software Ltd

To build a LSB compatible libxml2.a, please use this command:

$ CC=lsbcc ./configure --without-threads --without-zlib --without-iconv --with-iso8859x --disable-shared
$ make

lsbcc is in Ubuntu/Debian package "lsb-build-cc3".

The resulting work is .libs/libxml2.a
