#!/bin/csh

# Were the OK files are built.
set src = /home/siteok/foundry

set dst = /home/ab/ok/full-set
set abok = /home/ab

# Where the disk chunks actually reside.
set server = sdev4

# Should make this settable through a command line flag but for now, 
# just turn it on.
set verify_foundry_size = 1

if ( "$HOSTNAME" == "$server" ) then
  alias fcp "cp"
else
  alias fcp "rsh $server cp"
endif

if ($1 != -please && $#argv != 1 ) then
cat <<EOF
update-site-ok-files -please
  This script is used to install the Gensym Site's OK files.
These files provide authorization for all the machines that
Gensym owns.  The files are generated by the script: 
   util/generate-site-ok

That script leaves it's results in: $src

Since generate-site-ok is rerun automaticly each night they remain there only
for a single day.  If you want fresh files you will need to rerun the script.
You must be Ms. SiteOk to do that.  You should remove the hostinfo files before
you run it.

The files made by generate-site-ok have very tangled names.
these mnemonics are piled up to make the name.
  tw -- Telewindows Ok file
  g2 -- G2 ok file
  p# -- Process limit of #
  f# -- G2 with # floating TW licenses.
  v# -- For this major version # of the product line.
  s  -- A secured site.
  rt -- a runtime license
  ru -- a restricted use license
  e  -- an embedded license
  d  -- a development TW license.
  j  -- japanese
  k  -- korean
  c  -- chinese
All G2 licenses include a license for each of the G2 KB packags.

All the files are moved into ${dst}.
A few files are moved into ${abok} (where g2 and tw find them
because Mr. AB's environment include env. variables pointing there).
A few files are moved into /bt/ab tree so they can be promoted and
sent to gensym sales offices.

After running this you must check in the changes make to /bt/ab

You must be wearing Mr. AB's hat when you run this.

WARNING -- When this is done you must do some handwork to check
in the results. (The details of this work are printed out by
the script when it runs).
EOF
exit 1
endif


if ($1 == "-no-verify") set verify_foundry_size = 0

if ($user != ab) then
  echo "You must be Mr. AB to run this script."
  exit 1
endif

if ( ! -d $abok ) mkdir $abok
if ( ! -d $dst ) mkdir $dst


# The amount of space that the files take up varies according to how many
# machines we have and how much information is kept for each machine.
# For example it will rise if more products are added to the authorized
# products list, and will fall if out-of-service machines are removed from
# the hostinfo file. As of 10/16/97 there were 47,934 bytes in /home/siteok/
# foundry.  If something is really wrong, there won't be any ok files in
# that directory at all.
# 3/16/98 upped the limit to 60,000 as an increase in the number of
#  products has increased the size of the foundry again.
# jv, 10/7/99 - foundry now contains 248536 bytes of ok files.  I don't 
#  really think we need to perform this check at all, so I'm parameterizing
#  it, as well as adjusting the limits.
if ( $verify_foundry_size == 1 ) then
  set tmp = ( ` du -s $src ` )
  if ( $tmp[1] < 200000 ) then
    echo "Something is wrong, $src doesn't have enought bytes in it."
    exit 1
  endif
  if ( $tmp[1] > 275000 ) then
    echo "Something is wrong, $src has too many bytes in it."
    exit 1
  endif
endif

## Move the OK files into Mr. AB's home.
## Mr. AB's arranges to have the OK files loaded from here
## when the gensym products are started up.

# Copy the old ones to a backup directory.
echo "## Replace backup copy in ${dst}.bak"
/bin/rm -rf ${dst}.bak
mkdir ${dst}.bak
fcp ${dst}/* ${dst}.bak

# Put everything into the standard location
echo "## Move a full set of fresh ones to ${dst}"
fcp $src/*.ok ${dst}

# A few OK files reside in a special place for Mr. AB's environment.
echo "## Copy a few ok files to ${abok}"

# For older versions.
/bin/rm ${abok}/g2v3.ok ${abok}/g2v4.ok ${abok}/g2v5.ok ${abok}/g2v51.ok
/bin/rm ${abok}/g2v6.ok ${abok}/twv3.ok ${abok}/twv4.ok ${abok}/twv5.ok
/bin/rm ${abok}/g2.ok ${abok}/tw.ok

ln ${dst}/g2dv3.ok ${abok}/g2v3.ok
ln ${dst}/g2df10v4.ok ${abok}/g2v4.ok
ln ${dst}/g2df10v5.ok ${abok}/g2v5.ok
ln ${dst}/g2df10tw210v51.ok ${abok}/g2v51.ok
ln ${dst}/g2df10tw210v6.ok ${abok}/g2v6.ok

ln ${dst}/twdp10v3.ok ${abok}/twv3.ok
ln ${dst}/twdp10v4.ok ${abok}/twv4.ok
ln ${dst}/twdp10v5.ok ${abok}/twv5.ok

# For the "standard" version.
ln ${abok}/g2v4.ok ${abok}/g2.ok
ln ${abok}/twv4.ok ${abok}/tw.ok



## We need to check these in to AB, and AB-9OCT95 because when
## we promote the products we promote some of these ok files, that
## helps to get the OK files distributed to sales offices and
## individual machines in the building.

## First move these new versions into three current spinoffs

echo "## First move some into siteok's sandbox."
set SPINS = ( siteok )
foreach spin ( $SPINS )
  fcp ${dst}/twdp10v5.ok  /bt/${spin}/promote/tw.ok
  fcp ${dst}/g2df10v5.ok  /bt/${spin}/promote/g2.ok
  awk '{printf("%s%c\n", $0, 13)}' /bt/${spin}/promote/g2.ok > /bt/${spin}/promote/g2nt.ok
  fcp ${dst}/g2jv5.ok  /bt/${spin}/promote/g2j.ok
end

cat <<EOF
## At one time, you were supposed to do the following by hand!
sandbox siteok
bt promote
cvs ci -m 'Synch site ok files with hostinfo' *.ok
EOF

