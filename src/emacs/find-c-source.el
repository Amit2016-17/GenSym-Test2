;; All in /bt/ab/g2/c/:

(defconst g2-c-files-alist
    '((load load)
      (bootstrap btstrp)
      (systems systm)
      (delta delta)
      (tw-patches twpts)
      (features ftrs)
      (gsi-patches gspts)
      (loop loop)
      (lisp-fixes lspfxs)
      (g2-patches g2pts)
      (glbasics glbscs)
      (gldebug gldbg)
      (lucid-server lsrvr)
      (license lcnse)
      (products prdcts)
      (licensing-users lsusr)
      (interfaces ifs)
      (os-foreign osfrgn)
      (basics basics)
      (os-time ostme)
      (os-settings os-set)
      (os-memory os-mem)
      (primitives prmtvs)
      (characters chars)
      (jismap jismap)
      (ksmap2 ksmap2)
      (gbmap gbmap)
      (gbmapr gbmapr)
      (characters2 chars2)
      (keyboards kybrds)
      (keydefs kydfs)
      (utilities0 utlts0)
      (utilities1 utlts1)
      (utilities2 utlts2)
      (letters lttrs)
      (unicode uncde)
      (iso2022 is2022)
      (transcode trnscd)
      (iso8859 is8859)
      (alphabet alphbt)
      (token token)
      (utilities3 utlts3)
      (utilities4 utlts4)
      (times times)
      (f-keys f-keys)
      (os-error osrrr)
      (platforms ptfms)
      (launch launch)
      (pathnames pthnms)
      (file-parse flprse)
      (streams strms)
      (postscript ps)
      (schedule schdle)
      (clocks clocks)
      (networks ntwrks)
      (int0 int0)
      (int1 int1)
      (neterror ntrrr)
      (netevent ntvnt)
      (int2 int2)
      (int3a int3a)
      (int3b int3b)
      (int4 int4)
      (gsi-common gscmn)
      (windows1 win1)
      (windows2 win2)
      (windows3 win3)
      (windows3a win3a)
      (windows4 win4)
      (images images)
      (mice mice)
      (fonts fonts)
      (icons icons)
      (hb72 hb72)
      (hm14 hm14)
      (hm18 hm18)
      (hm24 hm24)
      (slavic14 slvc14)
      (slavic18 slvc18)
      (slavic24 slvc24)
      (hebrew14 hbrw14)
      (hebrew18 hbrw18)
      (hebrew24 hbrw24)
      (devices dvcs)
      (site site)
      (doc doc)
      (parse parse)
      (parse2 parse2)
      (frames1 frms1)
      (types types)
      (frames2 frms2)
      (frames2a frms2a)
      (frames2b frms2b)
      (frames3 frms3)
      (frames4 frms4)
      (frames5 frms5)
      (panes panes)
      (draw draw)
      (entities entts)
      (places places)
      (view-def vw-def)
      (modules mods)
      (debug debug)
      (ps-header pshdr)
      (printing prntng)
      (connect1 cnct1)
      (connect2 cnct2)
      (connect3 cnct3)
      (connect3a cnct3a)
      (connect4 cnct4)
      (connect5 cnct5)
      (definitions dfntns)
      (relations rltns)
      (formats frmts)
      (sequences1 sqncs1)
      (sequences2 sqncs2)
      (sequences3 sqncs3)
      (boxes boxes)
      (language lngge)
      (tables tables)
      (telestubs telesb)
      (workstation wrkstn)
      (books books)
      (menus menus)
      (new-menus nwmns)
      (facilities fclts)
      (kfep1 kfep1)
      (kfep2 kfep2)
      (kfep3 kfep3)
      (hfep1 hfep1)
      (hfep2 hfep2)
      (edit1 edit1)
      (edit2 edit2)
      (rings rings)
      (moves moves)
      (run run)
      (kb-merge kbmrge)
      (kb-load1 kbld1)
      (kb-load2 kbld2)
      (kb-save1 kbsv1)
      (kb-save2 kbsv2)
      (kb-save3 kbsv3)
      (kb-save4 kbsv4)
      (warmboot wrmbt)
      (font-files fntfls)
      (telewindows tlwn)
      (check-kbs chkkbs)
      (comp-utils cmptls)
      (compile1 cmpl1)
      (compile2 cmpl2)
      (sets sets)
      (lists lists)
      (arrays arrays)
      (variables vrbls)
      (histories hstrs)
      (roles roles)
      (chaining chnng)
      (eval eval)
      (rules rules)
      (new-rules nwrls)
      (functions fnctns)
      (cells cells)
      (proc-gram pcgrm)
      (rpc-common1 rpcmn1)
      (rpc-common2 rpcmn2)
      (rpc-common3 rpcmn3)
      (gsi gsi)
      (gsi-rpc1 gsrpc1)
      (gsi-rpc2 gsrpc2)
      (proc-utils pctls)
      (proc-comp pccmp)
      (proc-debug pcdbg)
      (file-sysproc flsp)
      (mem-sysproc mem-sp)
      (g2-rpc1 g2rpc1)
      (g2-rpc2 g2rpc2)
      (g2-rpc3 g2rpc3)
      (explain expln)
      (parts parts)
      (displays dsplys)
      (graphs1 grphs1)
      (graphs2 grphs2)
      (graph-util grphtl)
      (graph-def grphdf)
      (graphs graphs)
      (charts1 chrts1)
      (new-tables nwtbls)
      (install instll)
      (filters fltrs)
      (activate actvte)
      (attr-export atrxpt)
      (cycles cycles)
      (simulate1 smlt1)
      (simulate2 smlt2)
      (simulate3 smlt3)
      (simulate5 smlt5)
      (lexer lexer)
      (conclude cnclde)
      (stack-utils stktls)
      (stack-inst stknst)
      (stack-comp stkcmp)
      (stack-eval1 stkvl1)
      (stack-eval2 stkvl2)
      (stack-acts stkcts)
      (stack-kern stkkrn)
      (proc-inst pcnst)
      (proc-inst2 pcnst2)
      (grammar0 gram0)
      (grammar1 gram1)
      (grammar1a gram1a)
      (grammar2 gram2)
      (grammar3 gram3)
      (grammar4 gram4)
      (grammar4a gram4a)
      (grammar5 gram5)
      (grammar6a gram6a)
      (grammar6b gram6b)
      (grammar6c gram6c)
      (grammar7 gram7)
      (queries qrs)
      (g2-foreign g2frgn)
      (gfi-stubs gfi-sb)
      (attributes attrs)
      (gfi gfi)
      (g2-gsi g2-gsi)
      (gspan gspan)
      (g2ds g2ds)
      (g2ds-nupec g2dsnp)
      (controls cntrls)
      (commands0 cmds0)
      (commands1 cmds1)
      (commands2 cmds2)
      (view-msg1 vwmsg1)
      (view-g2 vw-g2)
      (media media)
      (traversals trvs)
      (teleserver tlsrvr)
      (icons1 icons1)
      (icons2 icons2)
      (icons3 icons3)
      (icons4 icons4)
      (icons5 icons5)
      (player player)
      (rg-report rgrprt)
      (g2-meters g2mtrs)
      (resources rsrcs)
      (res-g2 res-g2)
      (events evt)
      (events-g2 evt-g2)
      (java1 java1)
      (java2 java2)
      (java3 java3)
      (sysicons syscns)
      (checkmemory chkmem)
      (translate tran)
      (g2-final g2fnl)))



(defun find-translated-c ()
  "Find the translated C file for the lisp file in the current buffer"
  (interactive)
  (let ((lisp-filename (pathname-name (buffer-name (current-buffer)))))
    (find-translated-c-1 lisp-filename)))


(defun chestnut-name (lisp-name)
  ;; Max of 31 characters, preceeded by fxxx if was truncated.
  ;; If a global variable, would capitalize.
  (let* ((len (length lisp-name))
	 (c-name (make-string (min len (- 31 4)) ? ))
	 (i 0))
    (while (< i (length c-name))
      (let ((ch (aref lisp-name i)))
	(if (= ch ?-)
	    (setq ch ?_))
	(aset c-name i (downcase ch)))
      (setq i (1+ i)))
    c-name))
	
    
(defun find-c-definition (lisp-symbol)
  (interactive (list (find-tag-tag "Lisp symbol: ")))
  (if (consp lisp-symbol)
      (setq lisp-symbol (car lisp-symbol)))
  (find-tag lisp-symbol)
  (find-translated-c-1 (pathname-name (buffer-name (current-buffer)))
		       lisp-symbol))


(defun find-translated-c-1 (lisp-filename &optional lisp-function-name)
  (let* ((c-filename (or (car (cdr (assoc (intern lisp-filename) g2-c-files-alist)))
			 lisp-filename))
	 (filename (format "/bt/ab/g2/c/%s.c" c-filename))
	 (c-function-name (if lisp-function-name
			      (chestnut-name lisp-function-name))))

    (cond ((or (null c-filename)
	       (not (file-exists-p filename)))
	   (error "Cannot find C file %s for %s" filename lisp-filename))
	  (t
	  (message "Finding %s..." filename)
	  (find-file filename)

	  ;; Find the function w/in the file.
	  (if c-function-name
	      (progn (goto-char 0)
		     (let ((case-fold-search nil))
		       (if (re-search-forward (format "^Object [f0-9]*%s" c-function-name))
			   (beginning-of-line)))))))))
