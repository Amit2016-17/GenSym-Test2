;; Originally generated by build-indent-table-for-emacs in SITE.
;; Now has been hand-edited!!

;; This is an alist of (symbol number-of-special-subforms).

(defconst ab-indent-table
  '((let 1)
    (let* 1)
    (let*-or-set-for-system 1)
    (defun 2)
    (defmacro 2)
    
    (with-player-executing 0)
    (def-pseudo-instruction-byte-code-emitter 1)
    (with-chart-drawing 0)
    (def-procedure-statement-compiler 1)
    (execute-body-if-nupec-is-authorized-or-predicate-true 1)
    (def-graph-format 1)
    (do-color-revision-faster 1)
    (do-color-revision 2)
    (def-procedure-evaluator 1)
    (on-current-scratchpad-raster-tiles 1)
    (class-inheritance-path-class-case 1)
    (with-current-model 2)
    (with-wake-up-management 1)
    (avoiding-variable-capture 1)
    (def-keys 1)
    (write-stack-error 1)
    (def-savable-frame-flag 3)
    (def-text-cell-format 1)
    (def-format-class 1)
    (fixnum-case-with-result 1)
    (handling-gensym-file-errors 0)
    (with-current-grammar 1)
    (def-icp-value-reader-substitution-macro 1)
    (def-role-inverse 2)
    (defvar-for-macro 1)
    (g2-stream-with-non-character-mode 0)
    (g2-stream-with-open-stream 1)
    (without-floating-underflow-traps-if-possible 0)
    (with-compiler-error-reporting 0)
    (do-minimal-error-trapping 1)
    (def-handler-for-printing-in-all-passes 2)
    (do-attributes-for-class 2)
    (let*-sim 1)
    (def-dialog-box-format 1)
    (deftype-error-printer 2)
    (defstruct-g2 1)
    (set-and-restore 1)
    (define-g2-meter-names-and-forms 0)
    (execute-body-if-runtime-option-is-authorized-or-predicate-true 1)
    (with-current-model-for-variable-if-necessary 1)
    (icon-editor-state-case 1)
    (def-restrictable-frame-system-operation 4)
    (def-menu 1)
    (defun-simple 2)
    (execute-body-if-gspan-is-authorized 0)
    (with-expandable-pdl 0)
    (do-strip-intervals 1)
    (with-unmoveable-object-creation 0)
    (with-system-variables 1)
    (with-some-temporary-constants-of-type-number 1)
    (g2-stream-with-16-byte-file 0)
    (defparameter-for-macro 1)
    (with-primitive-bindings 1)
    (special-or 0)
    (give-warning 2)
    (for-image-plane 1)
    (for-image-plane-internal 1)
    (display-editor-notification 1)
    (defun-for-non-macro 2)
    (on-scratchpad-raster-list-given-stored-raster-list 1)
    (with-make-symbols-for-args 1)
    (with-part-description 1)
    (with-named-dynamic-extent-given 2)
    (with-more-processing 1)
    (with-non-inherited-old-stub-spec 1)
    (with-permanent-allocation 0)
    (with-three-g2-vectors-of-same-length 1)
    (def-post-loading-function 1)
    (with-temporary-bignum-creation 0)
    (do-data-series 0)
    (with-current-model-for-icp-socket 1)
    (with-chart-pen-color 1)
    (do-every-permanent-computation-style 1)
    (progn-for-macro 0)
    (with-chart 0)
    (def-icp-message-type 2)
    (define-history-function 4)
    (do-g2-list-elements 1)
    (with-test-hfep-context 0)
    (def-generic-method 2)
    (def-type-in-box-format 1)
    (remove-wake-ups-and-clean-up-after-body 1)
    (tracing-icp-writes 1)
    (on-scratchpad-raster-given-stored-raster 1)
    (dynamic-tagbody 1)
    (define-setf-method 2)
    (def-message-board-format 1)
    (define-activate-method-for-entity-display 1)
    (writing-icp-message-group-recklessly 1)
    (iterate-over-tiles-to-be-painted 1)
    (with-stack-frame-variables-environment 0)
    (with-text-color-different-from-background 1)
    (execute-body-if-embedded-option-is-authorized 0)
    (def-menu-item-format 1)
    (within-named-dynamic-extent 1)
    (within-named-dynamic-extent* 1)
    (def-dynamic-extent 1)
    (unwind-protect-for-development 2)
    (without-tracing-icp-reads 0)
    (with-semantic-checking-for-part-description 0)
    (avoid-errors 0)
    (serve-cached-role 1)
    (def-event-interpreter 2)
    (do-data-points 0)
    (iterate-over-monochrome-raster-list-if-appropriate 1)
    (def-role 2)
    (execute-body-if-embedded-option-is-authorized-or-predicate-true 1)
    (def-slot-putter 2)
    (fixnum-case 1)
    (key-case 1)
    (with-managed-objects 1)
    (with-interned-compilation-local-name-symbols 0)
    (def-frame-note-writer 2)
    (execute-body-if-icp-is-authorized-or-predicate-true 1)
    (with-local-color 0)
    (with-coordinates-adjusted-for-region 2)
    (as-atomic-operation 0)
    (execute-body-if-restricted-use-option-is-authorized-or-predicate-true 1)
    (do-for-array-elements 2)
    (with-memory-checking 0)
    (declare-system 1)
    (defun-for-player 2)
    (with-gensym-window-for-printing 1)
    (def-part-feature 1)
    (on-polychrome-scratchpad-raster 1)
    (temporary-progn 1)
    (expiring-progn 1)
    (write-compiler-warning 0)
    (def-role-printer 1)
    (def-defun-modification 2)
    (deftype-writer 2)
    (define-deactivate-method-for-cell-based-display 1)
    (def-icp-message-functions 2)
    (with-ftp-retry 0)
    (with-lisp-pathname-components 1)
    (do-long-operation-with-notification 1)
    (handling-file-errors 0)
    (with-protected-pathname-conversion 1)
    (execute-body-if-japanese-is-authorized 0)
    (do-axis 0)
    (with-current-marking-state 1)
    (def-plot-format 1)
    (with-offsets-for-region-and-tile 3)
    (cond-with-temporaries 0)
    (with-bounding-box-paramenters 1)
    (writing-number-string-into-fixed-field 1)
    (deftype-simple 2)
    (def-evaluation-value-copier 1)
    (def-slot-value-reclaimer 2)
    (orient-points-for-icon 3)
    (with-permanent-array-creation 0)
    (define-activate-method-for-display 1)
    (with-flattened-protected-let-forms 0)
    (define-slot-putter-causing-graph-reformat 1)
    (execute-body-if-gspan-is-authorized-or-predicate-true 1)
    (twith-output-to-then-use-of-text-string 0)
    (def-action-byte-code-emitter 1)
    (substring-case 1)
    (def-handler-for-printing 2)
    (with-suppressed-pathname-components 2)
    (catch-system-conditions 0)
    (defun-for-macro 2)
    (write-detail-trace-message 0)
    (twith-output-to-text-string 0)
    (protected-let 1)
    (def-workstation-context-operation-handler 1)
    (def-funcalled-instruction 2)
    (with-breaking-on-warnings 1)
    (in-kb 1)
    (def-structure 1)
    (with-graphic-element-projection 1)
    (def-stack-instruction 1)
    (interactive 0)
    (with-fast-icon-slots 1)
    (with-part-type-scanning 0)
    (on-image-plane-without-drawing 1)
    (with-output-to-description-box 0)
    (with-filters 0)
    (with-break-bindings 0)
    (defun-incremental 4)
    (let*-assured 1)
    (def-stack-instruction-emitter 2)
    (evaluation-typecase 1)
    (def-simulation-error-handler 2)
    (def-evaluation-value-writer 1)
    (with-terminal-blinker 0)
    (defun-funcallable 2)
    (with-bindings-for-sim-eval-for-stack 4)
    (for-grammars 1)
    (def-system-frame 2)
    (fuzzy-or 0)
    (ignoring-gensym-file-errors 0)
    (with-current-model-for-variable 1)
    (do-frames-this-represents 1)
    (using-reusable-gensyms 0)
    (iterate-over-history 0)
    (with-circle-info-for-external-draw-primitives 6)
    (at-gensym 0)
    (defun-void 2)
    (with-unlimited-time-slice 0)
    (with-updates-to-representations-supressed 1)
    (at-gensym-1 1)
    (with-sparse-and-full-vector 1)
    (with-saving-context 1)
    (with-painless-errors 0)
    (get-current-value-without-side-effects-wrapper 1)
    (execute-body-if-icp-is-authorized 0)
    (make-list-of-button-status-and-types-of-notes-1 1)
    (def-icp-value-writer 1)
    (on-image-plane 1)
    (without-frame-notes-asserted 1)
    (g2-stream-ignoring-file-errors 0)
    (on-scratchpad-raster 1)
    (def-byte-code-resolver 2)
    (execute-body-if-gsi-is-authorized 0)
    (define-decacheable-structure 7)
    (do-intervals 1)
    (with-appropriate-version 2)
    (def-substitution-macro 2)
    (def-non-savable-frame-flag 3)
    (def-part-feature-type-reclaimer 2)
    (warning-message 2)
    (with-terminal-mode 1)
    (with-shifted-origin 1)
    (with-circle-chords-1 6)
    (with-compilation-bindings 2)
    (def-small-token-menu-item-format 1)
    (with-catch-handlers 1)
    (with-pathname-conversion 1)
    (define-compiler-error 1)
    (with-debug-output 0)
    (writing-font-file 1)
    (def-table-format 1)
    (with-value-history-ring-buffer-or-cascade-1 1)
    (with-zwei-output 1)
    (with-lisp-defaults 0)
    (execute-body-if-runtime-option-is-authorized 0)
    (def-capability-deactivator 2)
    (with-validation-catching 0)
    (execute-body-if-gsi-is-authorized-or-predicate-true 1)
    (write-major-trace-message 0)
    (for-each-grammar-as-current-grammar 0)
    (def-incremental-combiner 2)
    (with-permanent-bignum-creation 0)
    (redef-class 1)
    (write-warning-message 1)
    (without-tracing-icp-writes 0)
    (def-part-type-semantic-check 2)
    (def-goto-tag-recorder 1)
    (character-case 1)
    (class-case 1)
    (with-compiler-goto-tags 0)
    (def-icp-object-type 2)
    (define-ring-buffer 2)
    (do-attribute-table-slots 2)
    (def-player-instruction 2)
    (writing-icp-message-group 1)
    (with-multiple-pathname-components 1)
    (def-role-and-designation-printer 1)
    (special-and 0)
    (def-capability-activator 2)
    (execute-body-if-japanese-is-authorized-or-predicate-true 1)
    (def-slot-value-compiler 2)
    (avoid-errors-on-lispms 0)
    (with-compiler-free-reference-collection 0)
    (def-token-menu-item-format 1)
    (with-simulated-chart-drawing 0)
    (with-procedure-stack-frame-variables-environment 0)
    (with-printing-stream 0)
    (with-coordinates-adjusted-for-tile 5)
    (add-parallel-grammar-rules 2)
    (g2-stream-with-8-byte-file 0)
    (with-temporary-gensym-float-creation 1)
    (do-region-rectangles 1)
    (with-connection 5)
    (with-extreme-edges-minimizing-workspace 1)
    (write-compiler-error 0)
    (with-extreme-edges 1)
    (with-named-dynamic-extent 2)
    (with-interned-conclude-attribute-binding-symbols 0)
    (defmacro-for-postscript 2)
    (defun-substitution-macro 2)
    (with-output-to-text-string 1)
    (serve-cached-inverse-roles 1)
    (with-part-exceptions 1)
    (def-inlined-pseudo-function-with-side-effects 2)
    (with-current-frame-serial-number 1)
    (with-deexposed-output-hold 1)
    (def-named-dynamic-extent 1)
    (execute-body-if-nupec-is-authorized 0)
    (def-preferred-instruction-chooser 1)
    (def-class-choice-action 2)
    (with-permanent-cons-creation 0)
    (with-permanent-non-gensym-float-creation 0)
    (do-projection-thru-region-segment 1)
    (def-part-feature-type-validation 2)
    (with-pathname-conversion-for-merge 1)
    (define-activate-method-for-cell-based-display 1)
    (with-validation-frame 1)
    (with-current-text-string 0)
    (with-simulated-on-image-plane 0)
    (icon-editor-visual-event-case 1)
    (icon-editor-translator-event-case 1)
    (define-deactivate-method-for-entity-display 1)
    (with-permanent-string-creation 0)
    (catch-abort 1)
    (def-evaluation-value-comparitor 1)
    (def-evaluation-value-= 1)
    (with-compiler-environment 0)
    (do-scan-role 1)
    (execute-body-if-kfep-is-authorized-or-predicate-true 1)
    (defun-for-lispm 2)
    (let*-while-true 1)
    (do-kanji-character-descriptions 1)
    (def-enumerated-type 1)
    (with-file-search-path 3)
    (def-obsolete-frame-flag 3)
    (define-analyze-for-consistency 1)
    (def-semi-open-category 1)
    (compiler-let 3)
    (with-protected-streams 0)
    (with-package-specific-symbols 1)
    (with-current-model-for-item 1)
    (avoid-arithmetic-errors 1)
    (def-goto-tag-replacer 1)
    (frame-class-case 1)
    (with-current-model-for-simulation-procedure 1)
    (do-table-iteration 1)
    (execute-body-if-kfep-is-authorized 0)
    (def-special-form-converter 2)
    (enter-new-code-body 1)
    (icon-editor-engine-event-case 1)
    (warning-message* 2)
    (defun-for-top-level 2)
    (with-circular-list 1)
    (def-text-box-format 1)
    (defun-for-lispm-allowing-unwind 2)
    (with-regular-stored-raster-size 1)
    (with-current-grammar-for-current-edit-state 0)
    (with-redefinition-warnings 1)
    (dformat 0)
    (def-inlined-pseudo-function 2)
    (enter-new-lexical-tag-layer 0)
    (with-pathname-components 1)
    (on-window 1)
    (defun-allowing-unwind 2)
    (write-warning-message* 1)
    (in-hfep-context 0)
    (do-image-planes 1)
    (execute-body-if-restricted-use-option-is-authorized 0)
    (with-selection 1)
    (def-funcalled-evaluator 3)
    (with-named-dynamic-extent* 2)
    (with-permanent-gensym-float-creation 0)
    (with-protected-listeners 0)
    (defun-for-postscript 2)
    (with-current-model-and-queue 2)
    (with-standard-values 0)
    (for-workstation 1)
    (with-phrase-conses 0)
    (def-goto-tag-references 1)
    (def-attribute-mimic 4)
    (with-stack-frame-variables 0)
    (do-error-trapping 0)
    (def-action 1)
    (at-gensym-as-ab 0)
    (with-guarded-timestamp 1)
    (on-prepared-scratchpad-raster 0)
    (stack-eval-locals 0)
    (with-standard-error-restart-loop 0)
    (accumulate-compiler-errors 0)
    (in-editing-context 1)
    (def-part-type 1)
    (with-compiler-environment-and-phrase-conses 0)
    (with-current-value-for-button-if-any 1)
    (def-evaluation-value-reclaimer 1)
    (def-icp-value-writer-substitution-macro 1)
    (def-stack-node-instruction-emitter 1)
    (define-clear-display-function 1)
    (on-scratchpad-raster-with-depth 1)
    (def-absent-slot-putter 2)
    (without-updating-chart-point 0)
    (define-deactivate-method-for-display 1)
    (def-action-compiler 1)
    (with-debugging-upon-condition 3)
    (execute-body-if-korean-is-authorized-or-predicate-true 1)
    (with-compiler-stack-nodes 0)
    (in-icon-editor-context 1)
    (destructuring-bind 1)
    (multiple-value-bind 2)
    (execute-body-if-gfi-is-authorized-or-predicate-true 1)
    (execute-body-if-korean-is-authorized 0)
    (with-module-related-frame-note-updates-supressed 0)
    (def-workstation-event-type 1)
    (def-in-line-evaluator 2)
    (with-two-g2-vectors-of-same-length 1)
    (without-consistency-analysis 1)
    (def-class 1)
    (def-slot-value-writer 2)
    (def-class-method 2)
    (def-icp-value-reader 1)
    (def-component 1)
    (top-level-progn-for-postscript 1)
    (def-substitution-macro-with-computed-body-form 2)
    (with-open-icp-connection-for-player 1)
    (with-value-history-ring-buffer-or-cascade 1)
    (define-update-display-function 1)
    (feature-case 0)
    (protected-let* 1)
    (on-window-without-drawing 1)
    (on-window-with-drawing 1)
    (reading-font-file 1)
    (defvar-for-lispm 1)
    (do-g2-array-elements 1)
    (make-region-raster-for-icon 1)
    (with-ordered-macroexpansion 1)
    (with-compiler-code-body-entries 0)
    (define-cell-based-update-display-function 1)
    (execute-body-if-gfi-is-authorized 0)
    (define-chart-data-point-indicator 2)
    (tracing-icp-reads 1)
    (at-gensym-as-superuser 0)
    (do-region-strips 1)
    (with-standard-key-bindings 0)
    (for-workstation-polling 1)
    (with-named-dynamic-extent-given* 2)
    (with-gensyms-for-args 1)
    (with-bindings-for-variable-sim-eval 0)
    (with-ftp-directory 1)
    (def-evaluator 1)
    (call-per-actual-arg-if-necessary 2)
    (class-description-class-case 1)
    (format-text-string 1)
    (with-tty 0)
    (fuzzy-and 0)
    (defun-with-modifications 3)
    (printing-random-object 1)
    (destructuring-lambda-list 2)
    (with-magic-arguments 2)
    (with-mouse-pointer-bindings 2)
    (ab-typecase 1)
    (batch 0)
    (multiple-value-setq-some 2)
    (def-concept 1)
    (with-null-image-plane-transform 0)
    (with-null-drawing-transform 0)
    (with-notifications-deferred 0)
    (with-tformat-output-recording 0)
    (defer-some-consistency-analysis 0)
    (with-draw-area 1)
    (with-faster-standard-output 0)
    (with-deferred-update-of-native-windows 0)
    (with-deferred-xor-drawing 0)
    (protected-let*-for-development 1)
    (evaluating-icon-points 1)
    (with-updating-that-requires-the-draw-function-be-used 0)
    (updating-images-of-block 1)
    (with-dynamic-creation 0)
    (recording-items-made-incomplete 1)
    (symbol-macrolet 1)
    (write-dialogs-stack-error 1)
    (dolist-safely 1)
    (within-parsing-context 1)
    ))

(defun install-ab-indent-table ()
  (let ((list ab-indent-table))
    (while list
      (put (car (car list)) 'common-lisp-indent-function
	   (if (symbolp (cdr (car list)))
	       (get (cdr (car list)) 'common-lisp-indent-function)
	       (car (cdr (car list)))))
      (setq list (cdr list)))))


(install-ab-indent-table)
