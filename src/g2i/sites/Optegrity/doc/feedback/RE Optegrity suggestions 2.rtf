{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fswiss\fcharset0 Arial;}{\f1\froman\fprq2\fcharset0 Bookman Old Style;}{\f2\froman\fprq2\fcharset0 Bookman;}{\f3\froman\fprq2\fcharset0 Times New Roman;}{\f4\fswiss\fprq2\fcharset0 Tahoma;}{\f5\fswiss\fprq2\fcharset0 Arial;}{\f6\fnil\fcharset2 Symbol;}}
{\colortbl ;\red0\green0\blue0;\red0\green0\blue128;}
{\*\generator Riched20 5.40.11.2210;}\viewkind4\uc1\pard\fi-1800\li1800\tx1800\cf1\b\f0\fs20 From:\tab\b0 Steve Sellers\par
\b Sent:\tab\b0 Monday, October 27, 2003 11:59 AM\par
\b To:\tab\b0 Natasha Norwalk\par
\b Subject:\tab\b0 RE: Optegrity suggestions\par
\pard\cf2\f1 Natasha,\par
You\rquote ve pretty well captured my comments. I have inserted from further thoughts in the text below. Thanks\'85Steve\par
\par
\f2 Steve Sellers\par
Gensym Accounts, Northeast & Latin America\par
781-265-7228\par
\f3\fs24\par
\f1\fs20\par
\pard\li720\cf0\f4 -----Original Message-----\line\b From:\b0  Natasha Norwalk \line\b Sent:\b0  Friday, October 24, 2003 3:55 PM\line\b To:\b0  Steve Sellers\line\b Cc:\b0  Natasha Norwalk\line\b Subject:\b0  Optegrity suggestions\f3\fs24\par
\par
\f5\fs20 Here's the list I propose entering into HelpDesk:.  Let me know what you think.  Did I miss anything?\par
\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\fi-380\li1100 Add a link to the tutorial(s) on the Help menu.\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlcont\pnf6\pnindent0{\pntxtb\'B7}}\li720\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlcont\pnf6\pnindent0{\pntxtb\'B7}}\li1100 This would facilitate getting started.\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlcont\pnf6\pnindent0{\pntxtb\'B7}}\li720\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\fi-380\li1100 File > New > Application should automatically create and name a process map\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlcont\pnf6\pnindent0{\pntxtb\'B7}}\li1100\par
{\pntext\f6\'B7\tab}This would 1) give feedback when you create a new application that something has happened and 2) create a default process map with the same name as the application.  Creating an application could then automatically show the "canvas" for building your application\cf2  and labeled with the title that the user has given to the application. Or some other way of giving visible identity to the new application.\cf0\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlcont\pnf6\pnindent0{\pntxtb\'B7}}\li720\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\fi-380\li1100 File > New should be limited to creating high-level things like applications\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlcont\pnf6\pnindent0{\pntxtb\'B7}}\li720\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlcont\pnf6\pnindent0{\pntxtb\'B7}}\li1100 The File > New menu should not be for creating module-like things; you have the Modules menu and palettes for that.  Instead, the Modules menu should provide the New menu choice along with Manage.  This would separate the creation of the application itself (the project) from the creation of the things in the application.  It would also make it obvious how to create new entities in the application.   So File > New would have a single menu choice, Application.\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlcont\pnf6\pnindent0{\pntxtb\'B7}}\li720\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\fi-380\li1100 Make network interface configuration be part of external datapoint configuration.\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlcont\pnf6\pnindent0{\pntxtb\'B7}}\li720\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlcont\pnf6\pnindent0{\pntxtb\'B7}}\li1100 This would eliminate one more "thing" that you have to create, and since datapoint configuration is always associated with a network interface, why not configure it with the datapoint configuration.\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlcont\pnf6\pnindent0{\pntxtb\'B7}}\li720\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\fi-380\li1100 Provide external datapoints in a table not as objects on a detail\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlcont\pnf6\pnindent0{\pntxtb\'B7}}\li720\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlcont\pnf6\pnindent0{\pntxtb\'B7}}\li1100 External datapoints don't need to be \cf2 displayed \cf0\strike represented\strike0  as objects.  It would be better to have them accessible through a table through the datapoint configuration dialog.  That would eliminate the need for showing the detail and showing object representations of datapoints.\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlcont\pnf6\pnindent0{\pntxtb\'B7}}\li720\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\fi-380\li1100 Eliminate completely the display of objects in favor of properties dialogs\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlcont\pnf6\pnindent0{\pntxtb\'B7}}\li720\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlcont\pnf6\pnindent0{\pntxtb\'B7}}\li1100 - Disable the Show Items Upon Menu Selection menu choice and remove it from the menus.\par
{\pntext\f6\'B7\tab}- Remove Go to Superior from process map.\par
{\pntext\f6\'B7\tab}- When creating objects through the Modules > <object> > New menu choice or the Manage dialog, always show the properties dialog, never the object and never the detail.  If you eliminate the detail for the external datapoints block and automatically create the process map when you create the application, as suggested, this means you never have to interact with objects.  You access the detail and perform operations exclusively through the Manage dialog, as planned, using class-specific buttons in the Manage dialog.\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlcont\pnf6\pnindent0{\pntxtb\'B7}}\li720\cf2\f1\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlcont\pnf6\pnindent0{\pntxtb\'B7}}\li1100 As I see it, there should be 2 or 3 ways of viewing and interacting with the components of an application. It\rquote s analogous to PowerPoint where you can choose different perspectives: slides, outline, or thumbnail. This particular perspective draws on pull-down menus and dialogs for configuration. Another perspective might be more object-based and use the process diagram and palettes as the organizing paradigm and a tree layout for navigation. A third perspective could be table-driven. The three viewing modes would be distinct so that the user doesn\rquote t get them confused but they would overlap in the sense that you could perform the same operations in 2 or 3 ways.\par
{\pntext\f6\'B7\tab}\par
{\pntext\f6\'B7\tab}In short, the perspective we\rquote re talking about here is the menu/dialog perspective and it shouldn\rquote t get intermixed with the object view.\par
{\pntext\f6\'B7\tab}\par
{\pntext\f6\'B7\tab}By the way, it\rquote s impossible to think up the solution to this problem \ul a priori\ulnone ; it really requires a process of trying out different interface alternatives with novice users to see how they react.\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlcont\pnf6\pnindent0{\pntxtb\'B7}}\li720\cf0\f5\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\fi-380\li1100  Provide better distinction between what's in View menu vs. Modules menu\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlcont\pnf6\pnindent0{\pntxtb\'B7}}\li720\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlcont\pnf6\pnindent0{\pntxtb\'B7}}\li1100 The View menu implies that you are going to \strike see different\strike0  view\cf2  \cf0\strike s of \strike0 things\cf2  from different perspectives\cf0 , not display palettes for building applications.  The Modules menu is where you create and interact with the various \strike features\strike0  \cf2 components \cf0 of the application.  So maybe the View menu \strike could be\strike0  \cf2 should have a submenu \cf0 called Palettes\cf2  analogous to MS Toolbars\cf0 .  This would mean eliminating the Message Board menu choice, which is fine since that's a G2 developer thing anyway.  \par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlcont\pnf6\pnindent0{\pntxtb\'B7}}\li720\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\fi-380\li1100 Need clearer distinction between palettes\cf2  and more precision in naming conventions.\cf0\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlcont\pnf6\pnindent0{\pntxtb\'B7}}\li720\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlcont\pnf6\pnindent0{\pntxtb\'B7}}\li1100 The Intelligent Objects and Domain Objects palettes contain the same types of objects, which is confusing.  First, the intelligent objects palette should have a label that indicates that it is a library for a particular type of application, namely Intelligent Process Equipment.  Second, Intelligent Sensors should be kept separate from Intelligent equipment since they are generic to many types of applications.  Third, domain objects can be thought of as "templates" for creating your own types of intelligent objects, so maybe you could call that palette Intelligent Object Templates or Domain Object Templates or something like that.  If we are getting away from representing objects altogether, except those in the process map, this would eliminate the need for the Datapoint Management palette.  So here's an alternative to the View menu to consider:\par
{\pntext\f6\'B7\tab}\par
{\pntext\f6\'B7\tab}Palettes > Intelligent Object Libraries > Intelligent Process Equipment\par
{\pntext\f6\'B7\tab}                                                         Intelligent Instrumentation\par
{\pntext\f6\'B7\tab}                                                         <others in future>\par
{\pntext\f6\'B7\tab}               Intelligent Object Templates > Heaters, etc. (Displays kind of doesn't fit anymore)\par
{\pntext\f6\'B7\tab}               Event Detection > Arithmetic, etc.\par
{\pntext\f6\'B7\tab}               Diagnosis > Actions, etc.               \par
{\pntext\f6\'B7\tab}\par
\pard{\pntext\f6\'B7\tab}{\*\pn\pnlvlblt\pnf6\pnindent0{\pntxtb\'B7}}\fi-380\li1100 Remove G2 entirely from Operator and Modeler mode.\par
\pard\li1100\par
- Remove G2 Main Menu from background.\par
- Remove Workspace menu, especially since Get Workspace behaves badly when intelligent objects are loaded.  Workspaces are G2 things.\par
- Remove Message Board menu choice.\par
- Change selection colors to a more muted color scheme so selection isn't so obvious.\par
\cf2\f1 Perhaps the delineation should be that in Operator Mode you are restricted to operations related to Intelligent Objects (i.e. create and configure from the libraries), in Modeler Mode you can operate on Domain Objects (maybe add new attributes to subclasses), and in Developer Mode you get access to G2 (create new classes, procedures, etc.)\par
\pard\li720\cf0\f5\par
\cf1 Tasha\cf0\fs24\par
\fs20\par
\pard\fi-1800\li1800\tx1800\cf1\f0\par
}
 