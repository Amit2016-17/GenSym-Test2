{\rtf1\ansi\ansicpg1252\uc1\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f36\froman\fcharset238\fprq2 Times New Roman CE;}{\f37\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f39\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f40\froman\fcharset162\fprq2 Times New Roman Tur;}{\f41\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f42\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f43\froman\fcharset186\fprq2 Times New Roman Baltic;}
{\f44\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f46\fswiss\fcharset238\fprq2 Arial CE;}{\f47\fswiss\fcharset204\fprq2 Arial Cyr;}{\f49\fswiss\fcharset161\fprq2 Arial Greek;}{\f50\fswiss\fcharset162\fprq2 Arial Tur;}
{\f51\fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f52\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f53\fswiss\fcharset186\fprq2 Arial Baltic;}{\f54\fswiss\fcharset163\fprq2 Arial (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;
\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;
\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red51\green102\blue255;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
\snext0 \styrsid4391755 Normal;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}}{\*\listtable{\list\listtemplateid1466231892\listhybrid{\listlevel\levelnfc0\levelnfcn0
\leveljc0\leveljcn0\levelfollow0\levelstartat26\levelspace0\levelindent0{\leveltext\leveltemplateid-1709252038\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-420\li1140\jclisttab\tx1140\lin1140 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0
\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\fi-360\li1800\jclisttab\tx1800\lin1800 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}\fi-180\li2520\jclisttab\tx2520\lin2520 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698703
\'02\'03.;}{\levelnumbers\'01;}\fi-360\li3240\jclisttab\tx3240\lin3240 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\fi-360\li3960
\jclisttab\tx3960\lin3960 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\fi-180\li4680\jclisttab\tx4680\lin4680 }{\listlevel
\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'06.;}{\levelnumbers\'01;}\fi-360\li5400\jclisttab\tx5400\lin5400 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}\fi-360\li6120\jclisttab\tx6120\lin6120 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0
\levelindent0{\leveltext\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\fi-180\li6840\jclisttab\tx6840\lin6840 }{\listname ;}\listid404767017}{\list\listtemplateid-270624432\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0
\levelfollow0\levelstartat36\levelspace0\levelindent0{\leveltext\leveltemplateid-1553530998\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-420\li1140\jclisttab\tx1140\lin1140 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\fi-360\li1800\jclisttab\tx1800\lin1800 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}\fi-180\li2520\jclisttab\tx2520\lin2520 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698703
\'02\'03.;}{\levelnumbers\'01;}\fi-360\li3240\jclisttab\tx3240\lin3240 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\fi-360\li3960
\jclisttab\tx3960\lin3960 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\fi-180\li4680\jclisttab\tx4680\lin4680 }{\listlevel
\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'06.;}{\levelnumbers\'01;}\fi-360\li5400\jclisttab\tx5400\lin5400 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}\fi-360\li6120\jclisttab\tx6120\lin6120 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0
\levelindent0{\leveltext\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\fi-180\li6840\jclisttab\tx6840\lin6840 }{\listname ;}\listid483743704}{\list\listtemplateid-1519452576\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0
\levelfollow0\levelstartat22\levelspace0\levelindent0{\leveltext\leveltemplateid-492303794\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-420\li1140\jclisttab\tx1140\lin1140 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\fi-360\li1800\jclisttab\tx1800\lin1800 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}\fi-180\li2520\jclisttab\tx2520\lin2520 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698703
\'02\'03.;}{\levelnumbers\'01;}\fi-360\li3240\jclisttab\tx3240\lin3240 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\fi-360\li3960
\jclisttab\tx3960\lin3960 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\fi-180\li4680\jclisttab\tx4680\lin4680 }{\listlevel
\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'06.;}{\levelnumbers\'01;}\fi-360\li5400\jclisttab\tx5400\lin5400 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}\fi-360\li6120\jclisttab\tx6120\lin6120 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0
\levelindent0{\leveltext\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\fi-180\li6840\jclisttab\tx6840\lin6840 }{\listname ;}\listid1581984050}{\list\listtemplateid1389162580\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0
\levelfollow0\levelstartat29\levelspace0\levelindent0{\leveltext\leveltemplateid67556276\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-420\li1140\jclisttab\tx1140\lin1140 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\fi-360\li1800\jclisttab\tx1800\lin1800 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}\fi-180\li2520\jclisttab\tx2520\lin2520 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698703
\'02\'03.;}{\levelnumbers\'01;}\fi-360\li3240\jclisttab\tx3240\lin3240 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\fi-360\li3960
\jclisttab\tx3960\lin3960 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\fi-180\li4680\jclisttab\tx4680\lin4680 }{\listlevel
\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'06.;}{\levelnumbers\'01;}\fi-360\li5400\jclisttab\tx5400\lin5400 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}\fi-360\li6120\jclisttab\tx6120\lin6120 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0
\levelindent0{\leveltext\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\fi-180\li6840\jclisttab\tx6840\lin6840 }{\listname ;}\listid1763144079}{\list\listtemplateid-437122850\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0
\levelfollow0\levelstartat12\levelspace0\levelindent0{\leveltext\leveltemplateid-1366811098\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-420\li1140\jclisttab\tx1140\lin1140 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\fi-360\li1800\jclisttab\tx1800\lin1800 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}\fi-180\li2520\jclisttab\tx2520\lin2520 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698703
\'02\'03.;}{\levelnumbers\'01;}\fi-360\li3240\jclisttab\tx3240\lin3240 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\fi-360\li3960
\jclisttab\tx3960\lin3960 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\fi-180\li4680\jclisttab\tx4680\lin4680 }{\listlevel
\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'06.;}{\levelnumbers\'01;}\fi-360\li5400\jclisttab\tx5400\lin5400 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}\fi-360\li6120\jclisttab\tx6120\lin6120 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0
\levelindent0{\leveltext\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\fi-180\li6840\jclisttab\tx6840\lin6840 }{\listname ;}\listid2093431466}}{\*\listoverridetable{\listoverride\listid2093431466\listoverridecount0\ls1}
{\listoverride\listid1581984050\listoverridecount0\ls2}{\listoverride\listid404767017\listoverridecount0\ls3}{\listoverride\listid1763144079\listoverridecount0\ls4}{\listoverride\listid483743704\listoverridecount0\ls5}}{\*\revtbl {Unknown;}}{\*\rsidtbl \rsid148525
\rsid275151\rsid469404\rsid595393\rsid1049532\rsid1467198\rsid1658691\rsid2635905\rsid4391755\rsid5117312\rsid5591750\rsid6114914\rsid6902038\rsid7043362\rsid7108165\rsid7291851\rsid7539002\rsid8130948\rsid8664282\rsid8795736\rsid9200081\rsid9392564
\rsid9397974\rsid9634722\rsid9635842\rsid9724660\rsid10181467\rsid10972355\rsid11164668\rsid11366429\rsid12076809\rsid13135006\rsid13392338\rsid13661138\rsid13841455\rsid14575900\rsid14760714\rsid14833369\rsid15486983\rsid15558072\rsid16279712
\rsid16515482\rsid16646987}{\*\generator Microsoft Word 10.0.5522;}{\info{\author Philippe Printz}{\operator Philippe Printz}{\creatim\yr2004\mo2\dy22\hr1\min50}{\revtim\yr2004\mo2\dy22\hr10\min59}{\version42}{\edmins93}{\nofpages55}{\nofwords12139}
{\nofchars69197}{\*\company Gensym Corporation}{\nofcharsws81174}{\vern16495}}\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3
\jcompress\viewkind4\viewscale100\nolnhtadjtbl\rsidroot14833369 \fet0\sectd \linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3
\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}
{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain 
\ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\fs20\insrsid14833369 
\par }\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720\faauto\rin0\lin720\itap0 {\f3\insrsid14833369 \'b7\tab }{\b\ul\insrsid14833369 C:\\bt\\g2i\\java\\com\\gensym\\classes}{\insrsid14833369 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\b\cf5\insrsid14833369 1.  ItemImpl.java}{\cf5\insrsid14833369 
\par }{\insrsid14833369 
\par }{\cf2\insrsid14833369 // -------- BEGINNING OF PATCH --------}{\insrsid14833369 
\par /* Overriden method - DELETE */
\par   public void delete (boolean withPermanencyChecksDisabled,
\par \tab \tab       boolean withoutLeavingStubs) throws G2AccessException
\par   \{
\par 
\par }{\i\cf11\insrsid14833369\charrsid14833369 PCP: we need this since it is used to overwrite the default delete behavior. The default deleteItem method return false and therefore works as before, i.e. calls the G2 system produce to dele
te the object. For others we implemented specific methods to call custom methods.}{\i\cf11\insrsid14833369  Something I or Madan patched since we need OO behavior for deletes!}{\i\cf11\insrsid6114914 
  Should be added to T2 since needs to be defined at very low level to work (see below where internal APIs need to be aware of this.)}{\i\cf11\insrsid14833369\charrsid14833369 
\par }{\insrsid14833369 
\par    }{\cf17\insrsid14833369 if}{\insrsid14833369  }{\cf17\insrsid14833369 (com.gensym.core.GensymApplication.getApplication().deleteItem(
\par       this, withPermanencyChecksDisabled, withoutLeavingStubs) == false) \{
\par }{\cf7\insrsid14833369 
\par }{\insrsid14833369        java.lang.Object[] args = new java.lang.Object[]
\par           \{this, withPermanencyChecksDisabled ? Boolean.TRUE : Boolean.FALSE,
\par     \tab  withoutLeavingStubs ? Boolean.TRUE : Boolean.FALSE\};
\par 
\par        context.callRPC (G2_DELETE_ITEM_, args);
\par }{\cf17\insrsid14833369    \}
\par }{\insrsid14833369   \}
\par   }{\cf2\insrsid14833369 // -------- END OF PATCH -------
\par }{\insrsid14833369 
\par 
\par }{\b\cf5\insrsid14833369 2.  G2_BaseImpl
\par }{\insrsid14833369 
\par G2__BaseImpl (G2Access context, int handle, Structure attributes) \{
\par     this.context = context;
\par     classManager = context.getClassManager();
\par     connectionResolver =
\par       ConnectionResolver.getConnectionResolver((G2Gateway)context);
\par     this.handle = handle;
\par 
\par     int handleKeyInt = (handle == 0 ? -super.hashCode () : handle);
\par     handleKey = new Integer (handleKeyInt);
\par     if (handle == 0) \{
\par       // Generate a negative unique number for by-copy Item's
\par       // (i.e. wont conflict with "by-handle" data
\par       //handleKeyInt = -super.hashCode();
\par       // If an independant construction, must ensure that the CLASS att is set
\par     \} else \{
\par     \}
\par 
\par     data = makeDataForItem ();
\par }{\cf17\insrsid14833369     boolean valid = true;
\par }{\insrsid14833369     if (handle > 0) \{
\par       IntHashtable itemHash = getItemHash();
\par       synchronized (itemHash) \{
\par \tab ItemData hashedData = (ItemData)itemHash.get(handle);
\par \tab if (hashedData == null)
\par \tab   itemHash.put(handle, data);
\par }{\i\cf11\insrsid2635905\charrsid14833369 PCP: }{\i\cf11\insrsid2635905 no clue about this one}{\insrsid2635905 
\par }{\insrsid14833369 \tab }{\cf17\insrsid14833369 else if (handleVersion < hashedData.handleVersion) \{
\par \tab   // can happen if an instance of a user-class gets deleted
\par \tab   // and its ICP handle re-used before it is able to finish
\par \tab   // downloading its own class information
\par // \tab   com.gensym.util.Debug3Tier.add_data ("create-wierd", this + ";" + hashedData.handleVersion);
\par \tab   valid = false;
\par \tab \} else if (handleVersion == hashedData.handleVersion) \{ // Why would this be?
\par \tab   // NOTE: We have actually not seen this case
\par // \tab   com.gensym.util.Debug3Tier.add_data ("create-wierd2", this + ";" + hashedData.handleVersion);
\par \tab   (new InvalidItemException((Item)this, "New item found duplicate data in hash table " + this + ";previousData=" + hashedData)).printStackTrace();
\par \tab   data = hashedData;
\par \tab \} else \{ // this is even more confusing if this were to happen
\par \tab   // This would mean that this item is more recent than
\par \tab   // the data in the hashtable is, but for some reason
\par \tab   // the data in the hashtable didn't get cleared out
\par \tab   // when the previous item got destroyed.
\par \tab   // NOTE: haven't seen this case either
\par // \tab   com.gensym.util.Debug3Tier.add_data ("create-wierd3", this + ";" + hashedData.handleVersion);
\par \tab   hashedData.itemIsValid = false;
\par \tab   (new InvalidItemException((Item)this, "New item replacing data in hash table " + this + ";previousData=" + hashedData)).printStackTrace();
\par \tab   itemHash.put(handle, data);
\par }{\insrsid14833369 \tab }{\cf17\insrsid14833369 \}
\par }{\insrsid14833369       \}
\par     \}
\par     }{\cf17\insrsid14833369 data.handleVersion = handleVersion;
\par }{\insrsid14833369     synchronized(data) \{
\par       data.referenceCount++;
\par     \}
\par     data.attributes = (attributes != null ? attributes : new Structure());
\par }{\cf17\insrsid14833369     itemIsValid = valid;
\par }{\insrsid14833369 //     com.gensym.util.Debug3Tier.add_data ("create", this);
\par     Trace.send (DEF_TRACE_LEVEL, traceKey, i18nTrace, "creatingItemImpl",
\par \tab \tab context, new Integer (handle), attributes);
\par     \}
\par 
\par 
\par 
\par private void handleTableCellChanged (Structure newInfo,
\par \tab \tab \tab \tab        java.lang.Object newValue,
\par \tab \tab \tab \tab        Symbol attributeName) \{
\par     try \{
\par       Sequence tableCells = (Sequence)getAttributeValueImpl(attributeName);
\par       int rowIndex
\par \tab = ((Integer)newInfo.getAttributeValue(ROW_INDEX_, null)).intValue();
\par       int columnIndex
\par \tab = ((Integer)newInfo.getAttributeValue(COLUMN_INDEX_, null)).intValue();
\par       Symbol slotName = (Symbol)newInfo.getAttributeValue(CELL_ATTRIBUTE_NAME_);
\par 
\par       if (TABLE_CELLS_.equals(attributeName)) \{
\par \tab Sequence row = (Sequence)tableCells.elementAt(rowIndex);
\par \tab Structure cell = (Structure)row.elementAt(columnIndex);
\par \tab cell.setAttributeValue(slotName, newValue);
\par       \} else \{ //TABLE_ROWS_ case
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid2635905 {\i\cf11\insrsid2635905\charrsid14833369 PCP: }{\i\cf11\insrsid2635905 was related to a bug displaying attribute displays}{\i\cf11\insrsid13135006 
 if I recall but may have been Paul K. who helped on this way back}{\i\cf11\insrsid6114914 . Should be added to T2}{\insrsid2635905 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\cf17\insrsid14833369 /**
\par System.out.println("Info : " + newInfo);
\par System.out.println("Value: " + newValue);
\par System.out.println("Attr : " + attributeName);
\par System.out.println("RowId: " + rowIndex);
\par System.out.println("Cells: " + tableCells);
\par **/
\par         if (rowIndex >= 0 && rowIndex < tableCells.size()) \{
\par }{\insrsid14833369           Structure row = (Structure)tableCells.elementAt(rowIndex);
\par           if (CELL_DISPLAY_TEXT_.equals(slotName))
\par             row.setAttributeValue(RIGHT_TEXT_, newValue);
\par           else
\par             row.setAttributeValue(LEFT_TEXT_, newValue);
\par         \}
\par       }{\cf17\insrsid14833369 \}
\par }{\insrsid14833369 
\par     \} catch (G2AccessException g2ae) \{
\par       throw new UnexpectedException(g2ae); // shouldn't have even called G2
\par     \} catch (NoSuchAttributeException nsae) \{
\par       throw new CorruptionException(nsae); // structure was malformed
\par     \}
\par   \}
\par 
\par 
\par }{\b\cf5\insrsid14833369 3.  KbWorkspaceImpl
\par }{\insrsid14833369 None
\par 
\par }\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720\faauto\rin0\lin720\itap0 {\f3\insrsid14833369 \'b7\tab }{\b\ul\insrsid14833369 C:\\bt\\g2i\\java\\com\\gensym\\classes\\pseudo
\par }{\insrsid14833369 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid469404 {\i\cf11\insrsid469404\charrsid14833369 PCP: }{\i\cf11\insrsid469404 Specific to our stuff and}{\i\cf11\insrsid13392338  don\rquote t add to}{\i\cf11\insrsid8795736  T}{
\i\cf11\insrsid469404 2}{\insrsid469404 
\par }\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720\faauto\rin0\lin720\itap0 {\insrsid469404 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\b\cf5\insrsid14833369 4.  Gfr__GfrObjectWithUuid__ItemListImpl
\par }{\insrsid14833369 The equivalent class is not present in C:\\bt\\ppaliwal\\java\\com\\gensym\\classes\\pseudo directory
\par 
\par }\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720\faauto\rin0\lin720\itap0 {\f3\insrsid14833369 \'b7}{\f3\lang1040\langfe1033\langnp1040\insrsid14833369\charrsid14833369 \tab }{\b\ul\lang1040\langfe1033\langnp1040\insrsid14833369\charrsid14833369 C:\\bt\\g2i
\\java\\com\\gensym\\core
\par }{\lang1040\langfe1033\langnp1040\insrsid14833369\charrsid14833369 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\b\cf5\insrsid14833369 5.  GensymApplication.java
\par }{\insrsid14833369 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid1049532 {\i\cf11\insrsid14575900\charrsid14833369 PCP: }{\i\cf11\insrsid14575900 pretty clear}{\i\cf11\insrsid8664282 
. checkIfPrivate and isBrowserMode is used to disable some functionality that should not be accessible}{\i\cf11\insrsid15486983  and needs runtime decision}{\i\cf11\insrsid6114914 . }{\i\cf11\insrsid13392338 S}{\i\cf11\insrsid6114914 hould be added to TW2
}{\i\cf11\insrsid6114914\charrsid1049532 !}{\i\cf11\insrsid1049532  Would be good to define empty }{\cf11\insrsid1049532\charrsid1049532 setApplicationBusy() and }{\cf11\insrsid1049532 setAppl}{\cf11\insrsid11366429 icationNormal() in here as well, which 
would then avoid referring to the escor app below which is a specific functionality}{\cf11\insrsid275151  (typically they should select}{\cf11\insrsid10972355 /deselect}{\cf11\insrsid275151  the busy cursor for the application).}{
\cf11\insrsid1049532\charrsid1049532 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid14575900 {\insrsid14575900 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid14575900 
\par }{\cf17\insrsid14833369 // -------- BEGINNING OF PATCH --------
\par   // Patch sfor e-SCOR to enable additional hooks to influence behavior of
\par   // core classes. Applications can customize these APIs to implement specific
\par   // behavior and checks.
\par 
\par   //  com.gensym.core.GensymApplication.getApplication()).checkIfPrivate(data.getItem(), false);
\par 
\par   //
\par   //  Check if an Item is private
\par   //
\par   public boolean checkIfPrivate(com.gensym.classes.Item itm, boolean showMessage) \{
\par     return false;
\par   \}
\par 
\par   //
\par   //  Returns true if the current user is in browser mode, i.e. if he
\par   //  can browse the application without being able to performing any change.
\par   //
\par   public boolean isBrowserMode() \{
\par     return false;
\par   \}
\par 
\par   //
\par   // getAppFrame
\par   //
\par   public java.awt.Frame getAppFrame() \{
\par     return null;
\par   \}
\par 
\par   //
\par   //  Get Workspace Title
\par   //
\par   public String getWorkspaceTitle(Object item) \{
\par     return null;
\par   \}
\par 
\par   //
\par   //  Delete an object. Return true if handled, false otherwise. Core APIs
\par   //  will delete object if false is returned.
\par   //
\par   public boolean deleteItem (Object itm,
\par       boolean withPermanencyChecksDisabled,
\par       boolean withoutLeavingStubs) throws com.gensym.jgi.G2AccessException \{
\par 
\par     return false;
\par   \}
\par 
\par 
\par   // -------- END OF PATCH --------
\par 
\par }\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720\faauto\rin0\lin720\itap0 {\f3\insrsid14833369 \'b7\tab }{\b\ul\insrsid14833369 C:\\bt\\g2i\\java\\com\\gensym\\dlgruntime
\par 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\b\cf5\insrsid14833369 6.  DialogManager.java}{\insrsid14833369 
\par public void editItem(Component requestingComponent, Item item, Symbol userMode, Locale locale)
\par   throws G2AccessException, MalformedURLException, ResourceInstantiationException \{
\par 
\par }{\i\cf11\insrsid9635842\charrsid14833369 PCP: }{\i\cf11\insrsid9635842 one example where the additions to GensymApplication are used to determine at runtime if an item can be edited or not.}{\i\cf11\insrsid4391755  Should be added to T2}{
\i\cf11\insrsid9635842 
\par }{\insrsid4391755 
\par }{\cf17\insrsid14833369     boolean isItemPrivate = com.gensym.core.GensymApplication.getApplication().checkIfPrivate(item, true);
\par     if (isItemPrivate == true)
\par       return;
\par }{\insrsid14833369 
\par     Frame owner = getFrameFromComponent(requestingComponent);
\par     if (owner == null)
\par       owner = getFrameForDialog();
\par     DialogResource resource = findResource (item, userMode, locale);
\par     if (resource instanceof GeneratedDialogResource)
\par       \{
\par \tab TwAccess connection = (TwAccess) ((ImplAccess)item).getContext();
\par \tab ItemProxy proxy = new ItemProxy();
\par \tab proxy.setProxy(item);
\par \tab DialogCommand dlgCmd = new DialogCommand();
\par \tab dlgCmd.setProxies(new ItemProxy[]\{proxy\});
\par \tab Component dialog = dialogFactory.generateDialog(owner, connection, proxy, dlgCmd, locale);
\par \tab DefaultGeneratedDialogLauncher launcher =
\par \tab   (DefaultGeneratedDialogLauncher)resource.getDialogLauncher();
\par \tab launcher.launch(owner, dialog);
\par \tab //dialog.doHackForAWTTextComponentBug();
\par       \}
\par     else
\par       \{
\par \tab Trace.send (DEF_TRACE_LEVEL, traceKey, i18nTrace, "foundResource", resource, item);
\par \tab DialogReader   reader   = resource.getDialogReader();
\par \tab Object dialogResource   = resource.makeResource ();
\par \tab Trace.send (DEF_TRACE_LEVEL, traceKey, i18nTrace, "createdResource", dialogResource);
\par \tab Component dialog        = reader.getComponent (dialogResource);
\par \tab Trace.send (DEF_TRACE_LEVEL, traceKey, i18nTrace, "gotComponentForLaunch", dialog);
\par \tab ItemProxy[] proxies     = reader.getItemProxies (dialogResource);
\par \tab Trace.send (DEF_TRACE_LEVEL, traceKey, i18nTrace, "gotProxiesForLaunch", proxies);
\par \tab int index = 0;
\par \tab   for (int i=0; i<proxies.length; i++)\{
\par \tab     if ((proxies[i].getSubObjectAttribute() == null)||
\par \tab \tab (proxies[i].getSubObjectAttribute().equals("")))\{
\par \tab       index = i;
\par \tab       break;
\par \tab     \}
\par \tab   \}
\par \tab DialogCommand closer     = reader.getDialogCommand (dialogResource);
\par \tab DialogLauncher launcher = resource.getDialogLauncher();
\par \tab launcher.launch (dialog, proxies[index], item, closer);
\par       \}
\par   \}
\par 
\par 
\par }\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720\faauto\rin0\lin720\itap0 {\f3\insrsid14833369 \'b7\tab }{\b\ul\insrsid14833369 C:\\bt\\g2i\\java\\com\\gensym\\jgi
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid14833369 
\par }{\b\cf5\insrsid14833369 7.  GsiLoopThread.java
\par }{\insrsid14833369 
\par }{\i\cf11\insrsid4391755\charrsid14833369 PCP: }{\i\cf11\insrsid4391755 bug fix}{\i\cf11\insrsid595393  to avoid throwing exceptions}{\i\cf11\insrsid4391755 . Should be added to T2}{\insrsid4391755 
\par }{\insrsid14833369 public Work dequeue () \{
\par     try \{
\par \tab }{\cf17\insrsid14833369 // PATCH BY PCP. NEED TO CHECK IF ELEMENT IN QUEUE!!!
\par \tab \tab }{\insrsid14833369 if (work_queue.size() > 0)
\par \tab \tab \tab return (Work)work_queue.remove (0);
\par \tab \tab }{\cf17\insrsid14833369 return null;
\par }{\insrsid14833369 \tab \} catch (ArrayIndexOutOfBoundsException e) \{
\par       return null;
\par     \}
\par   \}
\par 
\par }\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720\faauto\rin0\lin720\itap0 {\f3\insrsid14833369 \'b7\tab }{\b\ul\insrsid14833369 C:\\bt\\g2i\\java\\com\\gensym\\ntw\\files
\par 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\b\cf5\insrsid14833369 8.  G2ServerFile.java
\par }{\insrsid14833369 public boolean isDirectory()
\par   \{
\par     try \{
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid4391755 {\i\cf11\insrsid4391755\charrsid14833369 PCP: }{\i\cf11\insrsid4391755 bug fix. Should be added to T2}{\insrsid4391755 , but don\rquote t recall context.
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\cf17\insrsid14833369       boolean b = getType().isContainer();
\par       return b;
\par }{\insrsid14833369     \} catch (TypeNotSetException tnse) \{
\par       if (URLFile.debug) \{
\par        System.out.println("CALLING IS DIRECTORY FOR " + this);
\par        Thread.dumpStack();
\par       \}
\par }{\cf17\insrsid14833369       boolean b = g2DirectoryExists(filename) &&  g2FileIsDirectory(filename);
\par       return b;
\par }{\insrsid14833369     \}
\par   \}
\par 
\par }\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720\faauto\rin0\lin720\itap0 {\f3\insrsid14833369 \'b7\tab }{\b\ul\insrsid14833369 C:\\bt\\g2i\\java\\com\\gensym\\ntw\\util
\par 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\b\cf5\insrsid14833369 9.  AttributeHelper.java
\par }{\insrsid14833369 public static String getTableHeader(Item item) throws G2AccessException \{
\par     //item.getTableHeader();//NOTE: attribute not cachable!
\par     String header = "";
\par     Object name=null;
\par     if ((item instanceof Statement && !(item instanceof Rule)) ||
\par \tab (item instanceof Procedure && !(item instanceof MethodDeclaration))) \{
\par       String text = null;
\par       if (item instanceof Statement)
\par \tab text = ((Statement)item).getText();
\par       else
\par \tab text = ((Procedure)item).getText();
\par       if (text != null) \{
\par \tab int paren = text.indexOf('(');
\par \tab if (paren >0)
\par \tab   name = text.substring(0,paren);
\par       \}
\par     \} else if (item instanceof ClassDefinition) \{
\par       name = ((ClassDefinition)item).getClassName();
\par     \} else if (item instanceof Relation) \{
\par       name = ((Relation)item).getRelationName();
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid4391755 {\i\cf11\insrsid4391755 
\par }{\i\cf11\insrsid4391755\charrsid14833369 PCP:}{\i\cf11\insrsid4391755  The goal was to support custom captions/titles for workspace views, especially if it does not have a g2 name and needed to add additional custo
m information in title. This change was added before G2 had an attribute on workspaces in G2 to specify a caption title. This could be changed to use that attribute if it is a text instead of using a method call. Should be added to T2 here I suppose.}{
\i\cf11\insrsid11164668  Attributes on workspaces to get title name is title-bar-text. We can then set it in the server to what we want (which we do in e-SCOR 4.1) and the native MS ui will use this one.}{\insrsid4391755 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid4391755 
\par }{\insrsid14833369     }{\cf17\insrsid14833369 \} else if (item instanceof com.gensym.classes.KbWorkspace) \{
\par 
\par       String a_title = com.gensym.core.GensymApplication.getApplication().getWorkspaceTitle(item);
\par 
\par       if (a_title != null && !(a_title.equals(""))) \{
\par         name = a_title.trim().replace('\\n', ' ');
\par       \}
\par }{\insrsid14833369 
\par     \} else if (item instanceof Block)
\par       name = ((Block)item).getNames();
\par     if (name != null && !NONE_.equals(name))
\par       header = name+", ";
\par     header += "a "+ item.getG2ClassName().toString();
\par     return header.toLowerCase();
\par   \}
\par 
\par 
\par }{\b\cf5\insrsid14833369 10.  BrowserScrollPane.java}{\insrsid14833369 
\par public BrowserScrollPane(TwAccess cxn)
\par }{\i\cf11\insrsid5591750\charrsid14833369 PCP:}{\i\cf11\insrsid5591750  below is very old patch\'85 Paul K. helped at the time to work on all this and get the tree view behavior working. We can either keep our patch or put into T2. I don\rquote 
t think all this is actually published and used in the shell, therefore making it easier to decide if we should add it to T2.}{\insrsid5591750 
\par }{\insrsid14833369   \{
\par }{\cf17\insrsid14833369     setFont(com.gensym.uitools.utils.FontUtil.sanserifPlain11);
\par }{\insrsid14833369 
\par     dataFactory = createInstanceDataFactory();
\par     menuFactory = createInstancePopupMenuFactory();
\par     setConnection(cxn);
\par   \}
\par 
\par private void buildTree() \{
\par     rootNode = createRootNode();
\par 
\par     treeModel= new BasicTreeModel(rootNode);
\par }{\cf17\insrsid14833369     tree = new JTree(treeModel);
\par }{\insrsid14833369 
\par     treeModel.addTreeModelListener(this);
\par     tree.addTreeSelectionListener(this);
\par     ToolTipManager.sharedInstance().registerComponent(tree);
\par     tree.setCellRenderer(new BasicTreeCellRenderer());
\par     tree.setRowHeight(-1); // if less than 0, the cell renderer is queried for each entry
\par     tree.setEditable(false);
\par     tree.setRootVisible(false);
\par     tree.addMouseListener(new MouseEventListener());
\par   \}
\par 
\par }{\cf17\insrsid14833369 private static final Symbol GO_TO_ITEM_ = Symbol.intern("GO-TO-ITEM");
\par }{\insrsid14833369 
\par class MouseEventListener extends MouseAdapter \{
\par     public void mouseReleased(MouseEvent e) \{
\par 
\par       JTree tree = (JTree)e.getSource();
\par       }{\lang1036\langfe1033\langnp1036\insrsid14833369 int x = e.getX();
\par       int y = e.getY();
\par       }{\insrsid14833369 TreePath path = tree.getPathForLocation(x, y);
\par 
\par       if ((path != null) && (isPopupTrigger(e))) \{
\par 
\par \tab       tree.setSelectionPath(path);
\par \tab       BasicTreeNode node = (BasicTreeNode)path.getLastPathComponent();
\par \tab       InstanceData data = (InstanceData)node.getUserObject();
\par \tab       JPopupMenu menu = ((InstancePopupMenuFactory)menuFactory).createInstancePopupMenu(cxn, data.getDataType(), tree);
\par \tab       if (menu != null)
\par \tab         menu.show(tree, x+1, y+1);
\par 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid9634722 {\i\cf11\insrsid9634722\charrsid14833369 PCP: }{\i\cf11\insrsid9634722 to implement double click behavior on nodes in the tree}{\insrsid9634722 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid9634722 
\par }{\insrsid14833369       }{\cf17\insrsid14833369 \} else if(path != null && e.getModifiers() == MouseEvent.BUTTON1_MASK && e.getClickCount() > 1) \{
\par 
\par  \tab       tree.setSelectionPath(path);
\par \tab       BasicTreeNode node = (BasicTreeNode)path.getLastPathComponent();
\par 
\par         if (node != null && node.isLeaf() == true) \{
\par 
\par   \tab       }{\cf17\lang1040\langfe1033\langnp1040\insrsid14833369\charrsid14833369 InstanceData data = (InstanceData)node.getUserObject();
\par 
\par           Symbol dataType = data.getDataType();
\par           KbWorkspace wksp;
\par           }{\cf17\insrsid14833369 Structure particulars = new Structure();
\par 
\par           try \{
\par 
\par             if (dataType.equals(KB_WORKSPACE_)) \{
\par 
\par \tab             wksp = (KbWorkspace)data.getItem();
\par \tab             wksp.show(particulars);
\par 
\par             \} else \{
\par 
\par             \tab Item item = data.getItem();
\par             \tab Sequence parents = item.getContainmentHierarchy();
\par 
\par \tab             if (!parents.isEmpty()) \{
\par 
\par \tab               wksp = (KbWorkspace)parents.elementAt(0);
\par \tab               particulars.setAttributeValue(ITEM_, item);
\par \tab               particulars.setAttributeValue(GO_TO_ITEM_, new Boolean(true));
\par \tab               wksp.show(particulars);
\par           \tab   \}
\par             \}
\par           \} catch (G2AccessException gae) \{
\par             Trace.exception(gae);
\par           \}
\par         \}
\par }{\insrsid14833369       \}
\par     \}
\par   \}
\par 
\par }{\b\cf5\insrsid14833369 11. DefaultObjectInstancePopupMenuFactory.java
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid13841455 {\i\cf11\insrsid13841455\charrsid14833369 PCP:}{\i\cf11\insrsid13841455  below is very old patch\'85
 Paul K. helped at the time to work on all this and get the tree view behavior working. We can either keep our patch or put into T2. I don\rquote t think all this is actually publ
ished and used in the shell, therefore making it easier to decide if we should add it to T2.}{\insrsid13841455 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\cf17\insrsid13841455 
\par }{\cf17\insrsid14833369\charrsid14833369 import com.gensym.dlg.ErrorDialog;
\par }{\cf17\insrsid14833369\charrsid595393 import com.gensym.dlg.StandardDialogClient;
\par import com.gensym.dlg.InputDialog;
\par }{\cf17\lang1036\langfe1033\langnp1036\insrsid14833369 import com.gensym.dlg.StandardDialog;
\par import com.gensym.dlg.StandardDialogClient;
\par }{\lang1036\langfe1033\langnp1036\insrsid14833369 
\par }{\cf17\insrsid14833369 static Resource i18n_ = Resource.getBundle("com/gensym/shell/commands/Messages");
\par 
\par }{\insrsid14833369 public JPopupMenu createInstancePopupMenu(TwAccess connection,
\par \tab \tab \tab \tab \tab     Symbol dataType,
\par \tab \tab \tab \tab \tab     JTree tree) \{
\par     }{\lang1036\langfe1033\langnp1036\insrsid14833369 cxn = connection;
\par     JPopupMenu menu = null;
\par 
\par }{\cf17\lang1036\langfe1033\langnp1036\insrsid14833369     }{\cf17\insrsid14833369 TreePath path = tree.getLeadSelectionPath();
\par     boolean isItemPrivate = false;
\par 
\par     BasicTreeNode node = (BasicTreeNode)path.getLastPathComponent();
\par     if (node != null) \{
\par       InstanceData data = (InstanceData)node.getUserObject();
\par       if (data != null) \{
\par         isItemPrivate = com.gensym.core.GensymApplication.getApplication().checkIfPrivate(data.getItem(), false);
\par       \}
\par     \}
\par }{\insrsid14833369 
\par     if (dataType.equals(MODULE_))
\par }{\cf17\insrsid14833369        menu = createModulePopupMenu(tree, isItemPrivate);
\par }{\insrsid14833369     else if (dataType.equals(KB_WORKSPACE_))
\par }{\cf17\insrsid14833369       menu = createKbWorkspacePopupMenu(tree, isItemPrivate);
\par }{\insrsid14833369     else if (dataType.equals(ITEM_) ||
\par \tab      dataType.equals(ENTITY_) ||
\par \tab      dataType.equals(G2_DEFINITION_) ||
\par \tab      dataType.equals(PROCEDURE_))
\par }{\cf17\insrsid14833369       menu = createItemPopupMenu(tree, dataType, isItemPrivate);
\par }{\insrsid14833369     /*if (menu != null) \{
\par       menu.addSeperator();
\par       JMenuItem menuItem = new JMenuItem(EXPAND_ALL);
\par       }{\lang1036\langfe1033\langnp1036\insrsid14833369\charrsid14833369 menuItem.addActionListener(popupMenuAdapter);
\par       menu.add(menuItem);
\par     }{\insrsid14833369 \}\tab */
\par     return menu;
\par   \}
\par }{\cf17\insrsid14833369 
\par private JPopupMenu createModulePopupMenu(JTree tree, boolean isItemPrivate)}{\insrsid14833369  \{
\par     JPopupMenu menu = new JPopupMenu();
\par     JMenuItem menuItem;
\par 
\par     JMenu newMenu = new JMenu("New");
\par }{\cf17\insrsid14833369     newMenu.setFont(com.gensym.uitools.utils.FontUtil.sanserifPlain11);
\par }{\insrsid14833369 
\par     newMenu.add(menuItem = new JMenuItem(NEW_WORKSPACE));
\par     menuItem.addActionListener(popupMenuAdapter);
\par }{\cf17\insrsid14833369     menuItem.setFont(com.gensym.uitools.utils.FontUtil.sanserifPlain11);
\par     menuItem.setEnabled(!isItemPrivate);
\par }{\insrsid14833369 
\par     newMenu.add(menuItem = new JMenuItem(NEW_MODULE));
\par     menuItem.addActionListener(popupMenuAdapter);
\par }{\cf17\insrsid14833369     menuItem.setFont(com.gensym.uitools.utils.FontUtil.sanserifPlain11);
\par     menuItem.setEnabled(!isItemPrivate);
\par 
\par //    menu.add(menuItem = new JMenuItem(DELETE_MODULE));
\par //    menuItem.addActionListener(popupMenuAdapter);
\par //    menuItem.setFont(com.gensym.uitools.utils.FontUtil.sanserifPlain11);
\par }{\insrsid14833369 
\par     menu.add(menuItem = new JMenuItem(PROPERTIES));
\par     menuItem.addActionListener(popupMenuAdapter);
\par }{\cf17\insrsid14833369     menuItem.setFont(com.gensym.uitools.utils.FontUtil.sanserifPlain11);
\par     menuItem.setEnabled(!isItemPrivate);
\par 
\par     menu.add(newMenu);
\par }{\insrsid14833369     menu.setInvoker(tree);
\par 
\par     return menu;
\par   \}
\par }{\cf17\insrsid14833369 
\par private JPopupMenu createKbWorkspacePopupMenu(JTree tree, boolean isItemPrivate)}{\insrsid14833369  \{
\par     JPopupMenu  menu = new JPopupMenu();
\par     JMenuItem menuItem;
\par 
\par     menu.add(menuItem = new JMenuItem(GO_TO));
\par     menuItem.addActionListener(popupMenuAdapter);
\par }{\cf17\insrsid14833369     menuItem.setFont(com.gensym.uitools.utils.FontUtil.sanserifPlain11);
\par     menuItem.setEnabled(!isItemPrivate);
\par 
\par }{\insrsid14833369     menu.addSeparator();
\par 
\par     menu.add(menuItem = new JMenuItem(PROPERTIES));
\par     menuItem.addActionListener(popupMenuAdapter);
\par }{\cf17\insrsid14833369     menuItem.setFont(com.gensym.uitools.utils.FontUtil.sanserifPlain11);
\par     menuItem.setEnabled(!isItemPrivate);
\par }{\insrsid14833369 
\par     menu.setInvoker(tree);
\par 
\par     return menu;
\par   \}
\par }{\cf17\insrsid14833369 
\par private JPopupMenu createItemPopupMenu(JTree tree, Symbol dataType, boolean isItemPrivate)}{\insrsid14833369  \{
\par     JPopupMenu menu = new JPopupMenu();
\par     JMenuItem menuItem;
\par 
\par     /*if (dataType.equals(CLASS_DEFINITION_) ||
\par \tab dataType.equals(G2_DEFINITION_)) \{//check instantiability too!
\par       menu.add(menuItem = new JMenuItem(CREATE_INSTANCE));
\par       menuItem.addActionListener(popupMenuAdapter);
\par     \}*/
\par 
\par     if (dataType.equals(PROCEDURE_)) \{
\par       menu.add(menuItem = new JMenuItem(EDIT_TEXT));
\par       menuItem.addActionListener(popupMenuAdapter);
\par       }{\cf17\insrsid14833369 menuItem.setFont(com.gensym.uitools.utils.FontUtil.sanserifPlain11);
\par       menuItem.setEnabled(!isItemPrivate);
\par }{\insrsid14833369     \}
\par 
\par     menu.add(menuItem = new JMenuItem(GO_TO));
\par     menuItem.addActionListener(popupMenuAdapter);
\par }{\cf17\insrsid14833369     menuItem.setFont(com.gensym.uitools.utils.FontUtil.sanserifPlain11);
\par     menuItem.setEnabled(!isItemPrivate);
\par }{\insrsid14833369 
\par     menu.addSeparator();
\par 
\par     menu.add(menuItem = new JMenuItem(PROPERTIES));
\par     menuItem.addActionListener(popupMenuAdapter);
\par }{\cf17\insrsid14833369     menuItem.setFont(com.gensym.uitools.utils.FontUtil.sanserifPlain11);
\par     menuItem.setEnabled(!isItemPrivate);
\par }{\insrsid14833369 
\par     menu.setInvoker(tree);
\par 
\par     return menu;
\par   \}
\par 
\par private void handleGoToAction(InstanceData data) \{
\par }{\insrsid13661138 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid13661138 {\i\cf11\insrsid13661138\charrsid14833369 PCP:}{\i\cf11\insrsid13661138  as earlier\'85 disable go to private items such as workspaces that we don\rquote 
t want users to have access to including wks made proprietary. The api checIfPrivate will decide what is applicable based on the context.}{\insrsid13661138 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid14833369 
\par }{\cf17\insrsid14833369     boolean isItemPrivate = com.gensym.core.GensymApplication.getApplication().checkIfPrivate(data.getItem(), true);
\par     if (isItemPrivate == true)
\par       return;
\par }{\insrsid14833369 
\par     Symbol dataType = data.getDataType();
\par     KbWorkspace wksp;
\par     Structure particulars = new Structure();
\par     try \{
\par       if (dataType.equals(KB_WORKSPACE_)) \{
\par \tab wksp = (KbWorkspace)data.getItem();
\par \tab wksp.show(particulars);
\par       \} else \{
\par \tab Item item = data.getItem();
\par \tab Sequence parents = item.getContainmentHierarchy();
\par \tab if (!parents.isEmpty()) \{
\par \tab   wksp = (KbWorkspace)parents.elementAt(0);
\par \tab   particulars.setAttributeValue(ITEM_, item);
\par \tab   particulars.setAttributeValue(GO_TO_ITEM_, new Boolean(true));
\par \tab   wksp.show(particulars);
\par \tab \}
\par       \}
\par     \} catch (G2AccessException gae) \{
\par       Trace.exception(gae);
\par     \}
\par   \}}{\cf17\insrsid14833369 
\par }{\insrsid14833369 
\par private void handlePropertiesAction(Component component, InstanceData data) \{
\par 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid13661138 {\i\cf11\insrsid13661138\charrsid14833369 PCP:}{\i\cf11\insrsid13661138  as earlier\'85 disable go to private items such as workspaces that we don\rquote 
t want users to have access to including wks made proprietary. The api checIfPrivate will decide what is applicable based on the context.}{\insrsid13661138 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid13661138 
\par }{\cf17\insrsid14833369     boolean isItemPrivate = com.gensym.core.GensymApplication.getApplication().checkIfPrivate(data.getItem(), true);
\par     if (isItemPrivate == true)
\par       return;
\par }{\insrsid14833369 
\par     Symbol dataType = data.getDataType();
\par     }{\insrsid14833369\charrsid14833369 try \{
\par       DialogManager dlgManager = cxn.getDialogManager();
\par       Symbol userMode = cxn.getUserMode();
\par       }{\insrsid14833369 Item item = data.getItem();
\par       if (item != null) \{
\par \tab dlgManager.editItem(component, item, userMode, java.util.Locale.getDefault());
\par       \} else if (dataType.equals(MODULE_)) \{
\par \tab Module module = data.getModule();
\par \tab dlgManager.editItem (component, module.getModuleInformation(), userMode,
\par \tab \tab \tab      java.util.Locale.getDefault());
\par       \}
\par     \}
\par     catch (G2AccessException gae) \{
\par       Trace.exception(gae);
\par     \}
\par     catch (ResourceInstantiationException rie) \{
\par       Trace.exception(rie);
\par     \}
\par     catch (MalformedURLException mue) \{
\par       Trace.exception(mue);
\par     \}
\par   \}
\par 
\par private void handleNewModuleAction(Window window, InstanceData data) \{
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid13661138 {\i\cf11\insrsid13661138\charrsid14833369 PCP:}{\i\cf11\insrsid13661138  as earlier\'85 disable go to private items such as workspaces that we don\rquote 
t want users to have access to including wks made proprietary. The api checIfPrivate will decide what is applicable based on the context.}{\insrsid13661138 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid14833369 
\par }{\cf17\insrsid14833369     boolean isItemPrivate = com.gensym.core.GensymApplication.getApplication().checkIfPrivate(data.getItem(), true);
\par     if (isItemPrivate == true)
\par       return;
\par }{\insrsid14833369 
\par     ModuleInformation currentModule = (ModuleInformation)data.getItem();
\par     if (currentModule != null) \{
\par }{\cf17\insrsid14833369       InputDialog dlg = new InputDialog(
\par           com.gensym.core.GensymApplication.getApplication().getAppFrame(),
\par           i18n_.getString("NewModuleTitle"),
\par           true,
\par \tab   new String[] \{i18n_.getString("NewModuleNamePrompt")\},
\par \tab   new String[] \{"",""\}, null);
\par 
\par }{\insrsid14833369       dlg.setVisible(true);
\par }{\cf17\insrsid14833369       String[] results = dlg.getResults();
\par       if (results != null && results.length > 0) \{
\par         String name = results[0].trim();
\par         Symbol s = Symbol.intern(name.toUpperCase());
\par 
\par         try \{
\par 
\par           com.gensym.classes.UiClientSession session = cxn.retrieveSession();
\par           Symbol NONE_ = Symbol.intern("NONE");
\par           Symbol currentModuleName = currentModule.getTopLevelModule();
\par 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid1658691 {\i\cf11\insrsid1658691\charrsid14833369 PCP: }{\i\cf11\insrsid1658691 we use custom procedures 
to create a new module since the basic system procedure does not add it correctly in the module hierarchy + other setups. We need to keep it, but don\rquote 
t know how to add a non-rethink version in T2, except by adding methods on the GensymApplication that creates/modifies/etc a module and that we can overwrite in escor.java.}{\insrsid1658691 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\cf17\insrsid1658691 
\par }{\cf17\insrsid14833369           Symbol error = (Symbol) cxn.callRPC(
\par                 Symbol.intern("BPR-CREATE-NEW-MODULE"), new Object[]\{s, currentModuleName, session\}, 120000);
\par 
\par           if (NONE_.equals(error) == false) \{
\par             new ErrorDialog(
\par                       null,
\par                       i18n.getString("Error"),
\par                       true,
\par                       i18n.getString("ModuleAlreadyExists"),
\par                       null).setVisible(true);
\par           \}
\par 
\par         \} catch (G2AccessException g2ae) \{
\par           Trace.exception(g2ae);
\par         \}
\par       \}
\par }{\insrsid14833369     \}
\par   \}
\par }{\cf17\insrsid14833369 
\par }{\insrsid14833369 private void handleNewWorkspaceAction(Window window, InstanceData data) \{
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid16646987 {\i\cf11\insrsid16646987\charrsid14833369 PCP:}{\i\cf11\insrsid16646987  as earlier\'85 disable go to private items such as workspaces that we don\rquote 
t want users to have access to including wks made proprietary. The api checIfPrivate will decide what is applicable based on the context.}{\insrsid16646987 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid14833369 
\par }{\cf17\insrsid14833369     boolean isItemPrivate = com.gensym.core.GensymApplication.getApplication().checkIfPrivate(data.getItem(), true);
\par     if (isItemPrivate == true)
\par       return;
\par }{\insrsid14833369 
\par     try \{
\par       KbWorkspace wksp = com.gensym.shell.commands.WorkspaceCommands.createNewWorkspace(cxn);
\par       if (wksp == null) return;
\par       wksp.show(new Structure());
\par       Item item = data.getItem();
\par       if (item instanceof ModuleInformation) \{
\par \tab ModuleInformation currentModule = (ModuleInformation)item;
\par \tab Symbol moduleName = currentModule.getTopLevelModule();
\par \tab wksp.setModuleAssignment(moduleName);
\par       \}
\par     \} catch (G2AccessException gae) \{
\par       Trace.exception(gae);
\par       if (gae.getMessage() != null)
\par \tab new com.gensym.dlg.ErrorDialog (null, i18n.getString("Error"), true,
\par \tab \tab \tab \tab \tab gae.getMessage(), null).setVisible(true);
\par     \}
\par   \}
\par }{\cf17\insrsid14833369 
\par }{\insrsid14833369 private void handleDeleteModuleAction(Window window, InstanceData data) \{
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid16646987 {\i\cf11\insrsid16646987\charrsid14833369 PCP:}{\i\cf11\insrsid16646987  as earlier\'85 disable go to private items such as workspaces that we don\rquote 
t want users to have access to including wks made proprietary. The api checIfPrivate will decide what is applicable based on the context.}{\insrsid16646987 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid14833369 
\par }{\cf17\insrsid14833369     boolean isItemPrivate = com.gensym.core.GensymApplication.getApplication().checkIfPrivate(data.getItem(), true);
\par     if (isItemPrivate == true)
\par       return;
\par }{\insrsid14833369 
\par     ModuleInformation currentModule = (ModuleInformation)data.getItem();
\par     try \{
\par       Symbol moduleName = currentModule.getTopLevelModule();
\par       if (moduleName == null) return;//choice shouldn't be available
\par       DeleteModuleDialog dmd
\par \tab = new DeleteModuleDialog((Frame)window,
\par \tab \tab \tab \tab  "Delete Module " + moduleName.toString().toLowerCase(),
\par \tab \tab \tab \tab  true);
\par       dmd.setVisible(true);
\par       if (dmd.wasCancelled()) return;
\par       LoadSaveKBTools.setDeleteAssociatedWorkspaces(dmd.deleteAssociatedWorkspaces?
\par \tab \tab \tab \tab \tab \tab     Boolean.TRUE:Boolean.FALSE);
\par       LoadSaveKBTools.deleteModule(cxn, moduleName);
\par     \} catch (G2AccessException gae) \{
\par       Trace.exception(gae);
\par       if (gae.getMessage() != null)
\par \tab new com.gensym.dlg.ErrorDialog (null, i18n.getString("Error"), true,
\par \tab \tab \tab  gae.getMessage(), null).setVisible(true);
\par     \}
\par   \}
\par 
\par   private void handleEditTextAction(InstanceData data) \{
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid16646987 {\i\cf11\insrsid16646987\charrsid14833369 PCP:}{\i\cf11\insrsid16646987  as earlier\'85 disable go to private items such as workspaces that we don\rquote 
t want users to have access to including wks made proprietary. The api checIfPrivate will decide what is applicable based on the context.}{\insrsid16646987 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid14833369 
\par }{\cf17\insrsid14833369     boolean isItemPrivate = com.gensym.core.GensymApplication.getApplication().checkIfPrivate(data.getItem(), true);
\par     if (isItemPrivate == true)
\par       return;
\par 
\par }{\insrsid14833369 class PopupMenuActionListener implements ActionListener \{
\par     public void actionPerformed(ActionEvent e) \{
\par       String actionCommand = e.getActionCommand();
\par       JMenuItem menuItem = (JMenuItem)e.getSource();
\par 
\par       JTree invoker = null;
\par       Component comp = menuItem;
\par       while (invoker == null) \{
\par \tab comp = comp.getParent();
\par \tab if (comp instanceof JPopupMenu) \{
\par \tab   comp = ((JPopupMenu)comp).getInvoker();
\par \tab   if (comp instanceof JTree)
\par \tab     invoker =(JTree)comp;
\par \tab \}
\par       \}
\par 
\par       TreePath path = invoker.getLeadSelectionPath();
\par       BasicTreeNode node = (BasicTreeNode)path.getLastPathComponent();
\par       InstanceData data = (InstanceData)node.getUserObject();
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid16646987 {\i\cf11\insrsid16646987\charrsid14833369 PCP:}{\i\cf11\insrsid16646987  as earlier\'85 disable go to private items such as workspaces that we don\rquote 
t want users to have access to including wks made proprietary. The api checIfPrivate will decide what is applicable based on the context.}{\insrsid16646987 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid14833369 
\par }{\cf17\insrsid14833369       boolean isItemPrivate = com.gensym.core.GensymApplication.getApplication().checkIfPrivate(data.getItem(), true);
\par       if (isItemPrivate == true)
\par         return;
\par }{\insrsid14833369 
\par       Container window = invoker;
\par       Container prevWindow = window;
\par       while(window != null && !(prevWindow instanceof Window)) \{
\par \tab prevWindow = window;
\par \tab window = window.getParent();
\par       \}
\par       window = prevWindow;
\par       if (window != null)
\par \tab window.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
\par       if (actionCommand.equals(GO_TO))
\par \tab handleGoToAction(data);
\par       else if (actionCommand.equals(PROPERTIES))
\par \tab handlePropertiesAction(window, data);
\par       else if (actionCommand.equals(EDIT_TEXT))
\par \tab handleEditTextAction(data);
\par       else if (actionCommand.equals(NEW_MODULE))
\par \tab handleNewModuleAction((Window)window, data);
\par       else if (actionCommand.equals(DELETE_MODULE))
\par \tab handleDeleteModuleAction((Window)window, data);
\par       else if (actionCommand.equals(NEW_WORKSPACE))
\par \tab handleNewWorkspaceAction((Window)window, data);
\par       else if (actionCommand.equals(CREATE_INSTANCE))
\par \tab handleCreateInstanceAction((Window)window, data);
\par       else if (actionCommand.equals(EXPAND_ALL))
\par \tab expandAll(invoker, node);
\par       if (window != null)
\par \tab window.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
\par     \}
\par   \}
\par }{\cf17\insrsid14833369 
\par 
\par {\listtext\pard\plain\b\cf5\insrsid14833369 \hich\af0\dbch\af0\loch\f0 12.\tab}}\pard \ql \fi-420\li1140\ri0\nowidctlpar\jclisttab\tx1140\faauto\ls1\rin0\lin1140\itap0\pararsid16646987 {\b\cf5\insrsid14833369 G2FileChooser.java
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid16646987 {\i\cf11\insrsid16646987\charrsid14833369 PCP:}{\i\cf11\insrsid16646987  new Api. Add to T2 to be able to access connection used by file chooser.}{\insrsid16646987 
\par {\listtext\pard\plain\b\cf5\insrsid16646987 \hich\af0\dbch\af0\loch\f0 13.\tab}}\pard \ql \fi-420\li1140\ri0\nowidctlpar\jclisttab\tx1140\faauto\ls1\rin0\lin1140\itap0\pararsid16646987 {\b\cf5\insrsid16646987 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\cf17\insrsid14833369 public TwAccess getConnection()\{
\par     return this.connection;
\par   \}
\par }{\insrsid14833369 
\par }{\b\cf5\insrsid14833369 13.  ModuleList.java
\par }{\insrsid14833369 
\par public ModuleList(TwAccess cxn) \{
\par   }{\cf17\insrsid14833369   setFont(com.gensym.uitools.utils.FontUtil.sanserifPlain11);
\par }{\insrsid14833369     try \{
\par       Module[] modules = cxn.getKb().getModules();
\par       Symbol[] moduleNames = new Symbol[modules.length];
\par       Symbol name;
\par       for (int j=0; j<modules.length; j++) \{
\par \tab name = modules[j].getName();
\par \tab moduleNames[j] = (name != null ? name : UNSPECIFIED_);
\par       }{\lang1036\langfe1033\langnp1036\insrsid14833369 \}
\par       Sorter.sort(moduleNames, Sorter.ASCENDING);
\par       }{\insrsid14833369 Vector moduleVector = new Vector();
\par       for (int i=0; i<modules.length; i++)
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid16646987 {\i\cf11\insrsid16646987\charrsid14833369 PCP:}{\i\cf11\insrsid16646987 
 Change in T2. I think before the modules were listed as upper chase while in other dialogs they were listed as lower case. Changed it to be consistent.}{\insrsid16646987 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid14833369 \tab }{\cf17\insrsid14833369 moduleVector.addElement(moduleNames[i].toString().toLowerCase());}{\insrsid14833369 
\par       setListData(moduleVector);
\par     \} catch (G2AccessException gae) \{
\par       Trace.exception(gae);
\par     \}
\par   \}
\par 
\par }{\b\cf5\insrsid14833369 14.  ModuleSelectionPanel.java
\par }{\insrsid14833369 
\par public ModuleSelectionPanel(TwAccess cxn) \{
\par     setName(i18n.getString("ModuleSelection"));
\par     moduleList = new ModuleList(cxn);
\par     moduleScrollList = new JScrollPane(moduleList);
\par     moduleList.addListSelectionListener(new ListSelectionListener() \{
\par       public void valueChanged(ListSelectionEvent e) \{
\par \tab if (!moduleList.getValueIsAdjusting()) \{
\par }{\i\cf11\insrsid16646987\charrsid14833369 PCP:}{\i\cf11\insrsid16646987  Compensates for setting it to lower case strings below. Converts string to uppercase symbol or if it was added as a symbol uses it as is. Change in T2}{\insrsid16646987 
\par }{\cf17\insrsid14833369           Object o = moduleList.getSelectedValue();
\par           Symbol s;
\par           if (o instanceof String) \{
\par             s = Symbol.intern(((String)o).toUpperCase());
\par           \} else if (o instanceof Symbol) \{
\par             s = (Symbol) o;
\par           \} else \{
\par             s = Symbol.intern("NONE");
\par           \}
\par \tab   setSelectedModule(s);
\par }{\insrsid14833369 \tab \}
\par       \}
\par     \});
\par 
\par 
\par }{\b\cf5\insrsid14833369 15.  ObjectInstanceData.java}{\insrsid14833369 
\par public String getTextRepresentation() \{
\par }{\i\cf11\insrsid16646987\charrsid14833369 PCP:}{\i\cf11\insrsid16646987  Usability to use lowercase strings. Change in T2}{\insrsid16646987 
\par }{\cf17\insrsid14833369     return string.toLowerCase();
\par }{\insrsid14833369   \}
\par 
\par }{\b\cf5\insrsid14833369 16.  ShortItemCommands.java
\par }{\insrsid14833369 
\par public void setSelection(Item[] items) \{
\par     this.selection = items;
\par     boolean available = items != null && items.length > 0;
\par     setAvailable(GO_TO, available);
\par     setAvailable(HIDE, available);
\par     }{\lang1036\langfe1033\langnp1036\insrsid14833369\charrsid14833369 setAvailable(PROPERTIES, available);
\par     setAvailable(DESCRIBE, available);
\par     }{\insrsid14833369 for (int i=0;i<items.length;i++) \{
\par       try \{
\par \tab Item item = items[i];
\par }{\i\cf11\insrsid15558072\charrsid14833369 PCP:}{\i\cf11\insrsid15558072  See above. Managing accessibility based on context to avoid }{\i\cf11\insrsid9200081 that user that doesn\rquote t}{\i\cf11\insrsid15558072  have the correct }{
\i\cf11\insrsid9200081 privilege}{\i\cf11\insrsid15558072  can go to, describe or show the properties of private items.}{\i\cf11\insrsid9200081  Add to T2.}{\insrsid14833369 
\par }{\cf17\insrsid14833369         boolean isItemPrivate = false;
\par         if (item != null)
\par           isItemPrivate = com.gensym.core.GensymApplication.getApplication().checkIfPrivate(item, false);
\par 
\par \tab if (isItemPrivate == true) \{
\par           setAvailable(GO_TO, false);
\par           setAvailable(PROPERTIES, false);
\par           setAvailable(DESCRIBE, false);
\par         \}
\par }{\insrsid14833369 
\par \tab if (getWorkspaceAndItemOnWksp(item) == null)
\par \tab   setAvailable(GO_TO, false);
\par       \} catch(G2AccessException g2ae) \{
\par \tab Trace.exception(g2ae);
\par \tab setAvailable(GO_TO, false);
\par \tab return;
\par       \}
\par     \}
\par   \}
\par 
\par }\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720\faauto\rin0\lin720\itap0 {\f3\insrsid14833369 \'b7\tab }{\b\ul\insrsid14833369 C:\\bt\\g2i\\java\\com\\gensym\\shell\\commands
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid14833369\charrsid14833369 
\par }{\b\cf5\insrsid14833369\charrsid14833369 17.  AlignmentCommands.java}{\b\cf5\insrsid9397974 \line }{\insrsid14833369\charrsid14833369 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid9397974 {\i\cf11\insrsid9397974\charrsid14833369 PCP:}{\i\cf11\insrsid9397974  See above. Managing accessibility based on. Add to T2}{\insrsid9397974 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid14833369\charrsid14833369 
\par public void updateAvailability() \{}{\insrsid14833369 
\par }{\insrsid9200081\charrsid14833369 
\par }{\cf17\insrsid14833369\charrsid14833369     boolean b = com.gensym.core.GensymApplication.getApplication().isBrowserMode();
\par 
\par     }{\cf17\insrsid14833369 boolean state = false;
\par     if (!b && workspaceView != null && currentSelection != null) \{
\par       if (currentSelection.length > 1)
\par         state = true;
\par     \}
\par }{\insrsid14833369 
\par     setAvailable(ALIGN_LEFT, state);
\par     setAvailable(ALIGN_CENTER, state);
\par     setAvailable(ALIGN_RIGHT, state);
\par     setAvailable(ALIGN_TOP, state);
\par     setAvailable(ALIGN_MIDDLE, state);
\par     setAvailable(ALIGN_BOTTOM, state);
\par 
\par     state = false;
\par }{\cf17\insrsid14833369     if (!b && workspaceView != null && currentSelection != null) \{
\par       if (currentSelection.length > 2)
\par         state = true;
\par     \}
\par }{\insrsid14833369     setAvailable(DISTRIBUTE_VERTICALLY, state);
\par     setAvailable(DISTRIBUTE_HORIZONTALLY, state);
\par   }{\insrsid14833369\charrsid14833369 \}
\par 
\par 
\par EditCommands.java
\par 
\par public void updateAvailability()\{
\par }{\cf17\insrsid14833369\charrsid14833369     boolean b = com.gensym.core.GensymApplication.getApplication().isBrowserMode();
\par }{\insrsid14833369\charrsid14833369 
\par     }{\insrsid14833369 if (workspaceView != null) \{
\par       if (currentSelection == null || currentSelection.length == 0) \{
\par \tab // there is no selection
\par \tab setAvailable(CUT_SELECTION, false);
\par \tab setAvailable(COPY_SELECTION, false);
\par       \}
\par       else \{
\par \tab // there is a selection
\par \tab }{\cf17\insrsid14833369 setAvailable(CUT_SELECTION, !b);
\par \tab setAvailable(COPY_SELECTION, !b);
\par }{\insrsid14833369       \}
\par 
\par     }{\cf17\insrsid14833369   setAvailable(PASTE_SELECTION, !b);
\par }{\insrsid14833369 
\par     \} else \{ // workspaceView == null
\par       setAvailable(CUT_SELECTION, false);
\par       }{\insrsid14833369\charrsid14833369 setAvailable(COPY_SELECTION, false);
\par       setAvailable(PASTE_SELECTION, false);
\par     \}
\par   \}
\par 
\par }{\b\cf5\insrsid14833369\charrsid14833369 18.  ItemCommands.java}{\insrsid14833369\charrsid14833369 
\par }{\insrsid14833369 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid9397974 {\i\cf11\insrsid9397974\charrsid14833369 PCP:}{\i\cf11\insrsid9397974  See above. Managing accessibility based on. Add to T2}{\insrsid9397974 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid9397974\charrsid14833369 
\par }{\insrsid14833369\charrsid14833369 public void updateAvailability()\{
\par }{\cf17\insrsid14833369\charrsid14833369     boolean b = com.gensym.core.GensymApplication.getApplication().isBrowserMode();
\par }{\insrsid14833369\charrsid14833369 
\par     }{\insrsid14833369 if (workspaceView != null) \{
\par       if (currentSelection == null || currentSelection.length == 0) \{
\par \tab // there is no selection
\par \tab setAvailable(DELETE_SELECTION, false);
\par \tab setAvailable(ENABLE_SELECTION, false);
\par \tab setAvailable(DISABLE_SELECTION, false);
\par \tab setAvailable(LIFT_SELECTION_TO_TOP, false);
\par \tab setAvailable(DROP_SELECTION_TO_BOTTOM, false);
\par         setAvailable(COLOR, false);
\par         setAvailable(FONT_SIZE, false);
\par \tab setAvailable(ITEM_PROPERTIES, false);
\par \tab setAvailable(EDIT_ITEM_TEXT, false);
\par \tab setAvailable(MARK_TO_STRIP_TEXT, false);
\par \tab setAvailable(MARK_NOT_TO_STRIP_TEXT, false);
\par \tab setAvailable(REMOVE_STRIP_TEXT_MARK, false);
\par \tab setAvailable(REMOVE_DO_NOT_STRIP_TEXT_MARK, false);
\par \tab setAvailable(DESCRIBE, false);
\par \tab setAvailable(DESCRIBE_CONFIGURATION, false);
\par       \}
\par       else \{
\par \tab // there is a selection
\par \tab boolean isPPMode = false;
\par \tab TW2MDIApplication app = (TW2MDIApplication)GensymApplication.getApplication();
\par \tab TwAccess context = app.getConnectionManager().getCurrentConnection();
\par \tab if (context != null && context.getG2Version().getMajorVersion() >= 6) \{
\par \tab   try \{
\par \tab     isPPMode = ((Boolean)context.callRPC(G2_GET_PACKAGE_PREPARATION_MODE_, new Object[] \{\})).booleanValue();
\par \tab   \} catch (G2AccessException gae) \{
\par \tab     Trace.exception(gae);
\par \tab   \}
\par \tab \}
\par \tab }{\cf17\insrsid14833369 setAvailable(DELETE_SELECTION, !b);
\par \tab setAvailable(LIFT_SELECTION_TO_TOP, !b);
\par \tab setAvailable(DROP_SELECTION_TO_BOTTOM, !b);
\par         setAvailable(COLOR, !b);
\par         setAvailable(FONT_SIZE, !b);
\par }{\insrsid14833369 \tab setAvailable(ITEM_PROPERTIES, true);
\par \tab }{\cf17\insrsid14833369 setAvailable(DESCRIBE_CONFIGURATION, !b);
\par \tab setAvailable(DESCRIBE, !b);
\par }{\insrsid14833369 \tab int status;
\par \tab if (isPPMode == false) \{
\par \tab   setAvailable(MARK_TO_STRIP_TEXT, false);
\par \tab   setAvailable(MARK_NOT_TO_STRIP_TEXT, false);
\par \tab   setAvailable(REMOVE_STRIP_TEXT_MARK, false);
\par \tab   setAvailable(REMOVE_DO_NOT_STRIP_TEXT_MARK, false);
\par \tab \} else \{
\par \tab   status = getTextMarkStatusOfSelection(STRIP_TEXT_MARK_);
\par \tab   setStripTextMarkAvailability(MARK_TO_STRIP_TEXT,
\par \tab \tab \tab \tab        REMOVE_STRIP_TEXT_MARK,
\par \tab \tab \tab \tab        status);
\par \tab   status = getTextMarkStatusOfSelection(DO_NOT_STRIP_TEXT_MARK_);
\par \tab   setStripTextMarkAvailability(MARK_NOT_TO_STRIP_TEXT,
\par \tab \tab \tab \tab        REMOVE_DO_NOT_STRIP_TEXT_MARK,
\par \tab \tab \tab \tab        status);
\par \tab \}
\par \tab // does the selection have editable text?
\par \tab status = getSelectionEditableTextStatus();
\par \tab if (status == SELECTION_EDITABLE)
\par \tab }{\cf17\insrsid14833369   setAvailable(EDIT_ITEM_TEXT, !b);
\par }{\insrsid14833369 \tab }{\insrsid14833369\charrsid14833369 else
\par \tab }{\insrsid14833369   setAvailable(EDIT_ITEM_TEXT, false);
\par 
\par \tab // is the selection enabled/disabled/mixed?
\par \tab status = getSelectionEnabledStatus();
\par \tab if (status == SELECTION_ENABLED) \{
\par \tab   setAvailable(ENABLE_SELECTION, false);
\par \tab   }{\cf17\insrsid14833369 setAvailable(DISABLE_SELECTION, !b);
\par }{\insrsid14833369 \tab \} else if (status == SELECTION_DISABLED) \{
\par \tab }{\cf17\insrsid14833369   setAvailable(ENABLE_SELECTION, !b);
\par }{\insrsid14833369 \tab   setAvailable(DISABLE_SELECTION, false);
\par \tab \} else \{
\par \tab   setAvailable(ENABLE_SELECTION, false);
\par \tab   setAvailable(DISABLE_SELECTION, false);
\par \tab \}
\par       \}
\par     \} else \{ // workspaceView == null
\par       setAvailable(DELETE_SELECTION, false);
\par       setAvailable(ENABLE_SELECTION, false);
\par       setAvailable(DISABLE_SELECTION, false);
\par       setAvailable(LIFT_SELECTION_TO_TOP, false);
\par       setAvailable(DROP_SELECTION_TO_BOTTOM, false);
\par       setAvailable(COLOR, false);
\par       setAvailable(FONT_SIZE, false);
\par       setAvailable(ITEM_PROPERTIES, false);
\par       setAvailable(EDIT_ITEM_TEXT, false);
\par       setAvailable(MARK_TO_STRIP_TEXT, false);
\par       setAvailable(MARK_NOT_TO_STRIP_TEXT, false);
\par       setAvailable(REMOVE_STRIP_TEXT_MARK, false);
\par       setAvailable(REMOVE_DO_NOT_STRIP_TEXT_MARK, false);
\par       }{\insrsid14833369\charrsid14833369 setAvailable(DESCRIBE_CONFIGURATION, false);
\par       setAvailable(DESCRIBE, false);
\par     \}
\par   \}
\par 
\par }{\b\cf5\insrsid14833369\charrsid14833369 19.  ModuleCOmmands.java
\par }{\cf17\insrsid14833369\charrsid14833369 import com.gensym.classes.UiClientSession;}{\cf17\insrsid7539002 \line }{\cf17\insrsid14833369\charrsid14833369 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid7539002 {\i\cf11\insrsid7539002\charrsid14833369 PCP: }{\i\cf11\insrsid7539002 I don\rquote t recall the details
 but we had problems getting the modules menu choices and snapshot menu choices to work, be consistent with the rethink behavior (fix the module hierarchy upon creation and deletion)
, use consistent lower case fonts, etc. Either we keep the patched commands which maybe the best (and maybe move them to escor/commands package to avoid duplication), or add them to T2, but require methods in GensymApplication
 to be able to write custom methods to create/delete/rename modules}{\i\cf11\insrsid1049532 .}{\insrsid7539002 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid14833369\charrsid14833369 
\par }{\insrsid14833369 public void actionPerformed(ActionEvent e)\{
\par 
\par     String cmdKey = e.getActionCommand();
\par 
\par     if (cmdKey.equals(NEW_MODULE)) \{
\par 
\par }{\cf17\insrsid14833369       InputDialog dlg = new InputDialog(frame, i18n.getString("NewModuleTitle"), true,
\par \tab   new String[] \{i18n.getString("NewModuleNamePrompt")\},
\par \tab   new String[] \{"",""\}, null);
\par }{\insrsid14833369 
\par       dlg.setVisible(true);
\par }{\cf17\insrsid14833369       String[] results = dlg.getResults();
\par       if (results != null && results.length > 0) \{
\par         String name = results[0].trim();
\par         Symbol s = Symbol.intern(name.toUpperCase());
\par 
\par         try \{
\par           UiClientSession session = currentConnection.retrieveSession();
\par           Symbol NONE_ = Symbol.intern("NONE");
\par           Symbol error = (Symbol) currentConnection.callRPC(
\par                 Symbol.intern("BPR-CREATE-NEW-MODULE"), new Object[]\{s, NONE_, session\}, 120000);
\par 
\par           if (NONE_.equals(error) == false) \{
\par             new ErrorDialog(
\par                       null,
\par                       i18n.getString("Error"),
\par                       true,
\par                       i18n.getString("ModuleAlreadyExists"),
\par                       null).setVisible(true);
\par           \}
\par 
\par         \} catch (G2AccessException g2ae) \{
\par           Trace.exception(g2ae);
\par         \}
\par       \}
\par }{\insrsid14833369     \}
\par     else if (cmdKey.equals(MERGE_MODULE)) \{
\par       new MergeModuleDialog (frame, i18n.getString("MergeModuleTitle"), true, true,
\par \tab \tab \tab      connectionManager, (StandardDialogClient) this).setVisible(true);
\par     \}
\par     else if (cmdKey.equals(RENAME_MODULE)) \{
\par       new RenameModuleDialog(frame, i18n.getString("RenameModuleTitle"), true,
\par \tab \tab \tab      connectionManager, (StandardDialogClient) this).setVisible(true);
\par     \}
\par     else if (cmdKey.equals(SAVE_MODULE)) \{
\par       new SaveModuleDialog (frame, i18n.getString("SaveModuleTitle"), true, true,
\par \tab \tab \tab     connectionManager, (StandardDialogClient) this).setVisible(true);
\par     \}
\par     else if (cmdKey.equals(DELETE_MODULE)) \{
\par       new DeleteModuleDialog (frame, i18n.getString("DeleteModuleTitle"), true,
\par \tab \tab \tab       true, connectionManager, (StandardDialogClient) this).setVisible(true);
\par     }{\insrsid14833369\charrsid14833369 \}
\par   \}
\par 
\par 
\par }{\insrsid14833369 public void dialogDismissed(StandardDialog dlg, int code) \{
\par     if (dlg.wasCancelled()) return;
\par 
\par     if (dlg instanceof MergeModuleDialog) \{
\par       handleMergeModuleDialogDismissed((MergeModuleDialog)dlg);
\par     \}
\par 
\par     else if (dlg instanceof RenameModuleDialog) \{
\par       RenameModuleDialog rd = (RenameModuleDialog)dlg;
\par       Symbol renameModule_ = rd.getSelectedModule();
\par       String newValue = rd.getNewValue();
\par       if (renameModule_ == null || newValue == "") \{
\par         new ErrorDialog (null, i18n.getString("Error"), true,
\par                          i18n.getString("IllegalValueForRenameModule"),
\par                          (StandardDialogClient) null).setVisible(true);
\par       \} else \{
\par }{\cf17\insrsid14833369 
\par         UiClientSession session = currentConnection.retrieveSession();
\par         Symbol NONE_ = Symbol.intern("NONE");
\par         Symbol newName_ = Symbol.intern(newValue.toUpperCase());
\par 
\par         currentConnection.startRPC(
\par               Symbol.intern("BPR-RENAME-MODULE"), new Object[]\{renameModule_, newName_, session\});
\par }{\insrsid14833369       }{\insrsid14833369\charrsid14833369 \}
\par     \}
\par }{\insrsid14833369 else if (dlg instanceof SaveModuleDialog) \{
\par       try \{
\par \tab SaveModuleDialog smd = (SaveModuleDialog)dlg;
\par \tab Symbol moduleName_ = smd.getSelectedModule();
\par \tab // get options from dialog and set them in LoadSaveKBTools
\par \tab String path = smd.getG2FileSpecification();
\par \tab LoadSaveKBTools.setShowProgress(smd.getShowProgress()?Boolean.TRUE:Boolean.FALSE);
\par \tab LoadSaveKBTools.setSaveWorkspaceLayout(smd.getSaveWorkspaceLayout()?Boolean.TRUE:Boolean.FALSE);
\par \tab LoadSaveKBTools.setSaveRequiredModules(smd.getSaveRequiredModules()?Boolean.TRUE:Boolean.FALSE);
\par \tab //System.out.println("calling saveModule with moduleName_: "+moduleName_+"  path: "+path);
\par \tab LoadSaveKBTools.saveModule(currentConnection, moduleName_, path);
\par       \} catch (G2AccessException gae) \{
\par \tab Trace.exception(gae);
\par       \}
\par     \}
\par 
\par     else if (dlg instanceof DeleteModuleDialog) \{
\par       try \{
\par \tab DeleteModuleDialog dmd = (DeleteModuleDialog)dlg;
\par \tab Symbol moduleName_ = dmd.getSelectedModule();
\par         }{\cf17\insrsid14833369 Boolean delWks = dmd.getDeleteAssociatedWorkspaces()?}{\insrsid14833369  }{\cf17\insrsid14833369 Boolean.TRUE:Boolean.FALSE;
\par }{\insrsid14833369 
\par \tab if (moduleName_ == null) \{
\par \tab   new ErrorDialog (null, i18n.getString("Error"), true,
\par \tab \tab \tab    i18n.getString("NoModuleSpecifiedForDelete"),
\par \tab \tab \tab    (StandardDialogClient) null).setVisible(true);
\par \tab \} else if (moduleName_.equals(UNSPECIFIED_)) \{
\par \tab   new ErrorDialog (null, i18n.getString("Error"), true,
\par \tab \tab \tab    i18n.getString("UnspecifiedTopLevelModuleSelectedForDelete"),
\par \tab \tab \tab    (StandardDialogClient) null).setVisible(true);
\par \tab }{\insrsid14833369\charrsid14833369 \} else \{
\par 
\par }{\cf17\insrsid14833369\charrsid14833369           UiClientSession session = currentConnection.retrieveSession();
\par           Symbol NONE_ = Symbol.intern("NONE");
\par 
\par }{\cf17\insrsid14833369           Symbol error = (Symbol) currentConnection.callRPC(
\par                 Symbol.intern("BPR-DELETE-MODULE"), new Object[]\{moduleName_, delWks, Boolean.TRUE,session\}, 120000);
\par 
\par           if (NONE_.equals(error) == false) \{
\par             new ErrorDialog(
\par                       null,
\par                       i18n.getString("Error"),
\par                       true,
\par                       i18n.getString("ModuleCanotDelete"),
\par                       null).setVisible(true);
\par           \}
\par }{\insrsid14833369 \tab \}
\par       \} catch (G2AccessException gae) \{
\par \tab Trace.exception(gae);
\par \tab if (gae.getMessage() != null)
\par \tab   new ErrorDialog (null, i18n.getString("Error"), true,
\par \tab \tab \tab    }{\insrsid14833369\charrsid14833369 gae.getMessage(), (StandardDialogClient) null).setVisible(true);
\par       \}
\par     \}
\par   \}
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid14833369 
\par 
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\f1\fs20\insrsid14833369            }{\b\f1\fs20\cf5\insrsid14833369  20.  NudgeCommands.java}{\f1\fs20\insrsid14833369 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid14833369 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid9397974 {\i\cf11\insrsid9397974\charrsid14833369 PCP:}{\i\cf11\insrsid9397974  See above. Managing accessibility based on. Add to T2}{\insrsid9397974 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid9397974 
\par }{\f1\fs20\insrsid14833369             public void updateAvailability() \{
\par   }{\f1\fs20\cf2\insrsid14833369           boolean b = com.gensym.core.GensymApplication.getApplication().isBrowserMode();
\par 
\par             boolean state = !b && ((!(workspaceView == null)) && (!(currentSelection == null || currentSelection.length == 0)));
\par }{\f1\fs20\insrsid14833369             setAvailable(NUDGE_SELECTION_UP, state);
\par             setAvailable(NUDGE_SELECTION_DOWN, state);
\par             setAvailable(NUDGE_SELECTION_LEFT, state);
\par             setAvailable(NUDGE_SELECTION_RIGHT, state);
\par             \}
\par 
\par 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\b\cf5\insrsid14833369\charrsid14833369 21. OrderCommands.java}{\b\cf5\insrsid9397974 \line }{\b\cf5\insrsid14833369 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid9397974 {\i\cf11\insrsid9397974\charrsid14833369 PCP:}{\i\cf11\insrsid9397974  See above. Managing accessibility based on. Add to T2}{\insrsid9397974 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\b\cf5\insrsid9397974\charrsid14833369 
\par }{\insrsid14833369\charrsid14833369 public void updateAvailability()\{
\par     boolean b = com.gensym.core.GensymApplication.getApplication().isBrowserMode();
\par 
\par   }{\cf2\insrsid14833369\charrsid14833369   if (!b && workspaceView != null) \{
\par       if (currentSelection == null || currentSelection.length == 0) }{\insrsid14833369\charrsid14833369 \{
\par \tab // there is no selection
\par \tab setAvailable(LIFT_SELECTION_TO_TOP, false);
\par \tab setAvailable(DROP_SELECTION_TO_BOTTOM, false);
\par       \}
\par       else \{
\par \tab // there is a selection
\par \tab setAvailable(LIFT_SELECTION_TO_TOP, true);
\par \tab setAvailable(DROP_SELECTION_TO_BOTTOM, true);
\par       \}
\par     \} else \{ // workspaceView == null
\par       setAvailable(LIFT_SELECTION_TO_TOP, false);
\par       setAvailable(DROP_SELECTION_TO_BOTTOM, false);
\par     \}
\par   \}
\par 
\par {\listtext\pard\plain\b\cf5\insrsid14833369\charrsid14833369 \hich\af0\dbch\af0\loch\f0 22.\tab}}\pard \ql \fi-420\li1140\ri0\nowidctlpar\jclisttab\tx1140\faauto\ls2\rin0\lin1140\itap0\pararsid9397974 {\b\cf5\insrsid14833369\charrsid14833369 
RotateCOmmands.java}{\b\cf5\insrsid9397974 \line }{\b\cf5\insrsid14833369 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid9397974 {\i\cf11\insrsid9397974\charrsid14833369 PCP:}{\i\cf11\insrsid9397974  See above. Managing accessibility based on. Add to T2}{\insrsid9397974 
\par }{\b\cf5\insrsid9397974\charrsid14833369 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid14833369\charrsid14833369 public void updateAvailability() \{
\par   }{\cf2\insrsid14833369\charrsid14833369   boolean b = com.gensym.core.GensymApplication.getApplication().isBrowserMode();
\par 
\par    boolean state = !b && ((!(workspaceView == null)) && (!(currentSelection == null || currentSelection.length == 0)));}{\insrsid14833369\charrsid14833369 
\par 
\par    setAvailable(ROTATE_90_CLOCKWISE, state);
\par    setAvailable(ROTATE_90_COUNTER_CLOCKWISE, state);
\par    setAvailable(ROTATE_180_DEGREES, state);
\par    setAvailable(FLIP_VERTICAL, state);
\par    setAvailable(FLIP_HORIZONTAL, state);
\par   \}
\par 
\par // BEGIN: SelectionListener methods
\par   public void selectionChanged(SelectionEvent event)\{
\par }{\cf2\insrsid14833369\charrsid14833369 \tab if (workspaceView != null)}{\insrsid14833369\charrsid14833369 
\par \tab     currentSelection = workspaceView.getSelection();
\par     updateAvailability();
\par   \}
\par   // END: SelectionListener methods
\par 
\par   // BEGIN: MDIListener methods
\par   public void documentAdded(MDIEvent event) \{
\par     MDIDocument document = (MDIDocument)event.getDocument();
\par     if (document instanceof WorkspaceDocument) \{
\par       WorkspaceDocument wkspDoc = (WorkspaceDocument)document;
\par       wkspDoc.addPropertyChangeListener(this);
\par       setWorkspaceView(wkspDoc.getWorkspaceView());
\par     \}
\par   \}
\par   // END: MDIListener methods
\par 
\par }{\b\cf5\insrsid14833369\charrsid14833369 23.  SnapshotCommands.java
\par }{\insrsid9397974 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid9397974 {\i\cf11\insrsid9397974\charrsid14833369 PCP:}{\i\cf11\insrsid9397974  See above. Managing accessibility based on. Add to T2
\par  Also using thread for save to avoid locking the u refreshi. Add to T2 as well?}{\insrsid9397974 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid9397974 
\par }{\insrsid14833369\charrsid14833369  public void setAvailability() \{
\par   }{\cf2\insrsid14833369\charrsid14833369   boolean b = com.gensym.core.GensymApplication.getApplication().isBrowserMode();
\par 
\par     setAvailable(SAVE_SNAPSHOT, (currentConnection !=  null) && !b);
\par     setAvailable(WARMBOOT_FROM_SNAPSHOT, (currentConnection != null) && !b);
\par   \}
\par }{\insrsid14833369\charrsid14833369 
\par public void dialogDismissed(StandardDialog dlg, int code) \{
\par     if (dlg.wasCancelled()) return;
\par 
\par     if (dlg instanceof SaveSnapshotDialog) \{
\par }{\cf2\insrsid14833369\charrsid14833369 //      try \{
\par }{\insrsid14833369\charrsid14833369 \tab SaveSnapshotDialog ssd = (SaveSnapshotDialog)dlg;
\par         }{\cf2\insrsid14833369\charrsid14833369 ssd.setShowProgress(Boolean.TRUE);
\par         ssd.setSaveWorkspaceLayout(Boolean.TRUE);
\par }{\insrsid14833369\charrsid14833369 \tab LoadSaveKBTools.setShowProgress(ssd.getShowProgress());
\par \tab LoadSaveKBTools.setSaveWorkspaceLayout(ssd.getSaveWorkspaceLayout());
\par \tab String filespec = ssd.getG2FileSpecification();
\par }{\cf2\insrsid14833369\charrsid14833369 //\tab LoadSaveKBTools.snapshot(currentConnection, filespec);
\par 
\par         Object session = Boolean.FALSE;
\par         if (ssd.getSaveWorkspaceLayout().booleanValue() == true)
\par           session = currentConnection.retrieveSession();
\par 
\par \tab saveSnapshotThread thread = new saveSnapshotThread(currentConnection, filespec, ssd.getShowProgress(), session);
\par         thread.start();
\par }{\insrsid14833369\charrsid14833369     \}
\par 
\par     else if (dlg instanceof WarmbootDialog) \{
\par       try \{
\par \tab WarmbootDialog wd = (WarmbootDialog)dlg;
\par \tab LoadSaveKBTools.setRunInCatchUpMode(wd.getRunInCatchUpMode());
\par \tab String filespec = wd.getG2FileSpecification();
\par \tab LoadSaveKBTools.warmbootKB(currentConnection, filespec);
\par       \} catch (G2AccessException gae) \{
\par \tab Trace.exception(gae);
\par \tab if (gae.getMessage() !=  null)
\par \tab   new ErrorDialog(null, i18n.getString("Error"), true, gae.getMessage(), null).setVisible(true);
\par       \}
\par     \}
\par   \}
\par 
\par // thread to save snapshot
\par  }{\cf2\insrsid14833369\charrsid14833369  class saveSnapshotThread extends Thread \{
\par 
\par     TwAccess cxn;
\par     String filespec;
\par     Boolean b;
\par     Object session;
\par 
\par     saveSnapshotThread(TwAccess currentConnection, String filespec, Boolean b, Object session) \{
\par       this.cxn = currentConnection;
\par       this.filespec = filespec;
\par       this.b = b;
\par       this.session = session;
\par     \}
\par 
\par     public void run()\{
\par 
\par       try\{
\par         ((com.gensym.escor.eSCOR) com.gensym.core.GensymApplication.getApplication()).setApplicationBusy();
\par 
\par         Object success = cxn.callRPC(
\par               com.gensym.util.Symbol.intern("G2-SNAPSHOT"),
\par               new Object[] \{filespec, b, session\});
\par 
\par       \} catch (G2AccessException gae) \{
\par 
\par         Trace.exception(gae);
\par         if (gae.getMessage() != null)
\par           new ErrorDialog(null, i18n.getString("Error"), true, gae.getMessage(), null).setVisible(true);
\par 
\par       \} finally  \{
\par         ((com.gensym.escor.eSCOR) com.gensym.core.GensymApplication.getApplication()).setApplicationNormal();
\par       \}
\par     \}
\par   \}}{\cf2\insrsid1049532 \line }{\cf2\insrsid14833369\charrsid14833369 
\par {\listtext\pard\plain\b\cf5\insrsid14833369\charrsid14833369 \hich\af0\dbch\af0\loch\f0 23.\tab}}\pard \ql \fi-420\li1140\ri0\nowidctlpar\jclisttab\tx1140\faauto\ls2\rin0\lin1140\itap0\pararsid16515482 {\b\cf5\insrsid14833369\charrsid14833369 
ViewCommands.java}{\b\cf5\insrsid14833369 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid16515482 {\b\cf5\insrsid16515482 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid16515482 {\i\cf11\insrsid16515482\charrsid14833369 PCP:}{\i\cf11\insrsid16515482 
  want to be able to control if the message board/log book should popup or not upon messages. Was annoying to users. Add to T2 if you believe minimum fan out.}{\insrsid16515482 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid16515482 {\insrsid16515482\charrsid14833369 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid14833369\charrsid14833369  }{\cf2\insrsid14833369\charrsid14833369 private boolean alwaysShowMessageBoard = false;
\par   private boolean alwaysShowLogBook = false;
\par 
\par   /*
\par    *  APIs to force to always show message board and log book or not
\par    */
\par   public void setAlwaysShowMessageBoard(boolean b)
\par   \{
\par     this.alwaysShowMessageBoard = b;
\par   \}
\par   public boolean getAlwaysShowMessageBoard()
\par   \{
\par     return this.alwaysShowMessageBoard;
\par   \}
\par   public void setAlwaysShowLogBook(boolean b)
\par   \{
\par     this.alwaysShowLogBook = b;
\par   \}
\par   public boolean getAlwaysShowLogBook()
\par   \{
\par     return this.alwaysShowLogBook;
\par   \}
\par }{\insrsid14833369\charrsid14833369 
\par private LogbookMessageBoardView createView(UiApplication app,
\par \tab \tab \tab \tab \tab      TwAccess connection,
\par \tab \tab \tab \tab \tab      String key,
\par \tab \tab \tab \tab \tab      boolean alwaysShow)
\par        throws G2AccessException
\par   \{
\par     String viewkey = getKey(key, currentConnection);
\par     SystemTable parameters=null;
\par     int width = 400, height = 400;
\par     Rectangle bounds = (Rectangle)previousBounds.get(viewkey);
\par     if (key == VIEW_LOGBOOK) \{
\par       LogbookParameters logParam =
\par \tab (LogbookParameters)currentConnection.getUniqueNamedItem(LOGBOOK_PARAMETERS_,LOGBOOK_PARAMETERS_);
\par       parameters = logParam;
\par       if (!alwaysShow &&
\par \tab   !logParam.getLiftLogbookToTopWhenNewPagesAreAdded())
\par \tab return null;
\par       width = logParam.getWidthForPages();
\par       height = logParam.getHeightForPages();
\par     \} else \{
\par       MessageBoardParameters mbParam =
\par \tab (MessageBoardParameters)currentConnection.getUniqueNamedItem(MESSAGE_BOARD_PARAMETERS_,
\par \tab \tab \tab \tab \tab \tab \tab \tab      MESSAGE_BOARD_PARAMETERS_);
\par       parameters = mbParam;
\par       width = mbParam.getInitialWidthOfMessageBoard();
\par       height = mbParam.getInitialHeightOfMessageBoard();
\par     \}
\par    }{\cf2\insrsid14833369\charrsid14833369  if (alwaysShow == false)
\par       return null;
\par }{\insrsid14833369\charrsid14833369 
\par     return createView(app, parameters, currentConnection, viewkey, width, height, bounds);
\par   \}
\par 
\par   public void kbMessageAdded(KbEvent event)\{
\par    }{\cf2\insrsid14833369\charrsid14833369  // Changed by PCP 07/11/2001 to rely on API settings to always show or not
\par }{\insrsid14833369\charrsid14833369     if (event.getID() == KbEvent.KB_LOGBOOK_MESSAGE_ADDED)
\par     }{\cf2\insrsid14833369\charrsid14833369   showThread.showView(VIEW_LOGBOOK, alwaysShowLogBook);
\par }{\insrsid14833369\charrsid14833369     else if (event.getID() == KbEvent.KB_MESSAGE_BOARD_MESSAGE_ADDED)
\par      }{\cf2\insrsid14833369\charrsid14833369  showThread.showView(VIEW_MESSAGE_BOARD, alwaysShowMessageBoard);
\par }{\insrsid14833369\charrsid14833369   \}
\par 
\par 
\par WorkspaceCommands.java}{\insrsid16279712 \line }{\insrsid14833369 
\par }{\i\cf11\insrsid16279712\charrsid14833369 PCP:}{\i\cf11\insrsid16279712   fix in T2. Looks like to fix a bug in the menu is selected while not connected yet.
\par }{\insrsid16279712\charrsid14833369 
\par }{\cf2\insrsid14833369\charrsid14833369 public void updateAvailability()\{
\par     boolean available = true;
\par 
\par     if ((currentConnection == null) || (!currentConnection.isLoggedIn()))
\par \tab available = false;
\par 
\par     // GET_KBWORKSPACE could check for named workspaces
\par     setAvailable(GET_KBWORKSPACE, available);
\par     setAvailable(NEW_KBWORKSPACE, available);
\par   \}
\par }{\insrsid14833369\charrsid14833369 
\par protected void setAvailable(String key, boolean available)\{
\par }{\insrsid16279712 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid16279712 {\i\cf11\insrsid16279712\charrsid14833369 PCP:}{\i\cf11\insrsid16279712   fix in T2 to be able to control availability of menu.
\par 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid14833369\charrsid14833369   }{\cf2\insrsid14833369\charrsid14833369   boolean b = com.gensym.core.GensymApplication.getApplication().isBrowserMode();
\par 
\par     if (NEW_KBWORKSPACE.equals(key) && b)
\par       available = false;
\par }{\insrsid14833369\charrsid14833369 
\par     super.setAvailable(key, available);
\par   \}
\par 
\par  }{\cf2\insrsid14833369\charrsid14833369  static int counter = 1;
\par 
\par }{\insrsid14833369\charrsid14833369   public static KbWorkspace createNewWorkspace(TwAccess connection) \{
\par     try\{
\par       KbWorkspace newWksp = (KbWorkspace)connection.createItem(KBWORKSPACE_);}{\insrsid14833369 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid148525 {\i\cf11\insrsid148525\charrsid14833369 PCP:}{\i\cf11\insrsid148525  maybe fix in G2, but should be checked with Judy.
 If forces that all workspaces are named and can easily be located. Otherwise it is too easy to create new blank workspaces that don\rquote t have a title, grow the memory and cannot be easily located. We need this for escor/rethink.
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid148525\charrsid14833369 
\par }{\insrsid14833369\charrsid14833369       }{\cf2\insrsid14833369\charrsid14833369 newWksp.setNames(Symbol.intern("UNNAMED-WORKSPACE-"+counter));
\par       counter = counter + 1;
\par }{\insrsid14833369\charrsid14833369       newWksp.makePermanent();
\par       return newWksp;
\par     }{\lang1036\langfe1033\langnp1036\insrsid14833369 \}
\par     catch(G2AccessException ex)\{
\par       com.gensym.message.Trace.exception(ex);
\par       }{\insrsid14833369\charrsid14833369 String cxnString = connection.toShortString();
\par       String msg = ex.getMessage();
\par       if (msg == null)
\par \tab new WarningDialog(null, i18n.getString("Error"), true, i18n.format("UnableToCreateWksp", cxnString), null).setVisible(true);
\par       else
\par \tab new WarningDialog(null, i18n.getString("Error"), true, i18n.format("UnableToCreateWkspWithReason", cxnString, msg), null).setVisible(true);
\par     \}
\par     return null;
\par   \}
\par 
\par 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid16515482 {\b\cf5\insrsid14833369\charrsid14833369 25.  WorkspaceInstanceCommands.java}{\b\cf5\insrsid16515482 \line \line }{\i\cf11\insrsid16515482\charrsid14833369 PCP:}{
\i\cf11\insrsid16515482  See above. Managing accessibility based on. Add to T2}{\insrsid16515482 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid14833369\charrsid14833369 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid14833369              public void updateAvailability()\{
\par               }{\f1\fs20\cf2\insrsid14833369 boolean b = com.gensym.core.GensymApplication.getApplication().isBrowserMode();
\par }{\f1\fs20\insrsid14833369 
\par     \tab // PRINT_WORKSPACE is available as long as the workspaceView has focus
\par    \tab  setAvailable(PRINT_WORKSPACE, (workspaceView != null));
\par     \tab setAvailable(SHRINK_WRAP_WORKSPACE, (workspaceView != null));
\par   }{\f1\fs20\cf2\insrsid14833369  \tab  setAvailable(SELECT_ALL_WORKSPACE_ITEMS, (workspaceView != null) && !b);
\par }{\f1\fs20\insrsid14833369 
\par    \tab  // DELETE_WORKSPACE, WORKSPACE_PROPERTIES might be a victim of a race condition during delete
\par     \tab if (workspaceView != null) \{
\par       \tab setAvailable(DELETE_WORKSPACE, ((workspaceView.getWorkspace()) != null));
\par      \tab  setAvailable(WORKSPACE_PROPERTIES, ((workspaceView.getWorkspace()) != null));
\par   \tab   \}
\par   \tab   else \{
\par     \tab   setAvailable(DELETE_WORKSPACE, false);
\par    \tab   \tab  setAvailable(WORKSPACE_PROPERTIES, false);
\par   \tab   \}
\par 
\par    \tab  // ENABLE/DISABLE selection are conditional based on the current
\par    \tab  // state of the selection
\par     \tab if (workspaceView != null && workspaceView.getWorkspace() != null) \{
\par       \tab try \{
\par \tab \tab if (!workspaceView.getWorkspace().getManuallyDisabled()) \{
\par \tab \tab   setAvailable(ENABLE_WORKSPACE, false);
\par \tab \tab   }{\f1\fs20\cf2\insrsid14833369 setAvailable(DISABLE_WORKSPACE, !b);
\par }{\f1\fs20\insrsid14833369 \tab \tab \} else \{
\par \tab \tab }{\f1\fs20\cf2\insrsid14833369   setAvailable(ENABLE_WORKSPACE, !b);
\par }{\f1\fs20\insrsid14833369 \tab \tab   setAvailable(DISABLE_WORKSPACE, false);
\par \tab \tab \}
\par     \tab   \} catch (G2AccessException gae) \{
\par \tab \tab Trace.exception(gae);
\par     \tab   \}
\par    \tab  \} else \{
\par   \tab     setAvailable(ENABLE_WORKSPACE, false);
\par   \tab     setAvailable(DISABLE_WORKSPACE, false);
\par    \tab  \}
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\f1\fs20\insrsid14833369   \tab \}
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid14833369 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\f1\fs20\insrsid14833369         }{\insrsid14833369\charrsid14833369 
\par }\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720\faauto\rin0\lin720\itap0 {\f3\insrsid14833369 \'b7\tab }{\b\ul\insrsid14833369 C:\\bt\\g2i\\java\\com\\gensym\\shell\\dialogs
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid14833369 
\par {\listtext\pard\plain\b\cf5\insrsid14833369 \hich\af0\dbch\af0\loch\f0 26.\tab}}\pard \ql \fi-420\li1140\ri0\nowidctlpar\jclisttab\tx1140\faauto\ls3\rin0\lin1140\itap0\pararsid16515482 {\b\cf5\insrsid14833369 LoginDialog.java}{\b\cf5\insrsid16515482 
\line }{\b\cf5\insrsid14833369 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid16515482 {\i\cf11\insrsid16515482\charrsid14833369 PCP:}{\i\cf11\insrsid16515482  needed a way to control accessibility of panels. Add to T2 as new api 
\par }{\insrsid16515482 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\cf2\insrsid14833369 // begin patch for e-SCOR
\par   public void setURLAndModeEditable(boolean b1, boolean b2) \{
\par \tab connectionTabPanel.urlTextField.setEditable(b1);
\par \tab securityTabPanel.userModeTextField.setEditable(b2);
\par   \}
\par   // end patch for e-SCOR
\par }{\insrsid14833369   
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid14760714 {\i\cf11\insrsid14760714\charrsid14833369 PCP:}{\i\cf11\insrsid14760714   fix in T2 I would suggest. They seem to fix problems and usability issues we encountered with the dialogs
 where it did either not work or no default filenames were set.
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid14833369 
\par }{\b\cf5\insrsid14833369 27.  SaveSnapshotDialog.java
\par }{\insrsid14833369 public String getG2FileSpecification() \{
\par    }{\cf2\insrsid14833369  this.g2Path = ((SaveSnapshotPanel)getDialogComponent()).kbTextField.getText();
\par }{\insrsid14833369     return g2Path;
\par   \}
\par 
\par public void setG2FileSpecification(String path) \{
\par     this.g2Path = path;
\par    }{\cf2\insrsid14833369  ((SaveSnapshotPanel)getDialogComponent()).kbTextField.setText(this.g2Path);
\par }{\insrsid14833369   \}
\par 
\par class SaveSnapshotPanel extends JPanel \{
\par 
\par   private static Resource i18n = Resource.getBundle("com/gensym/shell/dialogs/Messages");
\par 
\par   Frame frame;
\par   ConnectionManager connectionManager;
\par 
\par   DialogIcons icons = new DialogIcons();
\par 
\par   JFileChooser fileDlg;
\par 
\par   JButton    chooseButton;
\par   JLabel     promptLabel;
\par   }{\cf2\insrsid14833369 public JTextField kbTextField;
\par }{\insrsid14833369 
\par   public SaveSnapshotPanel(Frame f, ConnectionManager cxnMgr, boolean withOptions) \{
\par     frame = f;
\par     connectionManager = cxnMgr;
\par 
\par     if (withOptions) \{
\par       executeBuildSaveSnapshotTabbedPane();
\par     \} else \{
\par       executeBuildSaveSnapshotPanel(null);
\par     \}
\par   \}
\par 
\par private void executeBuildSaveSnapshotPanel(JPanel thePanel) \{
\par 
\par     GridBagConstraints gridC = new GridBagConstraints();
\par     GridBagLayout gridBagLayout = new GridBagLayout();
\par     if (thePanel != null)
\par       thePanel.setLayout (gridBagLayout);
\par     else
\par       setLayout(gridBagLayout);
\par 
\par     gridC.insets = new Insets (5, 5, 0, 5);
\par     gridC.fill = GridBagConstraints.BOTH;
\par     gridC.weightx = 1.0;
\par     gridC.gridwidth = GridBagConstraints.REMAINDER; // end row
\par 
\par     promptLabel = new JLabel(i18n.getString("PathPrompt"));
\par     gridBagLayout.setConstraints(promptLabel, gridC);
\par     if (thePanel != null)
\par       thePanel.add(promptLabel);
\par     else
\par       add(promptLabel);
\par 
\par     gridC.gridwidth = GridBagConstraints.RELATIVE;
\par 
\par     kbTextField = new JTextField("", 25);
\par     kbTextField.getDocument().addDocumentListener(new DocumentListener() \{
\par       public void insertUpdate(DocumentEvent e) \{
\par }{\cf2\insrsid14833369 // Modified by PCP 07/14/2001
\par //\tab String newValue = kbTextField.getText();
\par //\tab ((SaveSnapshotDialog)getParent()).setG2FileSpecification(newValue);
\par }{\insrsid14833369       \}
\par       public void removeUpdate(DocumentEvent e) \{\}
\par       public void changedUpdate(DocumentEvent e) \{\}
\par     \});
\par     gridBagLayout.setConstraints(kbTextField, gridC);
\par     if (thePanel != null)
\par       thePanel.add(kbTextField);
\par     else
\par       add(kbTextField);
\par 
\par     gridC.gridwidth = GridBagConstraints.REMAINDER;
\par 
\par     chooseButton = new JButton(i18n.getString("ChooseButtonLabel"));
\par     gridBagLayout.setConstraints(chooseButton, gridC);
\par     if (thePanel != null)
\par       thePanel.add(chooseButton);
\par     else
\par       add(chooseButton);
\par     chooseButton.addActionListener (new ActionListener ()\{
\par       public void actionPerformed (ActionEvent event)\{
\par \tab String file;
\par \tab //JFileChooser fileDlg;
\par \tab G2ConnectionInfo cxnInfo = ((G2Gateway)connectionManager.getCurrentConnection()).getG2ConnectionInfo();
\par \tab String host = cxnInfo.getHost();
\par \tab String port = cxnInfo.getPort();
\par 
\par        }{\cf2\insrsid14833369  String defPath = kbTextField.getText();
\par //        if (defPath == null || defPath == "")
\par           defPath = "g2://"+host+":"+port+"/serverFileSystem/";
\par 
\par         G2ServerFile  g2File  = new G2ServerFile(defPath, FileType.SharedGenericFile);
\par //        if (g2File.isFile())
\par //  \tab   defPath = g2File.getParent();
\par 
\par \tab if (fileDlg == null) \{
\par           T2URLDirectoryModel model   = new T2URLDirectoryModel(false, true, false, null, null);
\par           URLFileSystemView   sysView = new URLFileSystemView(model);
\par 
\par           // Create file chooser
\par           fileDlg = new JFileChooser (defPath, sysView);
\par         \}
\par }{\insrsid14833369 
\par \tab String txt = i18n.getString("FileSearchString");
\par \tab fileDlg.setApproveButtonText(i18n.getString("SaveButtonLabel"));
\par 
\par       }{\cf2\insrsid14833369   if (g2File.isFile())
\par   \tab   fileDlg.setSelectedFile(g2File);
\par }{\insrsid14833369 
\par \tab int dialogStatus = fileDlg.showDialog(frame, i18n.getString("SaveFileDialogTitle"));
\par 
\par \tab URLFile result = (URLFile)fileDlg.getSelectedFile();
\par 
\par \tab if (dialogStatus == JFileChooser.APPROVE_OPTION) \{
\par \tab   String path = LoadSaveKBTools.getG2FileSpecificationFromURL(connectionManager.getCurrentConnection(), result);
\par 
\par \tab   kbTextField.setText(path);
\par }{\cf2\insrsid14833369 //\tab   ((SaveSnapshotDialog)getParent()).setURLFile(result);
\par //\tab   ((SaveSnapshotDialog)getParent()).setG2FileSpecification(path);
\par }{\insrsid14833369 \tab \}
\par       \}
\par     \});
\par   \}
\par 
\par 
\par }{\b\cf5\insrsid14833369 28.  WarmbootDialog.java
\par }{\insrsid14833369 public String getG2FileSpecification() \{
\par   }{\cf2\insrsid14833369   this.g2Path = ((WarmbootPanel)getDialogComponent()).kbTextField.getText();
\par }{\insrsid14833369     return g2Path;
\par   \}
\par 
\par   public void setG2FileSpecification(String path) \{
\par     this.g2Path = path;
\par    }{\cf2\insrsid14833369  ((WarmbootPanel)getDialogComponent()).kbTextField.setText(this.g2Path);
\par }{\insrsid14833369   \}
\par \}
\par 
\par private void executeBuildWarmbootPanel(JPanel thePanel) \{
\par 
\par     GridBagConstraints gridC = new GridBagConstraints();
\par     GridBagLayout gridBagLayout = new GridBagLayout();
\par     if (thePanel != null)
\par       thePanel.setLayout (gridBagLayout);
\par     else
\par       setLayout (gridBagLayout);
\par 
\par     gridC.insets = new Insets (5, 5, 0, 5);
\par     gridC.fill = GridBagConstraints.BOTH;
\par     gridC.weightx = 1.0;
\par     gridC.gridwidth = GridBagConstraints.REMAINDER; // end row
\par 
\par     promptLabel = new JLabel(i18n.getString("PathPrompt"));
\par     gridBagLayout.setConstraints(promptLabel, gridC);
\par     if (thePanel != null)
\par       thePanel.add(promptLabel);
\par     else
\par       add(promptLabel);
\par 
\par     gridC.gridwidth = GridBagConstraints.RELATIVE;
\par 
\par     kbTextField = new JTextField("", 25);
\par     kbTextField.getDocument().addDocumentListener(new DocumentListener() \{
\par       public void insertUpdate(DocumentEvent e) \{
\par }{\cf2\insrsid14833369 //\tab String newValue = kbTextField.getText();
\par //\tab ((WarmbootDialog)getParent()).setG2FileSpecification(newValue);
\par }{\insrsid14833369       }{\lang1036\langfe1033\langnp1036\insrsid14833369\charrsid14833369 \}
\par       public void removeUpdate(DocumentEvent e) \{\}
\par       public void changedUpdate(DocumentEvent e) \{\}
\par     }{\insrsid14833369 \});
\par     gridBagLayout.setConstraints(kbTextField, gridC);
\par     if (thePanel != null)
\par       thePanel.add(kbTextField);
\par     else
\par       add(kbTextField);
\par 
\par     gridC.gridwidth = GridBagConstraints.REMAINDER;
\par 
\par     chooseButton = new JButton(i18n.getString("ChooseButtonLabel"));
\par     gridBagLayout.setConstraints(chooseButton, gridC);
\par     if (thePanel != null)
\par       thePanel.add(chooseButton);
\par     else
\par       add(chooseButton);
\par     chooseButton.addActionListener (new ActionListener ()\{
\par       public void actionPerformed (ActionEvent event)\{
\par \tab String file;
\par \tab //JFileChooser fileDlg;
\par \tab G2ConnectionInfo cxnInfo = ((G2Gateway)connectionManager.getCurrentConnection()).getG2ConnectionInfo();
\par \tab String host = cxnInfo.getHost();
\par \tab String port = cxnInfo.getPort();
\par 
\par         }{\cf2\insrsid14833369 String defPath = kbTextField.getText();
\par //        if (defPath == null || defPath == "")
\par           defPath = "g2://"+host+":"+port+"/serverFileSystem/";
\par 
\par         G2ServerFile  g2File  = new G2ServerFile(defPath, FileType.SharedGenericFile);
\par //        if (g2File.isFile())
\par //  \tab   defPath = g2File.getParent();
\par 
\par \tab if (fileDlg == null) \{
\par           T2URLDirectoryModel model   = new T2URLDirectoryModel(false, true, false, null, null);
\par           URLFileSystemView   sysView = new URLFileSystemView(model);
\par 
\par           // Create file chooser
\par           fileDlg = new JFileChooser (defPath, sysView);
\par         \}
\par }{\insrsid14833369 
\par \tab String txt = i18n.getString("FileSearchString");
\par \tab fileDlg.setApproveButtonText(i18n.getString("WarmbootButtonLabel"));
\par 
\par        }{\cf2\insrsid14833369  if (g2File.isFile())
\par   \tab   fileDlg.setSelectedFile(g2File);
\par 
\par }{\insrsid14833369         int dialogStatus = fileDlg.showDialog(frame, i18n.getString("WarmbootDialogTitle"));
\par 
\par \tab URLFile result = (URLFile)fileDlg.getSelectedFile();
\par 
\par \tab if (dialogStatus == JFileChooser.APPROVE_OPTION) \{
\par \tab   String path = LoadSaveKBTools.getG2FileSpecificationFromURL(connectionManager.getCurrentConnection(), result);
\par 
\par \tab   kbTextField.setText(path);
\par }{\cf2\insrsid14833369 //\tab   ((WarmbootDialog)getParent()).setURLFile(result);
\par //\tab   ((WarmbootDialog)getParent()).setG2FileSpecification(path);
\par }{\insrsid14833369 \tab \}
\par       \}
\par     \});
\par   \}
\par 
\par }\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720\faauto\rin0\lin720\itap0 {\f3\insrsid14833369 \'b7\tab }{\b\ul\insrsid14833369 C:\\bt\\g2i\\java\\com\\gensym\\uitools\\browsers
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid14833369 
\par {\listtext\pard\plain\b\cf5\insrsid14833369 \hich\af0\dbch\af0\loch\f0 29.\tab}}\pard \ql \fi-420\li1140\ri0\nowidctlpar\jclisttab\tx1140\faauto\ls4\rin0\lin1140\itap0\pararsid16515482 {\b\cf5\insrsid14833369 KbWorkspaceDynamicTreeNode.java}{
\b\cf5\insrsid16515482 \line }{\b\cf5\insrsid14833369 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid16515482 {\i\cf11\insrsid16515482\charrsid14833369 PCP:}{\i\cf11\insrsid16515482  Patch should be kept in ReThink/e-SCOR. I don\rquote t think all this is actually part of T2}{
\i\cf11\insrsid7291851 . Optionally you could add this code to T2 and define an API on the GensymApplication to get the list of filtered modules (the Sym
bol array below), which we can then customize in escor.java with the list below which the default implementation returns an empty array and does no processing).}{\insrsid16515482 
\par 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\cf2\insrsid14833369 private static final Symbol moduleFilter[] = \{
\par     }{\cf2\lang1031\langfe1033\langnp1031\insrsid14833369\charrsid595393 Symbol.intern("ESCOR-BOM"),
\par     Symb}{\cf2\lang1031\langfe1033\langnp1031\insrsid14833369\charrsid14833369 ol.intern("G2COM"),
\par     Symbol.intern("ESCOR-DEFINITIONS"),
\par     Symbol.intern("ESCOR-DIALOGS"),
\par     Symbol.intern("ESCOR-CUSTOMIZ"),
\par     Symbol.intern("ESCOR-MENUS"),
\par     Symbol.intern("BPRUI"),
\par     Symbol.intern("BPR"),
\par     Symbol.intern("G2UIFILE"),
\par     Symbol.intern("GXL"),
\par     Symbol.intern("METHODS"),
\par     Symbol.intern("GOLDUI"),
\par     Symbol.intern("GOLD"),
\par     Symbol.intern("GMS"),
\par     Symbol.intern("UIL"),
\par     Symbol.intern("UILCOMBO"),
\par     Symbol.intern("UILTDLG"),
\par     Symbol.intern("UILSLIDE"),
\par     Symbol.intern("UILSA"),
\par     Symbol.intern("UILLIB"),
\par     Symbol.intern("UILDEFS"),
\par     Symbol.intern("GFR"),
\par     Symbol.intern("SYS-MOD"),
\par     }{\cf2\insrsid14833369 Symbol.intern("UILROOT")
\par   \};
\par 
\par }{\cf1\insrsid14833369 private void gatherTopLevelWorkspaces(Symbol baseClass, Vector topWS) throws G2AccessException \{
\par     //System.out.println("running gatherTopLevelWorkspaces, baseClass: "+baseClass);
\par     Kb kb = cxn.getKb();
\par     Module mod = kb.getTopLevelModule();
\par     Module[] modules = kb.getModules();
\par    }{\cf2\insrsid14833369  boolean filterOut;
\par     Symbol name_;
\par 
\par     for (int p = 0 ; p < modules.length ; p++) \{
\par 
\par       Symbol modName_ = modules[p].getName();
\par       filterOut = false;
\par 
\par       // Check if in list
\par       for (int i = 0 ; i < moduleFilter.length && filterOut == false; i++) \{
\par \tab if (moduleFilter[i].equals(modName_))
\par \tab   filterOut = true;
\par }{\cf1\insrsid14833369     }{\cf2\insrsid14833369   \}
\par 
\par       //System.out.println("["+p+"]: modname? " + modName_ + ", filter: " + filterOut);
\par 
\par       // Filter out is not in list
\par       if (filterOut == false) \{
\par }{\cf1\insrsid14833369 
\par \tab KbWorkspace[] workspaces = modules[p].getTopLevelKbWorkspaces();
\par 
\par \tab }{\cf2\insrsid14833369 //System.out.println("num workspaces: " + workspaces.length);
\par }{\cf1\insrsid14833369 
\par \tab }{\cf2\insrsid14833369 for (int i = 0 ; i < workspaces.length ; i++) \{
\par 
\par \tab   name_ = (Symbol) workspaces[i].getNames();
\par \tab   //System.out.println("  wks: " + name_);
\par 
\par \tab   if (name_ != null)     // Only add named workspaces
\par }{\cf1\insrsid14833369 \tab     topWS.addElement(workspaces[i]);
\par \tab }{\cf2\insrsid14833369 \}
\par }{\cf1\insrsid14833369       \}
\par     \}
\par   \}
\par }{\cf2\insrsid14833369 
\par 
\par {\listtext\pard\plain\b\cf5\insrsid14833369 \hich\af0\dbch\af0\loch\f0 30.\tab}}\pard \ql \fi-420\li1140\ri0\nowidctlpar\jclisttab\tx1140\faauto\ls4\rin0\lin1140\itap0\pararsid16515482 {\b\cf5\insrsid14833369 ObjectDynamicTreeNode.java
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid16515482 {\b\cf5\insrsid16515482 
\par }{\i\cf11\insrsid16515482\charrsid14833369 PCP:}{\i\cf11\insrsid16515482  Patch}{\i\cf11\insrsid6902038 for bpr_Scenario }{\i\cf11\insrsid16515482  should be kept in ReThink/e-SCOR. I don\rquote t think all this is actually part of T2}{
\i\cf11\insrsid6902038  so the rest could be added to T2. If I recall the listeners did not add much, except overhead.}{\insrsid16515482 
\par 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\cf2\insrsid14833369 private static final Symbol BPR_SCENARIO_ = Symbol.intern("BPR-SCENARIO");
\par 
\par }{\cf1\insrsid14833369 /**
\par    * Messaged the first time getChildCount is messaged. 
\par    */
\par   protected void loadChildren() \{
\par 
\par     //System.out.println("ObjectDynamicTreeNode.loadChildren: " + this);
\par 
\par     if (cxn == null) return;
\par 
\par     InstanceData data = (InstanceData)getUserObject();
\par     Symbol dataType = data.getDataType();
\par 
\par     //System.out.println("loadChildren cont. dataType>> " + dataType);
\par 
\par     if (dataType.equals(OBJECT_HIERARCHY_)) \{
\par 
\par       try \{
\par 
\par \tab loadObjectHiearchy();
\par 
\par       \} catch (G2AccessException gae) \{
\par 
\par \tab Trace.exception(gae);
\par  \tab new ErrorDialog(null, i18n.getString("G2AccessException"), true, 
\par \tab \tab \tab gae.getMessage(), null).setVisible(true);
\par       \}
\par     \}
\par 
\par     else if (dataType.equals(MODULE_)) \{
\par 
\par       try \{
\par 
\par \tab loadTopLevelWorkspacesForModule(data);
\par 
\par       \} catch (G2AccessException gae) \{
\par 
\par \tab Trace.exception(gae);
\par       \}
\par     \}
\par 
\par     else if (dataType.equals(KB_WORKSPACE_)) \{
\par 
\par       try \{
\par 
\par \tab loadItemsOnWorkspace((KbWorkspace)data.getItem());
\par 
\par       \} catch (G2AccessException gae) \{
\par 
\par \tab Trace.exception(gae);
\par       \}
\par     \}
\par     
\par     else if ((dataType.equals(ENTITY_))) \{
\par 
\par       Entity entity = (Entity)data.getItem();
\par 
\par      }{\cf2\insrsid14833369  if (!entity.isInstanceOfG2Class(BPR_SCENARIO_)) \{}{\cf1\insrsid14833369 
\par 
\par \tab try \{
\par 
\par \tab   if (parent.getShowNodesForSubWorkspace(entity))
\par \tab     loadSubworkspace(entity);
\par \tab   else 
\par \tab     loadItemsOnWorkspace(entity.getSubworkspace());
\par 
\par \tab \} catch (G2AccessException gae) \{
\par 
\par \tab   Trace.exception(gae);
\par \tab \}
\par       \}}{\cf2\insrsid14833369 
\par     \}}{\cf1\insrsid14833369 
\par 
\par     else \{
\par       //System.out.println("ObjectDynamicTreeNode: unhandle case in loadChildren");
\par     \}
\par   \}
\par 
\par private void loadTopLevelWorkspacesForModule(InstanceData data) throws G2AccessException \{
\par 
\par     //System.out.println("loadTopLevelWorkspacesForModule: " + data.toString());
\par 
\par     Module module = data.getModule();
\par     //System.out.println("module: " + module.getName());
\par 
\par     if (module != null) \{
\par 
\par       KbWorkspace[] topLevelWorkspaces = module.getTopLevelKbWorkspaces();
\par 
\par       for (int i = 0 ; i < topLevelWorkspaces.length ; i++) \{
\par 
\par \tab KbWorkspace wksp = topLevelWorkspaces[i];
\par 
\par \tab }{\cf2\insrsid14833369 try \{
\par \tab   Symbol name_ = (Symbol) wksp.getNames();
\par 
\par \tab   //System.out.println("  wks: " + name_);
\par 
\par \tab   if (name_ != null) \{ // Only add named workspaces
\par 
\par \tab     //PCP wksp.addItemListener(parent);
\par }{\cf1\insrsid14833369 \tab     InstanceData newData = parent.getInstanceDataFactory().createInstanceData(wksp);
\par 
\par \tab     ObjectDynamicTreeNode newNode =  new ObjectDynamicTreeNode(cxn, newData, parent);
\par \tab     insert(newNode, 0);
\par \tab   \}
\par 
\par \tab }{\cf2\insrsid14833369 \} catch (G2AccessException gae) \{
\par \tab   //\tab   Trace.exception(gae);
\par \tab   //System.out.println(" -- WKS without name");
\par \tab \}
\par       \} 
\par }{\cf1\insrsid14833369       hasLoaded = true;
\par     \} 
\par   \}
\par 
\par private void loadItemsOnWorkspace(KbWorkspace wksp) throws G2AccessException \{
\par 
\par     //System.out.println("loadItemsOnWorkspace");
\par 
\par     WorkspaceAdapter wkspAdapter;
\par     wksp.addWorkspaceListener(wkspAdapter = new WorkspaceAdapter() \{
\par 
\par       public void workspaceItemAdded (WorkspaceEvent event) \{\}
\par       public void workspaceItemRemoved (WorkspaceEvent event) \{\}
\par       public void receivedInitialDownload(WorkspaceEvent event) \{\}
\par       public void workspaceItemAttributesChanged(WorkspaceEvent evt) \{\}
\par     \});
\par 
\par     Item[] items = wksp.getItems();
\par 
\par     if (items != null) \{
\par 
\par       int cnt = 0;
\par       Vector classFilter = parent.getClassFilter();
\par 
\par       for (int i = 0; i < items.length ; i++) \{
\par 
\par \tab Item item = items[i];
\par 
\par \tab if (!(classFilter.contains(item.getG2ClassName()))) \{
\par 
\par \tab }{\cf2\insrsid14833369   //PCP item.addItemListener(parent);
\par }{\cf1\insrsid14833369 \tab   InstanceData newData = parent.getInstanceDataFactory().createInstanceData(item);
\par 
\par \tab   if (item instanceof Entity) \{
\par 
\par \tab     KbWorkspace subWS = ((Entity)item).getSubworkspace();
\par 
\par \tab     if (subWS == null)
\par \tab       insert(new BasicTreeNode(cxn, newData), cnt++);
\par \tab     else \{
\par \tab       ObjectDynamicTreeNode newNode = new ObjectDynamicTreeNode(cxn, newData, parent);
\par \tab       insert(newNode, cnt++);\tab       
\par \tab     \}
\par 
\par \tab   \} else \{
\par 
\par \tab     insert(new BasicTreeNode(cxn, newData), cnt++);
\par \tab   \}
\par \tab \}
\par       \}
\par       hasLoaded = true;
\par     \}
\par     wksp.removeWorkspaceListener(wkspAdapter);
\par   \}
\par 
\par private void loadSubworkspace(Entity entity) throws G2AccessException \{
\par 
\par     KbWorkspace subWS = entity.getSubworkspace();
\par    }{\cf2\insrsid14833369  //PCP subWS.addItemListener(parent);
\par }{\cf1\insrsid14833369 
\par     InstanceData newData = parent.getInstanceDataFactory().createInstanceData(subWS);
\par 
\par     ObjectDynamicTreeNode newNode = new ObjectDynamicTreeNode(cxn, newData, parent);
\par     insert(newNode, 0);
\par 
\par     hasLoaded = true;
\par   \}
\par 
\par   }{\cf2\insrsid14833369 public void removeAllChildren() \{
\par     super.removeAllChildren();
\par     hasLoaded = false;
\par   \}
\par 
\par }\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720\faauto\rin0\lin720\itap0 {\f3\insrsid14833369 \'b7\tab }{\b\ul\insrsid14833369 C:\\bt\\g2i\\java\\com\\gensym\\uitools\\commands
\par }{\insrsid14833369 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid16515482 {\i\cf11\insrsid16515482\charrsid14833369 PCP:}{\i\cf11\insrsid16515482  Patch should be kept in ReThink/e-SCOR. }{\i\cf11\insrsid7108165 
Changing that in T2 has too much fan out. They used long names for commands, not at all the short names you would expect in an application, so we overwrote them since they did not want to change them.}{\insrsid16515482 
\par }\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720\faauto\rin0\lin720\itap0 {\insrsid16515482 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\b\cf5\insrsid14833369 31.  BrowserCommandLongResource.properties}{\insrsid14833369 
\par }{\cf2\insrsid14833369 NewProject=New Project
\par OpenProject=Open Project
\par CloseProject=Close Project
\par SaveProject=Save Project
\par SaveProjectAs=Save As Project
\par SaveProjectAsAllFile=Save Project in ALL File
\par }{\insrsid14833369 
\par }{\cf2\insrsid14833369 ViewLogbook=View Logbook
\par ViewMessageBoard=View Message Board
\par 
\par ModuleHierarchy=Display Module Hierarcy
\par WorkspaceHierarchy=Display Workspace Hierarchy
\par ClassHierarchy=Display Class Hierarchy
\par ObjectHierarchy=Display Object Hierarchy
\par 
\par NewModule=New module
\par MergeModule=Merge Nodule
\par RenameModule=Rename Module
\par SaveModule=Save Module
\par DeleteModule=Delete Module
\par 
\par /AlignLeft=Align the left edges of current selection
\par //AlignCenter=Align the centers of current selection
\par //AlignRight=Align the right edges of current selection
\par //AlignTop=Align the top edges of current selection
\par //AlignMiddle=Align the middles of current selection
\par //AlignBottom=Align the bottom edges of current selection
\par //DistributeHorizontally=Distribute the current selection horizontally
\par //DistributeVertically=Distribute the current selection vertically
\par 
\par //Rotate90Clockwise=Rotate current selection 90 degrees clockwise
\par //Rotate90CounterClockwise=Rotate current selection 90 degress counter clockwise
\par //Rotate180Degrees=Rotate current selection 180 degrees
\par //FlipVertical=Flip current selection vertically
\par //FlipHorizontal=Flip current selection horizontally
\par 
\par //LiftSelectionToTop=Bring the current selection to the front
\par //DropSelectionToBottom=Send the current selection to the back
\par 
\par //NudgeSelectionUp=Increment the Y value of the current selection by one pixel
\par //NudgeSelectionDown=Decrement the Y value of the current selection by one pixel
\par //NudgeSelectionLeft=Decrement the X value of the current selection by one pixel
\par //NudgeSelectionRight=Increment the X value of the current selection by one pixel
\par }{\insrsid14833369 
\par }\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720\faauto\rin0\lin720\itap0 {\f3\insrsid14833369 \'b7\tab }{\b\ul\insrsid14833369 C:\\bt\\g2i\\java\\com\\gensym\\uitools\\inspect
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid14833369 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid7043362 {\i\cf11\insrsid7043362\charrsid14833369 PCP:}{\i\cf11\insrsid7043362  See above. Managing accessibility based on. Add to T2}{\insrsid7043362 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid7043362 
\par }{\b\cf5\insrsid14833369 32.  InspectItemCommands
\par }{\insrsid14833369 public void setSelection(Item[] items) \{
\par     selectionContainments.clear();
\par     this.selection = items;
\par     int count = 0;
\par     if (items != null)
\par       count = items.length;
\par     boolean available = count > 0;
\par     setAvailable(GO_TO, available);
\par     setAvailable(HIDE, available);
\par     setAvailable(PROPERTIES, available);
\par     if (items == null) return;
\par     for (int i=0;i<count;i++) \{
\par       try \{
\par \tab Item item = items[i];
\par 
\par       }{\cf2\insrsid14833369   boolean isItemPrivate = false;
\par         if (item != null)
\par           isItemPrivate = com.gensym.core.GensymApplication.getApplication().checkIfPrivate(item, false);
\par 
\par \tab if (item == null || isItemPrivate == true) }{\insrsid14833369 \{
\par \tab   setAvailable(GO_TO, false);
\par \tab   setAvailable(PROPERTIES, false);
\par \tab   return;
\par \tab \}
\par \tab Item[] selectionContainment = getWorkspaceAndItemOnWksp(item);
\par \tab if (selectionContainment == null) \{
\par \tab   setAvailable(GO_TO, false);
\par \tab   selectionContainments.clear();
\par \tab   return;
\par \tab \}
\par \tab selectionContainments.put(item, selectionContainment);
\par       \} catch(G2AccessException g2ae) \{
\par \tab Trace.exception(g2ae);
\par \tab setAvailable(GO_TO, false);
\par \tab return;
\par       \}
\par     \}
\par   \}
\par 
\par }\pard \ql \li360\ri0\nowidctlpar\faauto\rin0\lin360\itap0 {\insrsid14833369     }{\b\cf5\insrsid14833369   33.  InspectLongResource.properties
\par }{\insrsid14833369     }{\cf2\insrsid14833369  OptionalMethodName=Root Method Name
\par      OptionalClassName=Root Class Name
\par      OptionalModuleName=Root Module Name
\par      OptionalWorkspaceName=Root Workspace Name
\par }{\insrsid14833369 
\par     }{\b\cf5\insrsid14833369   34.  InspectShortResource.properties}{\insrsid14833369 
\par       }{\cf2\insrsid14833369 OptionalMethodName=Root Method Name:
\par       OptionalClassName=Root Class Name:
\par       OptionalModuleName=Root Module Name:
\par       OptionalWorkspaceName=Root Workspace Name:
\par }{\insrsid14833369 
\par }\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720\faauto\rin0\lin720\itap0 {\f3\insrsid14833369 \'b7}{\f3\lang1031\langfe1033\langnp1031\insrsid14833369\charrsid14833369 \tab }{\b\ul\lang1031\langfe1033\langnp1031\insrsid14833369\charrsid14833369 C:\\bt\\g2i
\\java\\com\\gensym\\wksp
\par 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\b\cf5\lang1031\langfe1033\langnp1031\insrsid14833369\charrsid14833369 35.  DefaultWorkspaceViewEventHandler.java
\par }{\lang1031\langfe1033\langnp1031\insrsid14833369\charrsid14833369 none
\par   
\par {\listtext\pard\plain\b\cf5\lang1031\langfe1033\langnp1031\insrsid14833369\charrsid14833369 \hich\af0\dbch\af0\loch\f0 36.\tab}}\pard \ql \fi-420\li1140\ri0\nowidctlpar\jclisttab\tx1140\faauto\ls5\rin0\lin1140\itap0\pararsid1467198 {
\b\cf5\lang1031\langfe1033\langnp1031\insrsid14833369\charrsid14833369 ScalableWorkspaceView.java}{\b\cf5\lang1031\langfe1033\langnp1031\insrsid1467198 \line }{\b\cf5\lang1031\langfe1033\langnp1031\insrsid14833369 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid1467198 {\i\cf11\insrsid1467198\charrsid14833369 PCP:}{\i\cf11\insrsid1467198  don\rquote t recall the issue, but was related to using the 
shink-wrap and the scaling of the window to fit the workspace running into endless loops.}{\i\cf11\insrsid9724660  Important, but don\rquote 
t recall the details. I think timing was a big issue as well where it would bounce back and forth between scale to fit and window sizing due to listeners and client/server event propagation, but don\rquote t recall the details!}{\i\cf11\insrsid1467198 

\par }{\b\cf5\insrsid1467198\charrsid1467198 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid14833369\charrsid1467198 public void scrollToLocation(int x, int y, boolean center)\{
\par     }{\insrsid14833369 Component parent = getParent();
\par     }{\cf2\insrsid14833369  //Get the size of the parent component
\par     Dimension comp=  parent.getSize();}{\insrsid14833369 \tab }{\cf2\insrsid14833369 
\par }{\insrsid14833369     if (parent instanceof JViewport)\{
\par       JViewport viewport = (JViewport)parent;
\par      }{\cf2\insrsid14833369  //Get the size of the viewport
\par \tab   Dimension viewSize =viewport.getViewSize();
\par \tab \tab if (!comp.equals(viewSize))
\par \tab \tab \{
\par }{\insrsid14833369 \tab \tab \tab Rectangle lbnds = getLogicalBounds();
\par \tab \tab \tab int hlmin = horizontal_state.getLogicalMin();
\par \tab \tab \tab int vlmin = vertical_state.getLogicalMin();
\par \tab \tab \tab Point p = new Point(x - hlmin, y - vlmin);
\par 
\par \tab \tab \tab if (tx != null)
\par \tab \tab \tab tx.transform(p, p);
\par 
\par \tab \tab \tab Rectangle bnds = viewport.getViewRect();
\par \tab \tab \tab int width = bnds.width;
\par \tab \tab \tab int height = bnds.height;
\par \tab \tab \tab p.x= Math.max(0, p.x-width/2);
\par \tab \tab \tab p.y= Math.max(0, p.y-height/2);
\par \tab \tab \tab viewport.setViewPosition(p);
\par \tab \tab \tab }{\cf2\insrsid14833369 //Make sure to repaint the viewport after scrolling is done
\par \tab \tab \tab viewport.repaint();
\par }{\insrsid14833369 \tab \tab }{\cf2\insrsid14833369 \}
\par }{\insrsid14833369     \} else \{
\par       scrollToLocation(x, true);
\par       }{\lang1036\langfe1033\langnp1036\insrsid14833369\charrsid14833369 scrollToLocation(y, false);
\par     \}
\par   \}
\par 
\par private void scaleToFit()\{
\par     }{\insrsid14833369 Dimension size = getSize();
\par     Rectangle logicalBounds = getLogicalBounds();
\par     double scale = Math.min((double)size.width/logicalBounds.width,
\par \tab \tab \tab     (double)size.height/logicalBounds.height);
\par    }{\cf2\insrsid14833369  double lastScale = Math.min(getScaleX(), getScaleY());
\par     double delta = Math.abs(lastScale - scale);
\par 
\par     //System.out.println("new scaleToFit: " + scale + " lastScale: " + lastScale + " delta: " + delta);
\par 
\par     if (delta > 0.01) \{
\par }{\insrsid14833369 
\par       try\{
\par         AffineTransform tx = new AffineTransform();
\par         }{\lang1040\langfe1033\langnp1040\insrsid14833369\charrsid14833369 tx.setToScale(scale, scale);
\par         setTransform(tx);
\par       }{\lang1036\langfe1033\langnp1036\insrsid14833369\charrsid14833369 \}
\par       catch(NoninvertibleTransformException ex)\{
\par         Trace.exception(ex);
\par       \}}{\cf2\lang1036\langfe1033\langnp1036\insrsid14833369\charrsid14833369 
\par     \}}{\lang1036\langfe1033\langnp1036\insrsid14833369\charrsid14833369 
\par   \}
\par 
\par 
\par }{\b\cf5\lang1036\langfe1033\langnp1036\insrsid14833369\charrsid14833369 37.  WorkspaceIconImpl.java
\par }{\lang1036\langfe1033\langnp1036\insrsid14833369\charrsid14833369 none
\par 
\par }{\b\cf5\lang1036\langfe1033\langnp1036\insrsid14833369\charrsid14833369 38.  WorkspaceView.java}{\lang1036\langfe1033\langnp1036\insrsid14833369\charrsid14833369 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f1\fs20\lang1036\langfe1033\langnp1036\insrsid14833369\charrsid14833369            }{\lang1036\langfe1033\langnp1036\insrsid14833369\charrsid14833369   private void initialize()
\par               }{\insrsid14833369 \{
\par               currentSelection = new WorkspaceSelection (this);
\par               this.selnListeners = new Vector ();  
\par      \tab   this.subblocks = new Hashtable();
\par               addScrollObserver (this, true);//for bean scrolling
\par      \tab   addScrollObserver (this, false);//for bean scrolling
\par      \tab   ColorTable table = WorkspaceColorTable.createDefaultColorTable();
\par     \tab  setColorTable(table);
\par      \tab  }{\cf2\insrsid14833369 initializeEventHandler();
\par }{\insrsid14833369      \tab  menuGenerator = makeSelectionCommandGenerator ();
\par   \tab  \}
\par 
\par    /**
\par    * Access needed by Commands
\par    * @undocumented
\par    */
\par   public void pasteClipboardContents (Item[] data, int centerX, int centerY) throws G2AccessException \{
\par     if (hitFatalError) return;
\par     synchronized (systemClipboard) \{
\par       Sequence iList = createSequenceOfSelections (data);
\par       Point selnCenter = determineCenterOfSelection (data);
\par       Object[] rpcArgs = \{iList, getItem (),
\par \tab \tab \tab   new Integer (centerX - selnCenter.x),
\par \tab \tab \tab   new Integer (centerY - selnCenter.y)\};
\par       TwAccess cxn = (TwAccess)((ImplAccess)getItem ()).getContext ();
\par       Symbol rpcName_ = (clipboardDataWasCut ? G2_TRANSFER_ITEMS_ : G2_CLONE_AND_TRANSFER_ITEMS_);
\par \tab \tab if (clipboardDataWasCut) 
\par \tab \tab \{
\par \tab \tab \tab cxn.callRPC (rpcName_, rpcArgs);
\par \tab \tab \tab clipboardDataWasCut = false;
\par \tab \tab }{\cf1\insrsid14833369 \} 
\par }{\i\cf11\insrsid8130948\charrsid14833369 PCP:}{\i\cf11\insrsid8130948  again here we could us a method on GensymApplication we could customize in escor.java and leave the default implementation in escor.java, but th
e functionality is vey important for escor/rethink and actually many other applications since we need OO approaches.}{\i\cf11\insrsid10181467  If we define custom methods, we should create them in g2i GRTL and then customize them as required}{
\i\cf11\insrsid8130948 
\par }{\insrsid14833369 \tab \tab }{\cf2\insrsid14833369 else 
\par \tab \tab \{
\par \tab \tab \tab // 08/12/2002
\par \tab \tab \tab // Changed to use custom paste procedure instead of G2_CLONE_AND_TRANSFER_ITEMS_. The reason
\par \tab \tab \tab // is that it is not a method and we need custom behavior such as clone and init the subworkspace.
\par \tab \tab \tab // Using gfr-copy does not work since it does not fire when the system procedure is called only
\par \tab \tab \tab // later when the object is moved.
\par \tab \tab \tab iList = (Sequence) cxn.callRPC (/*rpcName_*/ Symbol.intern("DS-PASTE-ITEMS"), rpcArgs);
\par \tab \tab \}
\par }{\insrsid14833369       clearSelection ();
\par       setItemsPendingSelection (iList, null);
\par     \}
\par   \}
\par 
\par }{\cf2\insrsid14833369 private static final Symbol BPRNUI_SETUP_AFTER_DROP_ON_WORKSPACE_ = Symbol.intern("BPRNUI-SETUP-AFTER-DROP-ON-WORKSPACE");
\par }{\f1\fs20\insrsid14833369 
\par void dropItem(MouseEvent me, Point startPoint) \{//throws G2AccessException \{
\par     //System.out.println ("Notifying Listeners of Drop!");
\par     //System.out.println ("Creating New Item!");
\par     clearSelection ();
\par     Item newG2Item = (Item) currentButton.createObject ();
\par     }{\f1\fs20\lang1036\langfe1033\langnp1036\insrsid14833369\charrsid14833369 int x = me.getX (); int y = me.getY ();
\par     }{\f1\fs20\insrsid14833369 int top, right, left, bottom;
\par     Point pt = new Point (x, y);
\par     translateWindowToView (pt);
\par     translateViewToWorkspace (pt);
\par     try \{
\par       newG2Item.transferTo (getWorkspace(), pt.x, pt.y);
\par       if (startPoint != null) \{
\par \tab \tab translateWindowToView (startPoint);
\par \tab \tab translateViewToWorkspace (startPoint);
\par \tab \tab if (pt.x<startPoint.x) \{
\par \tab \tab \tab left = pt.x;
\par \tab \tab \tab right = startPoint.x;
\par \tab \tab \} else \{
\par \tab \tab \tab left = startPoint.x;
\par \tab \tab \tab right = pt.x;
\par \tab \tab \}
\par \tab \tab if (pt.y<startPoint.y) \{
\par \tab \tab \tab top = startPoint.y;
\par \tab \tab \tab bottom = pt.y;
\par \tab \tab \} else \{
\par \tab \tab \tab top = pt.y;
\par \tab \tab \tab bottom = startPoint.y;
\par \tab \tab \}
\par \tab \tab if (left != right && top != bottom) 
\par \tab \tab   newG2Item.setBounds(left, top, right, bottom);
\par \tab   \}
\par \tab   //WorkspaceElement wElt = findElement (newG2Item); <- Select it when we get notified
\par \tab    currentPalette.dropOccurred();
\par \tab    if (workspace.getPermanent())//NOTE: attribute not cached!
\par \tab \tab \tab newG2Item.makePermanent();
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid12076809 {\f1\fs20\insrsid14833369       }{\i\cf11\insrsid12076809\charrsid14833369 PCP:}{\i\cf11\insrsid12076809  
again here we could us a method on GensymApplication we could customize in escor.java and leave the default implementation in escor.java, but th
e functionality is vey important for escor/rethink and actually many other applications since we need OO approaches. If we define custom methods, we should create them in g2i GRTL and then customize them as required
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid14833369 
\par \tab }{\f1\fs20\cf2\insrsid14833369 // PCP 07/15/2002
\par }{\f1\fs20\insrsid14833369 \tab }{\f1\fs20\cf2\insrsid14833369 // BAD PRACTICE TO PATCH TW2 but I had call this API in sync with the dropping of items
\par \tab // Subclassing does not work since the created object is internal to this API and is not returned to superior
\par \tab   ((com.gensym.escor.eSCOR)com.gensym.core.GensymApplication.getApplication()).getConnection().startRPC(BPRNUI_SETUP_AFTER_DROP_ON_WORKSPACE_, new Object[] \{newG2Item\});
\par }{\f1\fs20\insrsid14833369 
\par \tab   Vector itemsToSelect = new Vector();
\par       itemsToSelect.addElement(newG2Item);
\par       clearSelection ();
\par       setItemsPendingSelection(itemsToSelect, null);
\par     \} catch (G2AccessException gae) \{
\par       System.out.println("exception in sizing");
\par       try \{
\par \tab \tab handleG2AccessException (gae, ANOMALY);//bad palette transfer
\par       \} catch (FatalWorkspaceException fwe) \{
\par \tab \tab return;
\par       \}
\par     \}
\par   \}
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\f1\fs20\insrsid14833369       
\par }}